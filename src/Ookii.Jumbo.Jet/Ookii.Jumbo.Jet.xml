<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ookii.Jumbo.Jet</name>
    </assembly>
    <members>
        <member name="T:Ookii.Jumbo.Jet.AdditionalProgressCounterAttribute">
            <summary>
            Indicates that a task, multi record reader or channel reports additional progress.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.AdditionalProgressCounterAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.AdditionalProgressCounterAttribute"/> class.
            </summary>
            <param name="displayName">The id of the progress counter.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.AdditionalProgressCounterAttribute.DisplayName">
            <summary>
            Gets the name of the counter.
            </summary>
            <value>The name of the counter.</value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.AdditionalProgressValue">
            <summary>
            The value of an additional progress counter.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.AdditionalProgressValue.SourceName">
            <summary>
            Gets or sets the name of the source of the progress counter.
            </summary>
            <value>The name of the source.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.AdditionalProgressValue.Progress">
            <summary>
            Gets or sets the progress.
            </summary>
            <value>The progress.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.AdditionalProgressValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute">
            <summary>
            Attribute for task classes that indicates that the input record reader may reuse the same
            object instance for every record.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.AllowRecordReuseAttribute.PassThrough">
            <summary>
            Gets or sets a value that indicates whether the task will pass on the instances it receives
            from its input to its output.
            </summary>
            <remarks>
            <para>
              If the task passes the same instance it gets as input to its output, and the task uses
              a pipeline output channel, record reuse is only allowed if the output tasks of the
              pipeline channel also allow record reuse. Set this property to <see langword="true"/>
              to indicate Jumbo Jet should verify any output tasks on a pipeline channel also
              have the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute before allowing
              record reuse.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.ArchivedJob">
            <summary>
            Represents information about a job that has been archived.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ArchivedJob.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.ArchivedJob"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ArchivedJob.#ctor(Ookii.Jumbo.Jet.JobStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.ArchivedJob"/> class.
            </summary>
            <param name="job">The job.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.ArchivedJob.JobId">
            <summary>
            Gets or sets the ID of the job.
            </summary>
            <value>The job ID.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.ArchivedJob.JobName">
            <summary>
            Gets or sets the friendly name of the job.
            </summary>
            <value>The friendly name of the job.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.ArchivedJob.IsSuccessful">
            <summary>
            Gets or sets a value indicating whether this job succeeded
            </summary>
            <value>
            	<see langword="true"/> if this job succeeded; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.ArchivedJob.StartTime">
            <summary>
            Gets or sets the UTC start time of the job.
            </summary>
            <value>The start time in UTC.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.ArchivedJob.EndTime">
            <summary>
            Gets or sets the UTC end time of the job.
            </summary>
            <value>The end time in UTC.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.ArchivedJob.TaskCount">
            <summary>
            Gets or sets the number of tasks in the job.
            </summary>
            <value>The number of tasks in the job.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ArchivedJob.Write(System.IO.BinaryWriter)">
            <summary>
            Writes the object to the specified writer.
            </summary>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter"/> to serialize the object to.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ArchivedJob.Read(System.IO.BinaryReader)">
            <summary>
            Reads the object from the specified reader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to deserialize the object from.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.AssemblyResolver">
            <summary>
            Enables the use of <see cref="M:System.Type.GetType(System.String)"/> to resolve types in assemblies loaded with <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)"/>.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.AssemblyResolver.Register">
            <summary>
            Registers the assembly resolver with the current AppDomain.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.ChannelConfiguration">
            <summary>
            Represents configuration information about a channel through which two tasks communicate.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.ChannelType">
            <summary>
            Gets or sets the type of the channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.MultiInputRecordReaderType">
            <summary>
            Gets or sets the type of multi input record reader to use to combine the the input readers of this channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.OutputStage">
            <summary>
            Gets or sets the ID of the stage whose tasks that read from the channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionsPerTask">
            <summary>
            Gets or sets the number of partitions to create for every output task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.DisableDynamicPartitionAssignment">
            <summary>
            Gets or sets a value indicating whether to disable dynamic partition assignment.
            </summary>
            <value>
            	<see langword="true"/> if dynamic partition assignment; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            <para>
              If <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionsPerTask"/> is larger than 1, tasks can dynamically receive additional partitions
              besides those that were initially assigned to them.
            </para>
            <para>
              If this property is set to <see langword="true"/>, dynamic partition assignment is disabled for
              the receiving stage of this channel, and every task will only ever process the partitions it was
              initially assigned.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionAssignmentMethod">
            <summary>
            Gets or sets the method used to assign partitions to tasks when the job is started.
            </summary>
            <value>The partition assignment method.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.ForceFileDownload">
            <summary>
            Gets or sets a value that indicates whether the file channel should always use TCP downloads.
            </summary>
            <value>
            For a <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.ChannelType"/> value of <see cref="F:Ookii.Jumbo.Jet.Channels.ChannelType.File"/>, <see langword="true"/>
            to indicate that it should always use TCP to download the files even if the input task is on the same physical
            host as the output task; <see langword="false"/> to indicate it should access the output file directly if the
            input task is local. This property has no effect for other types of channels.
            </value>
            <remarks>
            This property is primarily used for testing of the TCP server.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionerType">
            <summary>
            Gets or sets the type of partitioner to use to split the input of the channel amount its outputs.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.ChannelException">
            <summary>
            Exception that is thrown if an error occurs in the TCP or file channel.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.ChannelException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.ChannelException"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.ChannelException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.ChannelException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.ChannelException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.ChannelException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner exception.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.ChannelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.ChannelException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.ChannelType">
            <summary>
            The type of a communication channel between two tasks.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.ChannelType.File">
            <summary>
            The input task writes a file to disk, which the output task then downloads and reads from.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.ChannelType.Pipeline">
            <summary>
            The input task's output is directly pipelined to the output task.
            </summary>
            <remarks>
            Tasks connected by
            this channel type are treated as a single entity from the scheduler's point of view because they
            are executed in the same process.
            </remarks>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.ChannelType.Tcp">
            <summary>
            The input task connects to the output task via TCP.
            </summary>
            <remarks>
            This channel has some limitations: all output tasks of the channel must run simultaneously,
            and the job will fail if a single task fails.
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.FileChannelOutputType">
            <summary>
            Indicates how the <see cref="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel"/> writes intermediate data to the disk.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.Spill">
            <summary>
            A <see cref="T:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1"/> is used to write the output. The intermediate data will be a single file
            containing multiple regions for each partition. The data does not contain record size markers.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill">
            <summary>
            A <see cref="T:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1"/> is used to write the output. The intermediate data will be a single file
            containing one region for each partition, and the data in each region is sorted. The data contains record size markers
            so it can be read using the <see cref="T:Ookii.Jumbo.IO.RawRecord"/> class, allowing for raw comparisons on the receiving
            side on the channel.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.FileInputChannel">
            <summary>
            Represents the reading end of a file channel.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.InputServer.AddCompletedTask(Ookii.Jumbo.Jet.CompletedTask)">
            <summary>
            NOTE: Only call inside _orderedServers lock
            </summary>
            <param name="task"></param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.InputServer.TasksToDownload">
            <summary>
            NOTE: Only use from download thread.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.InputServer.TasksToDownloadCount">
            <summary>
            NOTE: Only use from download thread.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.InputServer.UpdateTasksToDownload">
            <summary>
            NOTE: Only call from download thread and inside _orderedServers lock.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.InputServer.NotifyDownloadSuccess(System.Int32)">
            <summary>
            NOTE: Only call from download thread.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility,Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.FileInputChannel"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for the task that this channel is for.</param>
            <param name="inputStage">The input stage that this file channel reads from.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.LocalBytesRead">
            <summary>
            Gets the number of bytes read from the local disk.
            </summary>
            <remarks>
            This property returns the total amount of data read from the local disk. This includes the compressed size of any local input files, and
            any downloaded input files that could not be stored in memory.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.LocalBytesWritten">
            <summary>
            Gets or sets the number of bytes written to the local disk.
            </summary>
            <value>The local bytes written.</value>
            <remarks>
            This property returns the total amount of data written to the local disk. This equals the combined size of any downloaded input files
            that could not be stored in memory.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.NetworkBytesRead">
            <summary>
            Gets the number of bytes read from the network. This is always the compressed figure.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.NetworkBytesWritten">
            <summary>
            Gets the number of bytes written over the network.
            </summary>
            <value>The network bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.AdditionalProgress">
            <summary>
            Gets the additional progress value.
            </summary>
            <value>The additional progress value.</value>
            <remarks>
            This property is thread safe.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.UsesMemoryStorage">
            <summary>
            Gets a value indicating whether the input channel uses memory storage to store inputs.
            </summary>
            <value>
            	<see langword="true"/> if the channel uses memory storage; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.MemoryStorageLevel">
            <summary>
            Gets the current memory storage usage level.
            </summary>
            <value>The memory storage usage level, between 0 and 1.</value>
            <remarks>
            	<para>
            The <see cref="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.MemoryStorageLevel"/> will always be 0 if <see cref="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.UsesMemoryStorage"/> is <see langword="false"/>.
            </para>
            	<para>
            If an input was too large to be stored in memory, <see cref="P:Ookii.Jumbo.Jet.Channels.FileInputChannel.MemoryStorageLevel"/> will be 1 regardless of
            the actual level.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.CreateRecordReader">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the channel can read its input.
            </summary>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> for the channel.</returns>
            <remarks>
            This function will create a <see cref="T:Ookii.Jumbo.IO.MultiRecordReader`1"/> that serializes the data from all the different input tasks.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.AssignAdditionalPartitions(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Assigns additional partitions to this input channel.
            </summary>
            <param name="additionalPartitions">The additional partitions.</param>
            <remarks>
            <para>
              This method will only be called after the task finished processing all previously assigned partitions.
            </para>
            <para>
              This method will never be called if <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionsPerTask"/> is 1
              or <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.DisableDynamicPartitionAssignment"/> is <see langword="true"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.Dispose">
            <summary>
            Cleans up all the resources held by this class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileInputChannel.Dispose(System.Boolean)">
            <summary>
            Cleans up all the resources held by this class.
            </summary>
            <param name="disposing"><see langword="true"/> to clean up managed and unmanaged resources; <see langword="false" /> to clean up unmanaged resources only.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel">
            <summary>
            Represents the writing end of a file channel between two tasks.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileOutputChannel.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for the task that this channel is for.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileOutputChannel.LocalBytesRead">
            <summary>
            Gets the number of bytes read from the local disk.
            </summary>
            <value>The local bytes read.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileOutputChannel.LocalBytesWritten">
            <summary>
            Gets the number of bytes written to the local disk.
            </summary>
            <value>The local bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileOutputChannel.NetworkBytesRead">
            <summary>
            Gets the number of bytes read over the network.
            </summary>
            <value>The network bytes read.</value>
            <remarks>Only channels should normally use this property.</remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.FileOutputChannel.NetworkBytesWritten">
            <summary>
            Gets the number of bytes written over the network.
            </summary>
            <value>The network bytes written.</value>
            <remarks>Only channels should normally use this property.</remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileOutputChannel.CreateRecordWriter``1">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the channel can write its output.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> for the channel.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.FileOutputChannel.CreateChannelFileName(System.String)">
            <summary>
            Creates the name of an intermediate file for the channel. For Jumbo internal use only.
            </summary>
            <param name="inputTaskAttemptId">The input task attempt id.</param>
            <returns>The intermediate file name.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.IChannelMultiInputRecordReader">
            <summary>
            Interface used by multi input record readers that read data from a channel.
            </summary>
            <remarks>
            <para>
              This interface can be used by multi input record readers that need to know what input channel
              they are reading from.
            </para>
            <para>
              If a multi input record reader implements this interface, Jumbo Jet will set the <see cref="P:Ookii.Jumbo.Jet.Channels.IChannelMultiInputRecordReader.Channel"/>
              property after the record reader is created. The <see cref="P:Ookii.Jumbo.Jet.Channels.IChannelMultiInputRecordReader.Channel"/> property will only
              be set if the reader is reading from exactly one channel.
            </para>
            <para>
              If the record reader also implements <see cref="T:Ookii.Jumbo.Jet.IConfigurable"/>, <see cref="M:Ookii.Jumbo.Jet.IConfigurable.NotifyConfigurationChanged"/>
              will be called after the <see cref="P:Ookii.Jumbo.Jet.Channels.IChannelMultiInputRecordReader.Channel"/> property is set.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.IChannelMultiInputRecordReader.Channel">
            <summary>
            Gets or sets the input channel that this reader is reading from.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.IInputChannel">
            <summary>
            Interface for input channels for task communication.
            </summary>
        </member>
        <member name="E:Ookii.Jumbo.Jet.Channels.IInputChannel.MemoryStorageFull">
            <summary>
            Occurs when the input channel stalls waiting for space to become available in the memory storage.
            </summary>
            <remarks>
            <para>
              If the channel consumer (e.g. a <see cref="T:Ookii.Jumbo.IO.MultiInputRecordReader`1"/>) can free up the required amount of space,
              set the <see cref="P:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs.CancelWaiting"/> property to <see langword="false"/> so the memory
              storage manager will continue waiting for the request.
            </para>
            <para>
              If the <see cref="P:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs.CancelWaiting"/> property is left at its default value of <see langword="true"/>,
              the memory storage manager will immediately deny the request so the channel will store the input on disk instead.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.IInputChannel.Configuration">
            <summary>
            Gets the configuration of the input channel.
            </summary>
            <value>The configuration of the input channel.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.IInputChannel.InputStage">
            <summary>
            Gets the input stage of this channel.
            </summary>
            <value>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> of the input stage.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.IInputChannel.UsesMemoryStorage">
            <summary>
            Gets a value indicating whether the input channel uses memory storage to store inputs.
            </summary>
            <value>
            	<see langword="true"/> if the channel uses memory storage; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.IInputChannel.MemoryStorageLevel">
            <summary>
            Gets the current memory storage usage level.
            </summary>
            <value>The memory storage usage level, between 0 and 1.</value>
            <remarks>
            <para>
              The <see cref="P:Ookii.Jumbo.Jet.Channels.IInputChannel.MemoryStorageLevel"/> will always be 0 if <see cref="P:Ookii.Jumbo.Jet.Channels.IInputChannel.UsesMemoryStorage"/> is <see langword="false"/>.
            </para>
            <para>
              If an input was too large to be stored in memory, <see cref="P:Ookii.Jumbo.Jet.Channels.IInputChannel.MemoryStorageLevel"/> will be 1 regardless of
              the actual level.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.IInputChannel.CreateRecordReader">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the channel can read its input.
            </summary>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> for the channel.</returns>
            <remarks>
            If the task has more than one input, the record reader will combine all inputs, usually by serializing them.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.IInputChannel.AssignAdditionalPartitions(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Assigns additional partitions to this input channel.
            </summary>
            <param name="additionalPartitions">The additional partitions.</param>
            <remarks>
            <para>
              Not all input channels need to support this.
            </para>
            <para>
              This method will only be called after the task finished processing all previously assigned partitions.
            </para>
            <para>
              This method will never be called if <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionsPerTask"/> is 1
              or <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.DisableDynamicPartitionAssignment"/> is <see langword="true"/>.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.InputChannel">
            <summary>
            Provides base functionality for <see cref="T:Ookii.Jumbo.Jet.Channels.IInputChannel"/> implementations.
            </summary>
        </member>
        <member name="E:Ookii.Jumbo.Jet.Channels.InputChannel.MemoryStorageFull">
            <summary>
            Occurs when the input channel stalls waiting for space to become available in the memory storage.
            </summary>
            <remarks>
            <para>
              If the channel consumer (e.g. a <see cref="T:Ookii.Jumbo.IO.MultiInputRecordReader`1"/>) can free up the required amount of space,
              set the <see cref="P:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs.CancelWaiting"/> property to <see langword="false"/> so the memory
              storage manager will continue waiting for the request.
            </para>
            <para>
              If the <see cref="P:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs.CancelWaiting"/> property is left at its default value of <see langword="true"/>,
              the memory storage manager will immediately deny the request so the channel will store the input on disk instead.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.InputChannel.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility,Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.InputChannel"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for the task that this channel is for.</param>
            <param name="inputStage">The input stage that this file channel reads from.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.Configuration">
            <summary>
            Gets the configuration of the input channel.
            </summary>
            <value>The configuration of the input channel.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.InputStage">
            <summary>
            Gets the input stage of this channel.
            </summary>
            <value>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> of the input stage.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.TaskExecution">
            <summary>
            Gets the task execution utility for the task that this channel provides input for.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.ActivePartitions">
            <summary>
            Gets the last set of partitions assigned to this channel.
            </summary>
            <remarks>
            <para>
              This property returns the set of partitions passed in the last
              call to <see cref="M:Ookii.Jumbo.Jet.Channels.InputChannel.AssignAdditionalPartitions(System.Collections.Generic.IList{System.Int32})"/>, or the initial
              partitions if that method hasn't been called.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.UsesMemoryStorage">
            <summary>
            Gets a value indicating whether the input channel uses memory storage to store inputs.
            </summary>
            <value>
            	<see langword="true"/> if the channel uses memory storage; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.MemoryStorageLevel">
            <summary>
            Gets the current memory storage usage level.
            </summary>
            <value>The memory storage usage level, between 0 and 1.</value>
            <remarks>
            	<para>
            The <see cref="P:Ookii.Jumbo.Jet.Channels.InputChannel.MemoryStorageLevel"/> will always be 0 if <see cref="P:Ookii.Jumbo.Jet.Channels.InputChannel.UsesMemoryStorage"/> is <see langword="false"/>.
            </para>
            	<para>
            If an input was too large to be stored in memory, <see cref="P:Ookii.Jumbo.Jet.Channels.InputChannel.MemoryStorageLevel"/> will be 1 regardless of
            the actual level.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.CompressionType">
            <summary>
            Gets the compression type used by the channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.InputRecordType">
            <summary>
            Gets the type of the records create by the input task of this channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.InputChannel.InputTaskIds">
            <summary>
            Gets a collection of input task IDs.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.InputChannel.CreateRecordReader">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the channel can read its input.
            </summary>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> for the channel.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.InputChannel.AssignAdditionalPartitions(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Assigns additional partitions to this input channel.
            </summary>
            <param name="additionalPartitions">The additional partitions.</param>
            <remarks>
            <para>
              Not all input channels need to support this.
            </para>
            <para>
              This method will only be called after the task finished processing all previously assigned partitions.
            </para>
            <para>
              This method will never be called if <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionsPerTask"/> is 1
              or <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.DisableDynamicPartitionAssignment"/> is <see langword="true"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.InputChannel.CreateChannelRecordReader">
            <summary>
            Creates a record reader of the type indicated by the channel.
            </summary>
            <returns>An instance of a class implementin
            g <see cref="T:Ookii.Jumbo.IO.IMultiInputRecordReader"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.InputChannel.OnMemoryStorageFull(Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs)">
            <summary>
            Raises the <see cref="E:Ookii.Jumbo.Jet.Channels.InputChannel.MemoryStorageFull" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.IOutputChannel">
            <summary>
            Interface for output channels for task communication.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.IOutputChannel.CreateRecordWriter``1">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the channel can write its output.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> for the channel.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs">
            <summary>
            Provides data for the <see cref="E:Ookii.Jumbo.Jet.Channels.IInputChannel.MemoryStorageFull"/> event.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs"/> class.
            </summary>
            <param name="spaceNeeded">The space that must be freed before the memory storage manager can satisfy the current request.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs.SpaceNeeded">
            <summary>
            Gets the amount space that must be freed before the memory storage manager can satisfy the current request.
            </summary>
            <value>
            The amount space that must be freed before the memory storage manager can satisfy the current request.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.MemoryStorageFullEventArgs.CancelWaiting">
            <summary>
            Gets or sets a value indicating whether the memory storage manager should wait for memory to become available.
            </summary>
            <value>
            <see langword="true" /> if the memory storage manager should not wait; otherwise, <see langword="false" />.
            The default value is <see langword="true"/>.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.OutputChannel">
            <summary>
            Provides base functionality for <see cref="T:Ookii.Jumbo.Jet.Channels.IOutputChannel"/> implementations.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.OutputChannel.CompressionTypeSetting">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings"/> or <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that overrides the global compression setting.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.OutputChannel.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.OutputChannel"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for the task that this channel is for.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.OutputChannel.CreateRecordWriter``1">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the channel can write its output.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> for the channel.</returns>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.OutputChannel.TaskExecution">
            <summary>
            Gets the task execution utility for the task that this channel is for.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.OutputChannel.OutputPartitionIds">
            <summary>
            Gets the IDs of the partitions that this channel writes output to.
            </summary>
            <value>The output ids.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.OutputChannel.CompressionType">
            <summary>
            Gets the compression type to use for the channel.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.OutputChannel.CreatePartitioner``1">
            <summary>
            Creates the partitioner for the output channel.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.IO.IPartitioner`1"/> that will partition the channel's output.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.PartitionAssignmentMethod">
            <summary>
            Indicates how initial partition assignment is done if the channel has multiple partitions per task.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.PartitionAssignmentMethod.Linear">
            <summary>
            Each task gets a linear sequence of partitions, e.g. task 1 gets partitions 1, 2 and 3, task 2 gets partitions 4, 5 and 6, and so forth.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.PartitionAssignmentMethod.Striped">
            <summary>
            The partitions are striped across the tasks, e.g. task 1 gets partitions 1, 3, and 5, and task 2 gets partitions 2, 4, and 6.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.PartitionFileIndex">
            <summary>
            Index data for partition files. For Jumbo internal use only.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndex.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.PartitionFileIndex"/> class.
            </summary>
            <param name="outputFilePath">The output file path.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.PartitionFileIndex.OutputFilePath">
            <summary>
            Gets the output file path.
            </summary>
            <value>The output file path.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndex.GetEntriesForPartition(System.Int32)">
            <summary>
            Gets the index entries for the specified partition.
            </summary>
            <param name="partition">The partition.</param>
            <returns>A list of partition index entries, or <see langword="null"/> if the file contains no data for this partition.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndex.GetPartitionSize(System.Int32,System.Boolean)">
            <summary>
            Gets the size of the specified partition.
            </summary>
            <param name="partition">The partition.</param>
            <param name="includeSegmentHeader">If set to <see langword="true" />, include an additional 8 bytes for each segment.</param>
            <returns>The size of the partition.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndex.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry">
            <summary>
            Index entry for a partition file. For Jumbo internal use only.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.#ctor(System.Int32,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry" /> struct.
            </summary>
            <param name="partition">The partition.</param>
            <param name="offset">The offset.</param>
            <param name="compressedSize">Size of the compressed data.</param>
            <param name="uncompressedSize">Size of the uncompressed data.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.Partition">
            <summary>
            Gets or sets the partition.
            </summary>
            <value>The partition.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.CompressedSize">
            <summary>
            Gets the size of the compressed data.
            </summary>
            <value>
            The size of the compressed data.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.UncompressedSize">
            <summary>
            Gets the size of the compressed data.
            </summary>
            <value>
            The size of the compressed data.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.Equals(Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.op_Equality(Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry,Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry)">
            <summary>
            Determines whether two specified instances have the same value.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry.op_Inequality(Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry,Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry)">
            <summary>
            Determines whether two specified instances have different values.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is different from the value of <paramref name="right"/>; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntryValueWriter">
            <summary>
            Value writer for the <see cref="T:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry"/> structure.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntryValueWriter.Write(Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry,System.IO.BinaryWriter)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntryValueWriter.Read(System.IO.BinaryReader)">
            <summary>
            Reads a value from the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Channels.PartitionFileIndexEntry"/> read from the reader.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.PipelineOutputChannel">
            <summary>
            Represents the the channel between two pipelined tasks.
            </summary>
            <remarks>
            <para>
              Pipelined tasks are run in the same process, and each call to <see cref="M:Ookii.Jumbo.IO.RecordWriter`1.WriteRecord(`0)"/> will invoke
              the associated task's <see cref="M:Ookii.Jumbo.Jet.PushTask`2.ProcessRecord(`0,Ookii.Jumbo.IO.RecordWriter{`1})"/> method. Because of this, there is no
              associated input channel for this channel type.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PipelineOutputChannel.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.PipelineOutputChannel"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for the task that this channel is for.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.PipelineOutputChannel.CreateRecordWriter``1">
            <summary>
            Creates a record writer for the channel.
            </summary>
            <typeparam name="T">The type of record.</typeparam>
            <returns>A record writer for the channel.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1">
            <summary>
            Multi record writer that collects the records in an in-memory buffer, and periodically spills the records to disk when the buffer is full. The final output is sorted.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <remarks>
            <para>
              Each spill is written to its own file, and each partition is sorted using <see cref="T:Ookii.Jumbo.IO.IndexedQuicksort"/> before being spilled. When <see cref="M:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.FinishWriting"/>
              is called, the individual spills are merged using <see cref="T:Ookii.Jumbo.Jet.MergeHelper`1"/> into the final output file.
            </para>
            <para>
              It is possible to specify a combiner task that will be run on the records of each spill after sorting. Use this to reduce the size of the output records after sorting.
              The combiner must be a <see cref="T:Ookii.Jumbo.Jet.ITask`2"/> where both the input and output record type are <typeparamref name="T"/>. The <see cref="M:Ookii.Jumbo.Jet.ITask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})"/>
              method will be called multiple times (once for each spill), so the task must be prepared for. You can use a <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/> for Map-Reduce style
              combining.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.#ctor(System.String,Ookii.Jumbo.IO.IPartitioner{`0},System.Int32,System.Int32,System.Int32,System.Boolean,Ookii.Jumbo.CompressionType,System.Int32,System.Collections.Generic.IComparer{`0},Ookii.Jumbo.Jet.ITask{`0,`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1" /> class.
            </summary>
            <param name="outputPath">The path of the output file.</param>
            <param name="partitioner">The partitioner for the records.</param>
            <param name="bufferSize">The size of the in-memory buffer.</param>
            <param name="limit">The amount of data in the buffer when a spill is triggered.</param>
            <param name="writeBufferSize">Size of the buffer to use for writing to disk.</param>
            <param name="enableChecksum">if set to <see langword="true" /> checksum calculation is enabled on all files.</param>
            <param name="compressionType">Type of the compression.</param>
            <param name="maxDiskInputsPerMergePass">The maximum number of disk inputs per merge pass.</param>
            <param name="comparer">A <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> or <see cref="T:System.Collections.Generic.IComparer`1"/> to use when comparing. Using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended. May be <see langword="null"/></param>
            <param name="combiner">The combiner to use during spills. May be <see langword="null" />.</param>
            <param name="minSpillsForCombineDuringMerge">The minimum number of spills needed for the combiner to rerun during merge. If this value is 0, the combiner will never be run during the merge. Ignored when <paramref name="combiner" /> is <see langword="null" />.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.BytesWritten">
            <summary>
            Gets the number of bytes that were actually written to the output.
            </summary>
            <value>The number of bytes written to the output.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.BytesRead">
            <summary>
            Gets the number of bytes read during merging.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.FinishWriting">
            <summary>
            Informs the record writer that no further records will be written.
            </summary>
            <remarks>
            <para>
              Performs the final spill, if one is needed, and then merges the spills into the final sorted output.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.SpillOutput(System.Boolean)">
            <summary>
            Writes the spill data to the output.
            </summary>
            <param name="finalSpill">If set to <see langword="true"/>, this is the final spill.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.PreparePartition(System.Int32,Ookii.Jumbo.IO.RecordIndexEntry[],System.Byte[])">
            <summary>
            Sorts the partition before spilling.
            </summary>
            <param name="partition">The partition number.</param>
            <param name="index">The index entries for this partition.</param>
            <param name="buffer">The buffer containing the spill data.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1">
            <summary>
            Multi record writer that collects records in an in-memory buffer, and periodically spills the record to the output when the buffer is full.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.#ctor(Ookii.Jumbo.IO.IPartitioner{`0},System.Int32,System.Int32,Ookii.Jumbo.Jet.Channels.SpillRecordWriterOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1"/> class.
            </summary>
            <param name="partitioner">The partitioner for the records.</param>
            <param name="bufferSize">The size of the in-memory buffer.</param>
            <param name="limit">The amount of data in the buffer when a spill is triggered.</param>
            <param name="options">A combination of <see cref="T:Ookii.Jumbo.Jet.Channels.SpillRecordWriterOptions"/> values.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.OutputBytes">
            <summary>
            Gets the size of the written records after serialization.
            </summary>
            <value>
            The size of the written records after serialization.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.BytesWritten">
            <summary>
            Gets the number of bytes that were actually written to the output.
            </summary>
            <value>The number of bytes written to the output.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.Partitioner">
            <summary>
            Gets the partitioner.
            </summary>
            <value>The partitioner.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.SpillCount">
            <summary>
            Gets the number of spills performed.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.ErrorOccurred">
            <summary>
            Gets a value indicating whether an error occurred during a background spill.
            </summary>
            <value>
            	<see langword="true"/> if an error occurred; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.SpillBuffer">
            <summary>
            Gets the spill buffer for the current spill.
            </summary>
            <remarks>
            <note>
              Only access this property from the <see cref="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.SpillOutput(System.Boolean)"/> method, and only access
              those parts of the array indicates by the regions returned by <see cref="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.GetSpillIndex(System.Int32)"/>
              for that spill.
            </note>
            <para>
              Use this if you want to to custom writing of the partitions.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.FinishWriting">
            <summary>
            Informs the record writer that no further records will be written.
            </summary>
            <remarks>
            <para>
              Performs the final spill, if one is needed.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.WriteRecordInternal(`0)">
            <summary>
            Writes a record.
            </summary>
            <param name="record">The record to write.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.SpillOutput(System.Boolean)">
            <summary>
            When overridden by a derived class, writes the spill data to the output.
            </summary>
            <param name="finalSpill">If set to <see langword="true"/>, this is the final spill.</param>
            <remarks>
            <para>
              Implementers should call the <see cref="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.WritePartition(System.Int32,System.IO.Stream)"/> method to write each spill partition to their output.
            </para>
            <para>
              It is not guaranteed that the <paramref name="finalSpill"/> parameter will ever be <see langword="true"/>. If data was flushed by a background
              spill and no further data was written into the buffer before <see cref="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.FinishWriting"/> is called, then this method is never called with
              <paramref name="finalSpill"/> set to <see langword="true"/>. If you need to perform extra work after the final spill, override the
              <see cref="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.FinishWriting"/> method instead.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.GetSpillIndex(System.Int32)">
            <summary>
            Gets the index for the specified partition for the current spill.
            </summary>
            <param name="partition">The partition number.</param>
            <returns>The index entries.</returns>
            <remarks>
            <note>
              Only call this method from the <see cref="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.SpillOutput(System.Boolean)"/> method.
            </note>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.SpillDataSizeForPartition(System.Int32)">
            <summary>
            Gets the spill data size for the specified partition.
            </summary>
            <param name="partition">The partition number.</param>
            <returns>The size of the partition's data for this spill.</returns>
            <remarks>
            <para>
              Only call this method from the <see cref="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.SpillOutput(System.Boolean)"/> method.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.WritePartition(System.Int32,System.IO.Stream)">
            <summary>
            Writes the specified partition to the output.
            </summary>
            <param name="partition">The partition number.</param>
            <param name="outputStream">The output stream to write the partition to.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.WritePartition(System.Int32,Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.RawRecord})">
            <summary>
            Writes the specified partition to the output using the <see cref="T:Ookii.Jumbo.IO.RawRecord"/> format, which includes record sizes.
            </summary>
            <param name="partition">The partition number.</param>
            <param name="output">The raw record writer to write the partition to.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.HasDataForPartition(System.Int32)">
            <summary>
            Determines whether the current spill has data for the specified partition.
            </summary>
            <param name="partition">The partition number.</param>
            <returns>
              <see langword="true" /> if the current spill has data for the specified partition; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.PreparePartition(System.Int32,Ookii.Jumbo.IO.RecordIndexEntry[],System.Byte[])">
            <summary>
            When overridden in a derived class, prepares the partition for the spill.
            </summary>
            <param name="partition">The partition number.</param>
            <param name="index">The index entries for this partition.</param>
            <param name="buffer">The buffer containing the spill data.</param>
            <remarks>
            <note>
              Do not access any part of the array other than the regions indicated in the index!
            </note>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.SpillRecordWriterOptions">
            <summary>
            Flags controlling the behavior of the <see cref="T:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.SpillRecordWriterOptions.None">
            <summary>
            Default behavior is used. Records will never wrap around the end of the buffer, and index entries always describe only one record.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.SpillRecordWriterOptions.AllowRecordWrapping">
            <summary>
            Records are allowed to wrap around the end of the circular buffer.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.SpillRecordWriterOptions.AllowMultiRecordIndexEntries">
            <summary>
            Index entries for multiple records of the same partition are allowed to be merged.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.TcpInputChannel">
            <summary>
            Represents the reading end of a TCP channel
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.TcpInputChannel.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility,Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.TcpInputChannel"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for the task that this channel is for.</param>
            <param name="inputStage">The input stage that this file channel reads from.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.UsesMemoryStorage">
            <summary>
            Gets a value indicating whether the input channel uses memory storage to store inputs.
            </summary>
            <value>
            	<see langword="true"/> if the channel uses memory storage; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.MemoryStorageLevel">
            <summary>
            Gets the current memory storage usage level.
            </summary>
            <value>The memory storage usage level, between 0 and 1.</value>
            <remarks>
            	<para>
            The <see cref="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.MemoryStorageLevel"/> will always be 0 if <see cref="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.UsesMemoryStorage"/> is <see langword="false"/>.
            </para>
            	<para>
            If an input was too large to be stored in memory, <see cref="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.MemoryStorageLevel"/> will be 1 regardless of
            the actual level.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.TcpInputChannel.CreateRecordReader">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the channel can read its input.
            </summary>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> for the channel.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.TcpInputChannel.AssignAdditionalPartitions(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Assigns additional partitions to this input channel.
            </summary>
            <param name="additionalPartitions">The additional partitions.</param>
            <remarks>
            <para>
              The TCP input channel does not support this method, and will always throw a <see cref="T:System.NotSupportedException"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.LocalBytesRead">
            <summary>
            Gets the number of bytes read from the local disk.
            </summary>
            <value>The local bytes read.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.LocalBytesWritten">
            <summary>
            Gets the number of bytes written to the local disk.
            </summary>
            <value>The local bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.NetworkBytesRead">
            <summary>
            Gets the number of bytes read over the network.
            </summary>
            <value>The network bytes read.</value>
            <remarks>Only channels should normally use this property.</remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpInputChannel.NetworkBytesWritten">
            <summary>
            Gets the number of bytes written over the network.
            </summary>
            <value>The network bytes written.</value>
            <remarks>Only channels should normally use this property.</remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Channels.TcpOutputChannel">
            <summary>
            Represents the writing end of a TCP channel between two tasks.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.SpillBufferSizeSettingKey">
            <summary>
            The key in the stage or job settings that can be used to specify the size of the spill buffer. The setting should have the type <see cref="T:Ookii.Jumbo.BinarySize"/>,
            and the default value is the value of <see cref="P:Ookii.Jumbo.Jet.TcpChannelConfigurationElement.SpillBufferSize"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.SpillBufferLimitSettingKey">
            <summary>
            The key in the stage or job settings that can be used to specify the size of the spill buffer. The setting should have the type <see cref="T:System.Single"/>,
            and the default value is the value of <see cref="P:Ookii.Jumbo.Jet.TcpChannelConfigurationElement.SpillBufferLimit"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.ReuseConnectionsSettingKey">
            <summary>
            The key in the stage or job settings that can be used to specify whether the connections to the receiving stage tasks are kept open.
            The setting should have the type <see cref="T:System.Boolean"/> and the default value is the value of <see cref="P:Ookii.Jumbo.Jet.TcpChannelConfigurationElement.ReuseConnections"/>.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Channels.TcpOutputChannel"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for the task that this channel is for.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.CreateRecordWriter``1">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the channel can write its output.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <returns>A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> for the channel.</returns>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.LocalBytesRead">
            <summary>
            Gets the number of bytes read from the local disk.
            </summary>
            <value>The local bytes read.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.LocalBytesWritten">
            <summary>
            Gets the number of bytes written to the local disk.
            </summary>
            <value>The local bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.NetworkBytesRead">
            <summary>
            Gets the number of bytes read over the network.
            </summary>
            <value>The network bytes read.</value>
            <remarks>Only channels should normally use this property.</remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Channels.TcpOutputChannel.NetworkBytesWritten">
            <summary>
            Gets the number of bytes written over the network.
            </summary>
            <value>The network bytes written.</value>
            <remarks>Only channels should normally use this property.</remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.CleanupJobJetHeartbeatResponse">
            <summary>
            Heartbeat response used when the job server wants the task server to clean up data related to a job.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.CleanupJobJetHeartbeatResponse.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.CleanupJobJetHeartbeatResponse"/> class.
            </summary>
            <param name="jobId">The job ID.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.CleanupJobJetHeartbeatResponse.JobId">
            <summary>
            Gets the job ID of the job whose data to clean up.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.CompletedTask">
            <summary>
            Provides information about a task that has finished executing.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.CompletedTask.JobId">
            <summary>
            Gets or sets the job ID that this task is part of.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.CompletedTask.TaskAttemptId">
            <summary>
            Gets or sets the task attempt ID that finished this task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.CompletedTask.FullTaskId">
            <summary>
            Gets the global task ID of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.CompletedTask.TaskServer">
            <summary>
            Gets or sets the <see cref="T:Ookii.Jumbo.ServerAddress"/> of the task server that ran the task.
            </summary>
            <remarks>
            When using the <see cref="T:Ookii.Jumbo.Jet.Channels.FileInputChannel"/>, this is the server where the output data can be downloaded.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.CompletedTask.TaskServerFileServerPort">
            <summary>
            Gets or sets the port that the task server listens on for downloading file channel data.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.CompletedTask.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Configurable">
            <summary>
            Provides a basic implementation of <see cref="T:Ookii.Jumbo.Jet.IConfigurable"/>.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Configurable.DfsConfiguration">
            <summary>
            Gets or sets the configuration used to access the Distributed File System.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Configurable.JetConfiguration">
            <summary>
            Gets or sets the configuration used to access the Jet servers.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Configurable.TaskContext">
            <summary>
            Gets or sets the configuration for the task attempt.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Configurable.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.FileChannelConfigurationElement">
            <summary>
            Provides configuration information for the file channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.ReadBufferSize">
            <summary>
            Gets or sets the buffer size to use for input to push and pull tasks.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.WriteBufferSize">
            <summary>
            Gets or sets the buffer size used by the file output channel to write to intermediate files.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.DeleteIntermediateFiles">
            <summary>
            Gets or sets a value that indicates whether intermediate files should be deleted after the task or job is finished.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.MemoryStorageSize">
            <summary>
            Gets or sets the maximum size of the the in-memory input storage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.MemoryStorageWaitTimeout">
            <summary>
            Gets or sets the amount of time to wait for memory to become available before shuffling to disk.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.CompressionType">
            <summary>
            Gets or sets the type of compression to use for intermediate files.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.SpillBufferSize">
            <summary>
            Gets or sets the size of the spill buffer used for file output channels.
            </summary>
            <value>The size of the single file output buffer.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.SpillBufferLimit">
            <summary>
            Gets or sets the percentage of spill buffer usage at which the <see cref="T:Ookii.Jumbo.Jet.Channels.SpillRecordWriter`1"/> for a file output channel using 
            <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.Spill"/> and <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/> should start writing the buffer to disk.
            </summary>
            <value>The single file output buffer limit.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.SpillSortMinSpillsForCombineDuringMerge">
            <summary>
            Gets or sets the minimum number of spills needed for the <see cref="T:Ookii.Jumbo.Jet.Channels.SortSpillRecordWriter`1"/> for the a file output channel using
            <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/> to run the combiner (if there is one) during the merge phase.
            </summary>
            <value>
            The minimum number of spills needed for the combiner to run during the merge phase. The default value is 3.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.EnableChecksum">
            <summary>
            Gets or sets a value indicating whether checksums are calculated and verified for the intermediate data.
            </summary>
            <value>
            	<see langword="true"/> if checksums are enabled; otherwise, <see langword="false"/>. The default value is <see langword="true"/>.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.HashPartitioner`1">
            <summary>
            A partitioner based on the value returned by <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)"/>.
            </summary>
            <remarks>
            <para>
              You can customize the behaviour of the <see cref="T:Ookii.Jumbo.Jet.HashPartitioner`1"/> by specifying a custom <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
              To do this, specify the type name of the custom comparer in the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> of the stage
              that produces the records to be partitioned using the <see cref="F:Ookii.Jumbo.Jet.PartitionerConstants.EqualityComparerSetting"/> key.
            </para>
            <para>
              If you don't specify a comparer, <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/> will be used.
            </para>
            </remarks>
            <typeparam name="T">The type of the values to partition.</typeparam>
        </member>
        <member name="M:Ookii.Jumbo.Jet.HashPartitioner`1.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.HashPartitioner`1.Partitions">
            <summary>
            Gets or sets the number of partitions.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.HashPartitioner`1.GetPartition(`0)">
            <summary>
            Gets the partition for the specified value.
            </summary>
            <param name="value">The value to be partitioned.</param>
            <returns>The partition number for the specified value.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IConfigurable">
            <summary>
            Interface for classes that need the DFS, Jet, and/or Job configuration.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IConfigurable.DfsConfiguration">
            <summary>
            Gets or sets the configuration used to access the Distributed File System.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IConfigurable.JetConfiguration">
            <summary>
            Gets or sets the configuration used to access the Jet servers.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IConfigurable.TaskContext">
            <summary>
            Gets or sets the configuration for the task attempt.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IConfigurable.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IHasAdditionalProgress">
            <summary>
            Interface for tasks, multi record readers and channels that report additional progress.
            </summary>
            <remarks>
            Use the <see cref="T:Ookii.Jumbo.Jet.AdditionalProgressCounterAttribute"/> attribute to specify a name for the counter.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IHasAdditionalProgress.AdditionalProgress">
            <summary>
            Gets the additional progress value.
            </summary>
            <value>The additional progress value.</value>
            <remarks>
            This property must be thread safe.
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IHasMetrics">
            <summary>
            Provides additional metrics about disk and network activity.
            </summary>
            <remarks>
            <para>
              Can be used by channels and record readers and writers to provide additional
              metrics. If you use this interface on a record reader or writer it should only
              consider reads/writes that are not already reported via the regular <see cref="P:Ookii.Jumbo.IO.RecordReader`1.InputBytes"/>
              and <see cref="P:Ookii.Jumbo.IO.RecordWriter`1.OutputBytes"/> properties.
            </para>
            <para>
              It is used by e.g. the <see cref="T:Ookii.Jumbo.Jet.MergeRecordReader`1"/> to report the additional reads and writes
              it does if more than one merge pass is used.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IHasMetrics.LocalBytesRead">
            <summary>
            Gets the number of bytes read from the local disk.
            </summary>
            <value>The local bytes read.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IHasMetrics.LocalBytesWritten">
            <summary>
            Gets the number of bytes written to the local disk.
            </summary>
            <value>The local bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IHasMetrics.NetworkBytesRead">
            <summary>
            Gets the number of bytes read over the network.
            </summary>
            <value>The network bytes read.</value>
            <remarks>
            <para>
              Only channels should normally use this property.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IHasMetrics.NetworkBytesWritten">
            <summary>
            Gets the number of bytes written over the network.
            </summary>
            <value>The network bytes written.</value>
            <remarks>
            <para>
              Only channels should normally use this property.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IJobServerClientProtocol">
            <summary>
            The interface used by clients to communicate with the job server.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.CreateJob">
            <summary>
            Creates a new job and assigns a directory on the distributed file system where the job's files are meant
            to be stored.
            </summary>
            <returns>An instance of the <see cref="T:Ookii.Jumbo.Jet.Job"/> class containing information about the job.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.RunJob(System.Guid)">
            <summary>
            Begins execution of a job.
            </summary>
            <param name="jobId">The ID of the job to run.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.AbortJob(System.Guid)">
            <summary>
            Aborts execution of a job.
            </summary>
            <param name="jobId">The ID of the job to abort.</param>
            <returns>
              <see langword="true"/> if the job was aborted; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            If the job was created but not started, calling this method will remove the job from the pending queue, and the
            method will return <see langword="true"/>.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetTaskServerForTask(System.Guid,System.String)">
            <summary>
            Gets the address of the task server that is running the specified task.
            </summary>
            <param name="jobId">The ID of the job containing the task.</param>
            <param name="taskId">The ID of the task.</param>
            <returns>The <see cref="T:Ookii.Jumbo.ServerAddress"/> for the task server that is running the task.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.CheckTaskCompletion(System.Guid,System.String[])">
            <summary>
            Waits until any of the specified tasks complete.
            </summary>
            <param name="jobId">The ID of the job containing the tasks.</param>
            <param name="tasks">The IDs of the tasks to wait for.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.CompletedTask"/> instance indicating which of the tasks completed.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetJobStatus(System.Guid)">
            <summary>
            Gets the current status for the specified job.
            </summary>
            <param name="jobId">The job ID.</param>
            <returns>The status of the job, or <see langword="null"/> if the job doesn't exist.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetRunningJobs">
            <summary>
            Gets the status for all currently running jobs.
            </summary>
            <returns>An array of status objects for each running job.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetMetrics">
            <summary>
            Gets current metrics for the distributed execution engine.
            </summary>
            <returns>An object holding the metrics for the job server.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetLogFileContents(Ookii.Jumbo.LogFileKind,System.Int32)">
            <summary>
            Gets the contents of the diagnostic log file.
            </summary>
            <param name="kind">The kind of log file to return.</param>
            <param name="maxSize">The maximum size of the log data to return.</param>
            <returns>The contents of the diagnostic log file.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetArchivedJobs">
            <summary>
            Gets a list of archived jobs.
            </summary>
            <returns>A list of archived jobs.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetArchivedJobStatus(System.Guid)">
            <summary>
            Gets the job status for an archived job.
            </summary>
            <param name="jobId">The job ID.</param>
            <returns>The status for the archived job, or <see langword="null"/> if the job wasn't found.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerClientProtocol.GetJobConfigurationFile(System.Guid,System.Boolean)">
            <summary>
            Gets the contents of a job configuration file.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="archived">If set to <see langword="true" />, search the archived job directory instead of the active jobs.</param>
            <returns>
            The raw XML of the archived job's configuration, or <see langword="null" /> if the job wasn't found.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IJobServerHeartbeatProtocol">
            <summary>
            Protocol used by the task servers to communicate with the job server.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerHeartbeatProtocol.Heartbeat(Ookii.Jumbo.ServerAddress,Ookii.Jumbo.Jet.JetHeartbeatData[])">
            <summary>
            Sends a heartbeat to the name server.
            </summary>
            <param name="address">The <see cref="T:Ookii.Jumbo.ServerAddress"/> of the server sending the heartbeat.</param>
            <param name="data">The data for the heartbeat.</param>
            <returns>An array of <see cref="T:Ookii.Jumbo.Jet.JetHeartbeatResponse"/> for the heartbeat.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IJobServerTaskProtocol">
            <summary>
            Protocol used by tasks to communicate with the job server. For Jumbo internal use only.
            </summary>
            <remarks>
            <para>
              This interface is used by the <see cref="T:Ookii.Jumbo.Jet.TaskExecutionUtility"/> class. It shouldn't be used elsewhere.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerTaskProtocol.GetPartitionsForTask(System.Guid,Ookii.Jumbo.Jet.TaskId)">
            <summary>
            Gets the partitions that are currently assigned to a task.
            </summary>
            <param name="jobId">The ID of the job containing the task.</param>
            <param name="taskId">The ID of the task.</param>
            <returns>A list of partition numbers that the task should process.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerTaskProtocol.NotifyStartPartitionProcessing(System.Guid,Ookii.Jumbo.Jet.TaskId,System.Int32)">
            <summary>
            Notifies the job server that a task is about to start processing the specified partition.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskId">The task ID.</param>
            <param name="partitionNumber">The partition number.</param>
            <returns><see langword="true"/> if the task should start processing the partition; <see langword="false"/> if it has been reassigned to another task.</returns>
            <remarks>
            <para>
              This method needn't be called for the first partition returned by <see cref="M:Ookii.Jumbo.Jet.IJobServerTaskProtocol.GetPartitionsForTask(System.Guid,Ookii.Jumbo.Jet.TaskId)"/> or <see cref="M:Ookii.Jumbo.Jet.IJobServerTaskProtocol.GetAdditionalPartitions(System.Guid,Ookii.Jumbo.Jet.TaskId)"/>; that partition is implicitly
              considered to immediately start processing.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IJobServerTaskProtocol.GetAdditionalPartitions(System.Guid,Ookii.Jumbo.Jet.TaskId)">
            <summary>
            Gets additional partitions for a task that has finished processing all its current partitions.
            </summary>
            <param name="jobId">The job id.</param>
            <param name="taskId">The task id.</param>
            <returns>A list of additional partition numbers to process, or <see langword="null"/> if the task should finish.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.InitialStatusJetHeartbeatData">
            <summary>
            Heartbeat data informing the server of the status 
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.InitialStatusJetHeartbeatData.TaskSlots">
            <summary>
            Gets or sets the maximum number of tasks that this task server will accept.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.InitialStatusJetHeartbeatData.FileServerPort">
            <summary>
            Gets or sets the port on which the task server accepts connections to download files for the
            file input channel.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.FileDataInput">
            <summary>
            Provides a stage with input from a file system.
            </summary>
            <para>
              This type inherits from <see cref="T:Ookii.Jumbo.Jet.Configurable"/>, but the configuration is only used during task execution.
              If you are creating a job configuration, there is no need to configure this type other than specifying
              the <see cref="T:Ookii.Jumbo.Dfs.DfsConfiguration"/> to the <see cref="M:Ookii.Jumbo.Jet.IO.FileDataOutput.#ctor(Ookii.Jumbo.Dfs.DfsConfiguration,System.Type,System.String,System.Int32,System.Int32,Ookii.Jumbo.IO.RecordStreamOptions)"/> constructor.
            </para>
        </member>
        <member name="F:Ookii.Jumbo.Jet.IO.FileDataInput.InputPathSettingKey">
            <summary>
            The key of the setting in the stage settings that holds the input path.
            </summary>
            <remarks>
            <para>
              The input path setting is informational only; it is not used by the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataInput"/> class. Changing this setting does not affect the job.
            </para>
            <para>
              This setting will only be set if the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataInput"/> was created from a single file or directory.
            </para>
            </remarks>
        </member>
        <member name="F:Ookii.Jumbo.Jet.IO.FileDataInput.RecordReaderTypeSettingKey">
            <summary>
            The key of the setting in the stage settings that holds the record reader type.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataInput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataInput"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataInput.#ctor(Ookii.Jumbo.Dfs.DfsConfiguration,System.Type,Ookii.Jumbo.Dfs.FileSystem.JumboFileSystemEntry,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataInput" /> class.
            </summary>
            <param name="dfsConfiguration">The DFS configuration.</param>
            <param name="recordReaderType">Type of the record reader.</param>
            <param name="fileOrDirectory">The input file or directory.</param>
            <param name="minSplitSize">The minimum split size.</param>
            <param name="maxSplitSize">The maximum split size.</param>
            <exception cref="T:System.ArgumentNullException">fileOrDirectory</exception>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataInput.#ctor(Ookii.Jumbo.Dfs.DfsConfiguration,System.Type,System.Collections.Generic.IEnumerable{Ookii.Jumbo.Dfs.FileSystem.JumboFile},System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataInput"/> class.
            </summary>
            <param name="dfsConfiguration">The DFS configuration.</param>
            <param name="recordReaderType">Type of the record reader.</param>
            <param name="inputFiles">The input files.</param>
            <param name="minSplitSize">The minimum split size.</param>
            <param name="maxSplitSize">The maximum split size.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileDataInput.RecordType">
            <summary>
            Gets the type of the records of this input.
            </summary>
            <value>
            The type of the records.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileDataInput.TaskInputs">
            <summary>
            Gets the inputs for each task.
            </summary>
            <value>
            A list of task inputs, or <see langword="null"/> if the job is not being constructed. The returned collection may be read-only.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataInput.CreateRecordReader(Ookii.Jumbo.Jet.IO.ITaskInput)">
            <summary>
            Creates the record reader for the specified task.
            </summary>
            <param name="input">The task input.</param>
            <returns>
            The record reader.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataInput.NotifyAddedToStage(Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Notifies the data input that it has been added to a stage.
            </summary>
            <param name="stage">The stage configuration of the stage.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataInput.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)" /> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.FileDataOutput">
            <summary>
            Writes stage output to a file system.
            </summary>
            <remarks>
            <para>
              This type inherits from <see cref="T:Ookii.Jumbo.Jet.Configurable"/>, but the configuration is only used during task execution.
              If you are creating a job configuration, there is no need to configure this type other than specifying
              the <see cref="T:Ookii.Jumbo.Dfs.DfsConfiguration"/> to the <see cref="M:Ookii.Jumbo.Jet.IO.FileDataOutput.#ctor(Ookii.Jumbo.Dfs.DfsConfiguration,System.Type,System.String,System.Int32,System.Int32,Ookii.Jumbo.IO.RecordStreamOptions)"/> constructor.
            </para>
            </remarks>
        </member>
        <member name="F:Ookii.Jumbo.Jet.IO.FileDataOutput.OutputPathFormatSettingKey">
            <summary>
            The key of the setting in the stage settings that stores the output path format. You should not normally change this setting.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.IO.FileDataOutput.RecordWriterTypeSettingKey">
            <summary>
            The key of the setting in the stage settings that stores the record writer type. You should not normally change this setting.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.IO.FileDataOutput.BlockSizeSettingKey">
            <summary>
            The key of the setting in the stage settings that stores the block size. You should not normally change this setting.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.IO.FileDataOutput.ReplicationFactorSettingKey">
            <summary>
            The key of the setting in the stage settings that stores the replication factor. You should not normally change this setting.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.IO.FileDataOutput.RecordOptionsSettingKey">
            <summary>
            The key of the setting in the stage settings that stores the record options. You should not normally change this setting.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataOutput.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataOutput"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataOutput.#ctor(Ookii.Jumbo.Dfs.DfsConfiguration,System.Type,System.String,System.Int32,System.Int32,Ookii.Jumbo.IO.RecordStreamOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataOutput" /> class.
            </summary>
            <param name="dfsConfiguration">The DFS configuration.</param>
            <param name="recordWriterType">Type of the record writer.</param>
            <param name="outputPath">The path of the directory to write the output to.</param>
            <param name="blockSize">The size of the output files' blocks, or 0 to use the default block size.</param>
            <param name="replicationFactor">The output files' replication factor, or 0 to use the default replication factor.</param>
            <param name="recordOptions">The <see cref="T:Ookii.Jumbo.IO.RecordStreamOptions" /> for the output.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileDataOutput.RecordType">
            <summary>
            Gets the type of the records used for this output.
            </summary>
            <value>
            The type of the records.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataOutput.CreateOutput(System.Int32)">
            <summary>
            Creates the output for the specified partition.
            </summary>
            <param name="partitionNumber">The partition number for this output.</param>
            <returns>
            The record writer.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataOutput.NotifyAddedToStage(Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Notifies the data input that it has been added to a stage.
            </summary>
            <param name="stage">The stage configuration of the stage.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataOutput.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)" /> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileDataOutput.GetOutputPath(Ookii.Jumbo.Jet.Jobs.StageConfiguration,System.Int32)">
            <summary>
            Gets the output path for the specified partition.
            </summary>
            <param name="stage">The stage configuration for the stage.</param>
            <param name="partitionNumber">The partition number.</param>
            <returns>The path of the output file for this partition.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.FileOutputCommitter">
            <summary>
            Committer for file output.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileOutputCommitter.#ctor(Ookii.Jumbo.IO.IRecordWriter,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.IO.FileOutputCommitter"/> class.
            </summary>
            <param name="recordWriter">The record writer.</param>
            <param name="tempFileName">Name of the temporary file that the data is written to.</param>
            <param name="outputFileName">Name of the output file that the temporary file should be renamed to.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileOutputCommitter.RecordWriter">
            <summary>
            Gets the record writer for this output.
            </summary>
            <value>
            The record writer for this output.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileOutputCommitter.Commit(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient)">
            <summary>
            Commits the output.
            </summary>
            <param name="fileSystem">The file system.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.FileTaskInput">
            <summary>
            Represents a task input for a stage using <see cref="T:Ookii.Jumbo.Jet.IO.FileDataInput"/>.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileTaskInput.#ctor(System.String,System.Int64,System.Int64,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.IO.FileTaskInput"/> class.
            </summary>
            <param name="path">The path of the file to use.</param>
            <param name="offset">The offset in the file specified by <paramref name="path"/> of the split.</param>
            <param name="size">The size of the split.</param>
            <param name="locations">The names of the nodes on which this split is local. May be <see langword="null"/>.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileTaskInput.Path">
            <summary>
            Gets the path of the file for this split.
            </summary>
            <value>
            The path of the file for this split.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileTaskInput.Offset">
            <summary>
            Gets the offset at which the split begins.
            </summary>
            <value>
            The offset of the split.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileTaskInput.Size">
            <summary>
            Gets the size of the split.
            </summary>
            <value>
            The size of the split.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.FileTaskInput.Locations">
            <summary>
            Gets a list of host names of nodes for which this task's input is local.
            </summary>
            <value>
            The locations, or <see langword="null"/> if the input doesn't use locality.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileTaskInput.Write(System.IO.BinaryWriter)">
            <summary>
            Writes the object to the specified writer.
            </summary>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter"/> to serialize the object to.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.FileTaskInput.Read(System.IO.BinaryReader)">
            <summary>
            Reads the object from the specified reader.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to deserialize the object from.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.IDataInput">
            <summary>
            Provides methods for defining input (other than a channel) to a stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.IDataInput.TaskInputs">
            <summary>
            Gets the inputs for each task.
            </summary>
            <value>
            A list of task inputs, or <see langword="null"/> if the job is not being constructed. The returned collection may be read-only.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.IDataInput.RecordType">
            <summary>
            Gets the type of the records of this input.
            </summary>
            <value>
            The type of the records.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.IDataInput.CreateRecordReader(Ookii.Jumbo.Jet.IO.ITaskInput)">
            <summary>
            Creates the record reader for the specified task.
            </summary>
            <param name="input">The task input.</param>
            <returns>
            The record reader.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.IDataInput.NotifyAddedToStage(Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Notifies the data input that it has been added to a stage.
            </summary>
            <param name="stage">The stage configuration of the stage.</param>
            <remarks>
            <para>
              Implement this method if you want to add any setting to the stage. Keep in mind that the stage may still be under construction, so not all its
              properties may have their final values yet.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.IDataOutput">
            <summary>
            Provides method for defining data output (other than a channel) for a stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.IDataOutput.RecordType">
            <summary>
            Gets the type of the records used for this output.
            </summary>
            <value>
            The type of the records.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.IDataOutput.CreateOutput(System.Int32)">
            <summary>
            Creates the output for the specified partition.
            </summary>
            <param name="partitionNumber">The partition number for this output.</param>
            <returns>
            The record writer.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.IDataOutput.NotifyAddedToStage(Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Notifies the data input that it has been added to a stage.
            </summary>
            <param name="stage">The stage configuration of the stage.</param>
            <remarks>
            <para>
              Implement this method if you want to add any setting to the stage. Keep in mind that the stage may still be under construction, so not all its
              properties may have their final values yet.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.IOutputCommitter">
            <summary>
            Provides methods to allow output to be committed.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.IOutputCommitter.RecordWriter">
            <summary>
            Gets the record writer for this output.
            </summary>
            <value>
            The record writer for this output.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.IOutputCommitter.Commit(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient)">
            <summary>
            Commits the output.
            </summary>
            <param name="fileSystem">The file system.</param>
            <remarks>
            The <see cref="P:Ookii.Jumbo.Jet.IO.IOutputCommitter.RecordWriter"/> will be disposed before this method is called.
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.ITaskInput">
            <summary>
            Provides methods for describing a task input.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.IO.ITaskInput.Locations">
            <summary>
            Gets a list of host names of nodes for which this task's input is local.
            </summary>
            <value>
            The locations, or <see langword="null"/> if the input doesn't use locality.
            </value>
            <remarks>
            The <see cref="T:Ookii.Jumbo.IO.IWritable"/> implementation doesn't need to serialize this array; it will be stored separately.
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.IO.TaskInputUtility">
            <summary>
            Provides methods for saving and loading task inputs.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.TaskInputUtility.WriteTaskInputs(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,System.String,System.String,System.Collections.Generic.IEnumerable{Ookii.Jumbo.Jet.IO.ITaskInput})">
            <summary>
            Writes the task inputs.
            </summary>
            <param name="fileSystem">The file system to write the inputs to.</param>
            <param name="path">The path of the directory to write the output to.</param>
            <param name="stageId">The ID of the stage that these inputs belong to.</param>
            <param name="inputs">The inputs to write.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.TaskInputUtility.ReadTaskInputLocations(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,System.String,System.String)">
            <summary>
            Reads the task input locations.
            </summary>
            <param name="fileSystem">The file system to read the locations from.</param>
            <param name="path">The path of the directory containing the locations file.</param>
            <param name="stageId">The ID of the stage whose task input locations to read.</param>
            <returns>A list of input locations for each task.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.IO.TaskInputUtility.ReadTaskInput(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,System.String,System.String,System.Int32)">
            <summary>
            Reads the task input for the specified split.
            </summary>
            <param name="fileSystem">The file system containing the splits file.</param>
            <param name="path">The path of the directory containing the splits file.</param>
            <param name="stageId">The ID of the stage whose input to read.</param>
            <param name="splitIndex">The index of the split.</param>
            <returns>The task input.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.ITask`2">
            <summary>
            Interface for task classes.
            </summary>
            <typeparam name="TInput">The input type of the task.</typeparam>
            <typeparam name="TOutput">The output type of the task.</typeparam>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the task's input can be read.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.ITaskServerClientProtocol">
            <summary>
            The protocol used when task servers communicate with each other or when the job server communicates
            with a task server other than its own.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.ITaskServerClientProtocol.FileServerPort">
            <summary>
            Gets the port on which the TCP server for the file channel listens.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerClientProtocol.GetTaskStatus(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Gets the current status of a task.
            </summary>
            <param name="jobId">The job id.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <returns>The status of the task.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerClientProtocol.GetOutputFileDirectory(System.Guid)">
            <summary>
            Gets the local directory where output files for a particular job are stored if that task uses a file output channel.
            </summary>
            <param name="jobId">The job ID.</param>
            <returns>The output directory of the task.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerClientProtocol.GetLogFileContents(Ookii.Jumbo.LogFileKind,System.Int32)">
            <summary>
            Gets the contents of the diagnostic log file.
            </summary>
            <param name="kind">The kind of log file to return.</param>
            <param name="maxSize">The maximum size of the log data to return.</param>
            <returns>The contents of the diagnostic log file.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerClientProtocol.GetTaskLogFileContents(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId,System.Int32)">
            <summary>
            Gets the contents of the diagnostic log file for the specified task.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <param name="maxSize">The maximum size of the log data to return.</param>
            <returns>
            The contents of the diagnostic log file, or <see langword="null"/> if it doesn't exist.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerClientProtocol.GetCompressedTaskLogFiles(System.Guid)">
            <summary>
            Gets the contents of the diagnostic log files for all tasks of the specified job that this server has run,
            compressed into a zip file.
            </summary>
            <param name="jobId">The job ID.</param>
            <returns>A byte array containing the zip file data.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerClientProtocol.GetTaskProfileOutput(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Gets the profile output for the specified task.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <returns>
            The profile output, or <see langword="null"/> if it doesn't exist.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerClientProtocol.GetTcpChannelPort(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Gets the TCP server port for the specified task.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <returns>
            The port number, or 0 if the task is unknown or hasn't registered a port number yet.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol">
            <summary>
            Interface used by the TaskHost to communicate with its task server.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol.ReportCompletion(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId,Ookii.Jumbo.Jet.TaskMetrics)">
            <summary>
            Reports successful task completion to the task server.
            </summary>
            <param name="jobId">The job ID of the job containing the task.</param>
            <param name="taskAttemptId">The task ID.</param>
            <param name="metrics">Metrics collected during the task execution.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol.ReportProgress(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId,Ookii.Jumbo.Jet.TaskProgress)">
            <summary>
            Reports progression of a task.
            </summary>
            <param name="jobId">The job ID of the job containing the task.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <param name="progress">The progress data.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol.ReportError(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId,System.String)">
            <summary>
            Reports that the task has encountered an unrecoverable error.
            </summary>
            <param name="jobId">The job ID of the job containing the task.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <param name="failureReason">The failure reason.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol.RegisterTcpChannelPort(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId,System.Int32)">
            <summary>
            Registers the port number that the task host is listening on for TCP channel connections.
            </summary>
            <param name="jobId">The job ID of the job containing the task.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <param name="port">The port number.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol.DownloadDfsFile(System.Guid,System.String)">
            <summary>
            Requests the task server to download a file from the DFS to make it available to all tasks.
            </summary>
            <param name="jobId">The ID of the job whose tasks need the file.</param>
            <param name="dfsPath">The path of the file to download.</param>
            <returns>The local path where the file was downloaded to.</returns>
            <remarks>
            <para>
              You can use this method to download additional files from the DFS that need to be available to more than one task of a job
              but weren't included in the job data when the job was created.
            </para>
            <para>
              The task server will download the file only once; subsequent calls to this method (for the same job) will return the local
              path of the previously downloaded file. This prevents the need for all tasks to download the same data from the DFS.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JetActivator">
            <summary>
            Provides object activation services for Jumbo Jet.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetActivator.CreateInstance(System.Type,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext,System.Object[])">
            <summary>
            Creates an instance of the specified type and configures it.
            </summary>
            <param name="type">The type to instantiate.</param>
            <param name="dfsConfiguration">The configuration used to access the distributed file system.</param>
            <param name="jetConfiguration">The configuration used to access Jet.</param>
            <param name="taskAttemptConfiguration">The configuration for the task attempt.</param>
            <param name="args">The arguments to pass to the object's constructor.</param>
            <returns>An instance of the specified type with the configuration applied to it.</returns>
            <remarks>
            <para>
              This function instantiates the type specified in <paramref name="type"/>, then checks if the object
              implements <see cref="T:Ookii.Jumbo.Jet.IConfigurable"/> and if so, applies the configuration to it.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetActivator.CreateInstance(System.Type,Ookii.Jumbo.Jet.TaskExecutionUtility,System.Object[])">
            <summary>
            Creates an instance of the specified type and configures it.
            </summary>
            <param name="type">The type to instantiate.</param>
            <param name="taskExecution">A <see cref="T:Ookii.Jumbo.Jet.TaskExecutionUtility"/> instance that contains the configuration to use.</param>
            <param name="args">The arguments to pass to the object's constructor.</param>
            <returns>An instance of the specified type with the configuration applied to it.</returns>
            <remarks>
            <para>
              This function instantiates the type specified in <paramref name="type"/>, then checks if the object
              implements <see cref="T:Ookii.Jumbo.Jet.IConfigurable"/> and if so, applies the configuration to it.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)">
            <summary>
            Applies the specified configuration to the specified cobject.
            </summary>
            <param name="target">The object to configure.</param>
            <param name="dfsConfiguration">The configuration used to access the distributed file system.</param>
            <param name="jetConfiguration">The configuration used to access Jet.</param>
            <param name="taskAttemptConfiguration">The configuration for the task attempt.</param>
            <remarks>
            <para>
              This function checks if the object implements <see cref="T:Ookii.Jumbo.Jet.IConfigurable"/> and if so, applies the configuration to it.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JetClient">
            <summary>
            Provides client access to the Jumbo Jet distributed execution engine.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.JetClient"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.#ctor(Ookii.Jumbo.Jet.JetConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.JetClient"/> class with the specified configuration.
            </summary>
            <param name="config">The configuration to use.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.JetClient"/> class with the specified host name and port.
            </summary>
            <param name="hostName">The host name of the job server.</param>
            <param name="port">The port on which the job server is listening.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetClient.JobServer">
            <summary>
            Gets the <see cref="T:Ookii.Jumbo.Jet.IJobServerClientProtocol"/> instance used by this instance to communicate with the job server.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetClient.Configuration">
            <summary>
            Gets the <see cref="T:Ookii.Jumbo.Jet.JetConfiguration"/> that was used to create this instance.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.CreateJobServerHeartbeatClient">
            <summary>
            Creates a client object that can be used to communicate with a job server via the heartbeat protocol.
            </summary>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.Jet.IJobServerHeartbeatProtocol"/> that is a proxy class for
            communicating with the job server via RPC.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.CreateJobServerHeartbeatClient(Ookii.Jumbo.Jet.JetConfiguration)">
            <summary>
            Creates a client object that can be used to communicate with a job server via the heartbeat protocol
            using the specified configuration.
            </summary>
            <param name="config">A <see cref="T:Ookii.Jumbo.Jet.JetConfiguration"/> that provides the job server configuration to use.</param>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.Jet.IJobServerHeartbeatProtocol"/> that is a proxy class for
            communicating with the job server via RPC.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.CreateJobServerClient">
            <summary>
            Creates a client object that can be used to communicate with a job server.
            </summary>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.Jet.IJobServerClientProtocol"/> that is a proxy class for
            communicating with the job server via RPC.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.CreateJobServerClient(Ookii.Jumbo.Jet.JetConfiguration)">
            <summary>
            Creates a client object that can be used to communicate with a job server.
            </summary>
            <param name="config">A <see cref="T:Ookii.Jumbo.Jet.JetConfiguration"/> that provides the job server configuration to use.</param>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.Jet.IJobServerClientProtocol"/> that is a proxy class for
            communicating with the job server via RPC.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.CreateJobServerClient(System.String,System.Int32)">
            <summary>
            Creates a client object that can be used to communicate with a job server.
            </summary>
            <param name="hostName">The host name of the job server.</param>
            <param name="port">The port at which the job server is listening.</param>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.Jet.IJobServerClientProtocol"/> that is a proxy class for
            communicating with the job server via RPC.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.CreateTaskServerUmbilicalClient(System.Int32)">
            <summary>
            Creates a client object that can be used by a task host to communicate with its task server.
            </summary>
            <param name="port">The port at which the task server is listening.</param>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol"/> that is a proxy class for
            communicating with the task server via RPC.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.CreateTaskServerClient(Ookii.Jumbo.ServerAddress)">
            <summary>
            Creates a client object that can be used to communicate with its task server server.
            </summary>
            <param name="address">The address of the task server.</param>
            <returns>An object implementing <see cref="T:Ookii.Jumbo.Jet.ITaskServerClientProtocol"/> that is a proxy class for
            communicating with the task server via RPC.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.RunJob(Ookii.Jumbo.Jet.Jobs.JobConfiguration,System.String[])">
            <summary>
            Creates a new job, stores the job configuration and the specified files on the DFS, and runs the job.
            </summary>
            <param name="config">The <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> for the job.</param>
            <param name="files">The local paths of the files to store in the job directory on the DFS. This should include the assembly containing the task classes.</param>
            <returns>An instance of the <see cref="T:Ookii.Jumbo.Jet.Job"/> class describing the job that was started.</returns>
            <remarks>
            This function uses the application's configuration to create a <see cref="T:Ookii.Jumbo.Dfs.FileSystem.FileSystemClient"/> to access the DFS.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.WaitForJobCompletion(System.Guid,System.Int32)">
            <summary>
            Waits until the specified job is complete, printing progress updates to the console.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="pollIntervalMilliseconds">The poll interval in milliseconds.</param>
            <returns><see langword="true"/> if the job completed successfully; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.RunJob(Ookii.Jumbo.Jet.Job,Ookii.Jumbo.Jet.Jobs.JobConfiguration,System.String[])">
            <summary>
            Stores the job configuration and the specified files on the DFS, and runs the job.
            </summary>
            <param name="job">The job to run.</param>
            <param name="config">The <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> for the job.</param>
            <param name="files">The local paths of the files to store in the job directory on the DFS. This should include the assembly containing the task classes.</param>
            <returns>An instance of the <see cref="T:Ookii.Jumbo.Jet.Job"/> class describing the job that was started.</returns>
            <remarks>
            This function uses the application's configuration to create a <see cref="T:Ookii.Jumbo.Dfs.FileSystem.FileSystemClient"/> to access the DFS.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.RunJob(Ookii.Jumbo.Jet.Jobs.JobConfiguration,Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,System.String[])">
            <summary>
            Creates a new job, stores the job configuration and the specified files on the DFS using the specified <see cref="T:Ookii.Jumbo.Dfs.FileSystem.FileSystemClient"/>, and runs the job.
            </summary>
            <param name="config">The <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> for the job.</param>
            <param name="fileSystemClient">A <see cref="T:Ookii.Jumbo.Dfs.FileSystem.FileSystemClient"/> used to access the Jumbo DFS.</param>
            <param name="files">The local paths of the files to store in the job directory on the DFS. This should include the assembly containing the task classes.</param>
            <returns>An instance of the <see cref="T:Ookii.Jumbo.Jet.Job"/> class describing the job that was started.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.RunJob(Ookii.Jumbo.Jet.Job,Ookii.Jumbo.Jet.Jobs.JobConfiguration,Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,System.String[])">
            <summary>
            Stores the job configuration and the specified files on the DFS using the specified <see cref="T:Ookii.Jumbo.Dfs.FileSystem.FileSystemClient"/>, and runs the job.
            </summary>
            <param name="job">The job to run.</param>
            <param name="config">The <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> for the job.</param>
            <param name="fileSystemClient">A <see cref="T:Ookii.Jumbo.Dfs.FileSystem.FileSystemClient"/> used to access the Jumbo DFS.</param>
            <param name="files">The local paths of the files to store in the job directory on the DFS. This should include the assembly containing the task classes.</param>
            <returns>An instance of the <see cref="T:Ookii.Jumbo.Jet.Job"/> class describing the job that was started.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetClient.WaitForJobCompletion(System.Guid,System.Int32,System.Int32)">
            <summary>
            Waits until the specified job has finished.
            </summary>
            <param name="jobId">The job ID of the job to wait for.</param>
            <param name="millisecondsTimeout">The maximum amount of time to wait.</param>
            <param name="millisecondsInterval">The interval at which to check for job completion.</param>
            <returns><see langword="true"/> if the job finished, or <see langword="null"/> if the timeout expired.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JetConfiguration">
            <summary>
            Provides configuration for the Jumbo distributed execution environment.
            </summary>
            <remarks>
            <para>
              Jumbo Jet configuration is specified in the file <c>jet.config</c>.
            </para>
            </remarks>
            <seealso href="JetConfiguration.html">jet.config XML documentation</seealso>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetConfiguration.JobServer">
            <summary>
            Gets configuration for the job server.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetConfiguration.TaskServer">
            <summary>
            Gets configuration for the task server.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetConfiguration.FileChannel">
            <summary>
            Gets configuration for the file channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetConfiguration.TcpChannel">
            <summary>
            Gets the configuration for the TCP channel.
            </summary>
            <value>The <see cref="T:Ookii.Jumbo.Jet.TcpChannelConfigurationElement"/> for the TCP channel.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetConfiguration.MergeRecordReader">
            <summary>
            Gets configuration for the merge record reader.
            </summary>
            <value>A <see cref="T:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement"/> with the configuratin for the merge record reader.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetConfiguration.GetConfiguration">
            <summary>
            Loads the Jet configuration from the application configuration file.
            </summary>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.JetConfiguration"/> object representing the settings in the application configuration file, or
            a default instance if the section was not present in the configuration file.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetConfiguration.GetConfiguration(System.Configuration.Configuration)">
            <summary>
            Loads the Jet configuration from the specified configuratino.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.JetConfiguration" /> object representing the settings in the application configuration file, or
            a default instance if the section was not present in the configuration file.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JetHeartbeatData">
            <summary>
            Base class for data sent by the task servers to the job server.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JetHeartbeatResponse">
            <summary>
            Base class for heartbeat responses from the job server to the task servers.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetHeartbeatResponse.#ctor(Ookii.Jumbo.Jet.TaskServerHeartbeatCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.JetHeartbeatResponse"/> class with the specified command.
            </summary>
            <param name="command">The command to send to the task server.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetHeartbeatResponse.Command">
            <summary>
            Gets the command the job server sent to the task server.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JetMetrics">
            <summary>
            Represents information about the current state of the Jet distributed execution engine.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetMetrics.JobServer">
            <summary>
            Gets or sets the addrses of the job server.
            </summary>
            <value>The address of the job server.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetMetrics.RunningJobs">
            <summary>
            Gets or sets the IDs of the running jobs.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetMetrics.FinishedJobs">
            <summary>
            Gets or sets the IDs of jobs that have successfully finished.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetMetrics.FailedJobs">
            <summary>
            Gets or sets the IDs of jobs that have failed.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetMetrics.TaskServers">
            <summary>
            Gets or sets a list of task servers registered with the system.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetMetrics.Capacity">
            <summary>
            Gets or sets the total task capacity.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JetMetrics.Scheduler">
            <summary>
            Gets or sets the name of the scheduler being used.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JetMetrics.PrintMetrics(System.IO.TextWriter)">
            <summary>
            Prints the metrics.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> to print the metrics to.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Job">
            <summary>
            Represents a job.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Job.JobConfigFileName">
            <summary>
            The name of the job configuration XML file.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Job.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Job"/> class.
            </summary>
            <remarks>
            Needed for serialization.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Job.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new insatnce of the <see cref="T:Ookii.Jumbo.Jet.Job"/> class with the specified ID and path.
            </summary>
            <param name="jobId">The unique identifier of this job.</param>
            <param name="path">The path on the distributed file system where files related to the job are stored.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Job.JobId">
            <summary>
            Gets the unique identifier of this job.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Job.Path">
            <summary>
            Gets the path on the distributed file system where files related to the job are stored.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Job.GetJobConfigurationFilePath(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient)">
            <summary>
            Gets the path, including file name, of the job configuration file.
            </summary>
            <param name="client">The <see cref="T:Ookii.Jumbo.Dfs.FileSystem.FileSystemClient"/> to use to combine paths.</param>
            <returns>The full path of the job configuration file.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Job.CreateFullTaskId(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Creates the full task id for the specified task.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <returns>
            The full task ID of the form "{jobID}_taskID_attempt".
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Job.CreateFullTaskId(System.Guid,Ookii.Jumbo.Jet.TaskId)">
            <summary>
            Creates the full task id for the specified task.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskId">The task ID.</param>
            <returns>The full task ID of the form "{jobID}_taskID".</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JobServerConfigurationElement">
            <summary>
            Provides configuration information about the job server.
            </summary>
            <remarks>
            In a client application, you only need to specify the hostName and port attributes, the rest is ignored (those
            are only used by the JobServer itself).
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.HostName">
            <summary>
            Gets or sets the host name of the JobServer.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.Port">
            <summary>
            Gets or sets the port number on which the JobServer's RPC server listens.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.ListenIPv4AndIPv6">
            <summary>
            Gets or sets a value that indicates whether the server should listen on both IPv6 and IPv4.
            </summary>
            <value>
            <see langword="true"/> if the server should listen on both IPv6 and IPv4; <see langword="false"/>
            if the server should listen only on IPv6 if it's available, and otherwise on IPv4.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.JetDfsPath">
            <summary>
            Gets or sets the DFS directory in which job configuration should be stored.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.ArchiveDirectory">
            <summary>
            Gets or sets the local directory where archived jobs are stored.
            </summary>
            <value>The directory where archived jobs are stored, or <see langword="null"/> to disable job archiving.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.Scheduler">
            <summary>
            Gets or sets the assembly qualified type name of the scheduler to use for scheduling task.
            </summary>
            <value>
            The scheduler type.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.MaxTaskAttempts">
            <summary>
            Gets or sets the maximum number of times a task should be attempted if it encounters errors.
            </summary>
            <remarks>
            This number applies to an individual task. If the same task fails more often than this number, the job fails.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.MaxTaskFailures">
            <summary>
            Gets or sets the maximum number of task failures before a job fails.
            </summary>
            <value>The maximum number of task failures.</value>
            <remarks>
            This number applies to all tasks in a job. If a job encounters more task failures than this number, the job fails.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.TaskServerTimeout">
            <summary>
            Gets or sets the timeout, in milliseconds, after which a task server is declared dead if it has not sent a heartbeat.
            </summary>
            <value>The task server timeout.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.TaskServerSoftTimeout">
            <summary>
            Gets or sets the timeout, in milliseconds, after which new tasks are not scheduled on a task server if it has not sent a heartbeat.
            </summary>
            <value>The task server soft timeout.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.DataInputSchedulingMode">
            <summary>
            Gets or sets the default scheduling mode for tasks that have data input.
            </summary>
            <value>The scheduling mode for tasks that have data input.</value>
            <remarks>
            <para>
              If the value of this property is set to <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.Default"/>, it will be treated as <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.MoreServers"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.NonDataInputSchedulingMode">
            <summary>
            Gets or sets the default scheduling mode for tasks that do not have data input.
            </summary>
            <value>The scheduling mode for tasks without data input.</value>
            <remarks>
            <para>
              If the value of this property is set to <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.Default"/> or <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.OptimalLocality"/>, it will be treated as <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.MoreServers"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.SchedulingThreshold">
            <summary>
            Gets or sets the percentage of tasks of the input channel's sending stage that need to be finished before a stage can be scheduled.
            </summary>
            <value>A value between 0 and 1 that indicates the scheduling threshold. The default value is 0.4.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.BroadcastAddress">
            <summary>
            Gets or sets the IP broadcast address to use when broadcasting task completion messages.
            </summary>
            <value>The broadcast address. The default value is the IPv4 global broadcast address 255.255.255.255.</value>
            <remarks>
            This should be set to the broadcast address of your local network.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.BroadcastPort">
            <summary>
            Gets or sets the UDP port number to use when broadcasting task completion messages.
            </summary>
            <value>The broadcast port.</value>
            <remarks>
            Set to zero to disable broadcasting.
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JobStatus">
            <summary>
            Provides status information about the currently running job.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.JobId">
            <summary>
            Gets or sets the ID of the job whose status this object represents.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.JobName">
            <summary>
            Gets or sets the display name of the job.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.Stages">
            <summary>
            Gets the stages of this job.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.FailedTaskAttempts">
            <summary>
            Gets the task attempts that failed.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.AdditionalProgressCounters">
            <summary>
            Gets the additional progress counters.
            </summary>
            <value>The additional progress counters.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.TaskCount">
            <summary>
            Gets the total number of tasks in the job.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.RunningTaskCount">
            <summary>
            Gets or sets the number of tasks currently running.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.UnscheduledTaskCount">
            <summary>
            Gets or sets the number of tasks that has not yet been scheduled.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.FinishedTaskCount">
            <summary>
            Gets or sets the number of tasks that have finished.
            </summary>
            <remarks>
            This includes tasks that encountered an error.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.RackLocalTaskCount">
            <summary>
            Gets or sets the number of data input tasks that were scheduled on the same rack as their input data, but not the same server.
            </summary>
            <value>The rack local task count.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.NonDataLocalTaskCount">
            <summary>
            Gets or sets the number of data input tasks that were not scheduled on the same server or rack as their input data.
            </summary>
            <value>
            The non data local task count.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.StartTime">
            <summary>
            Gets or sets the UTC start time of the 
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.EndTime">
            <summary>
            Gets or sets the UTC end time of the 
            </summary>
            <remarks>
            This property is not valid until the job is finished.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.IsFinished">
            <summary>
            Gets or sets a value that indicates whether the job has finished.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.FailureReason">
            <summary>
            Gets or sets the reason the job failed, if it failed.
            </summary>
            <value>The failure reason, or <see langword="null"/> if the job hasn't failed.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.ErrorTaskCount">
            <summary>
            Gets the number of task attempts that failed.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.Progress">
            <summary>
            Gets the total progress of the job, between 0 and 1.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.JobStatus.IsSuccessful">
            <summary>
            Gets a value that indicates whether the job has finished successfully.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JobStatus.ToString">
            <summary>
            Gets a string representation of this <see cref="T:Ookii.Jumbo.Jet.JobStatus"/>.
            </summary>
            <returns>A string representation of this <see cref="T:Ookii.Jumbo.Jet.JobStatus"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JobStatus.ToString(System.IFormatProvider)">
            <summary>
            Gets a string representation of this <see cref="T:Ookii.Jumbo.Jet.JobStatus"/> using a specific format provider.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>A string representation of this <see cref="T:Ookii.Jumbo.Jet.JobStatus"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JobStatus.GetFriendlyNameForAdditionalProgressCounter(System.String)">
            <summary>
            Gets the friendly name for an additional progress counter.
            </summary>
            <param name="sourceName">Name of the source of the counter.</param>
            <returns>The friendly name of the counter.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JobStatus.GetStage(System.String)">
            <summary>
            Gets the stage with the specified ID.
            </summary>
            <param name="stageId">The stage ID.</param>
            <returns>The specified stage, or <see langword="null"/> if no stage with the specified ID exists.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JobStatus.ToXml">
            <summary>
            Gets an XML document containing the job status.
            </summary>
            <returns>An <see cref="T:System.Xml.Linq.XDocument"/> containing the job status.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.JobStatus.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.Jet.JobStatus"/> instance from an XML element.
            </summary>
            <param name="job">The XML element containing the job status.</param>
            <returns>A new instance of the <see cref="T:Ookii.Jumbo.Jet.JobStatus"/> class with the information from the XML document.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.AdditionalProgressCounter">
            <summary>
            Provides information about additional progress counters in the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/>.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.AdditionalProgressCounter.TypeName">
            <summary>
            Gets or sets the name of the type that reports the additional progress.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.AdditionalProgressCounter.DisplayName">
            <summary>
            Gets or sets the display name of the progress counter.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.AdditionalProgressCounter.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.AdditionalProgressCounter.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.BaseJobRunner">
            <summary>
            Base class for job runners that provides interactive prompting and output file checking support.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.OverwriteOutput">
            <summary>
            Gets or sets a value that indicates whether the output directory should be deleted, if it exists, before the job is executed.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.IsInteractive">
            <summary>
            Gets or sets a value that indicates whether the job runner should wait for user input before starting the job and before exitting.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.ReplicationFactor">
            <summary>
            Gets or sets the replication factor of the job's output files.
            </summary>
            <remarks>
            Derived classes should use this value with the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataOutput"/> items of the job configuration.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.BlockSize">
            <summary>
            Gets or sets the block size of the job's output files.
            </summary>
            <remarks>
            Derived classes should use this value with the <see cref="T:Ookii.Jumbo.Jet.IO.FileDataOutput"/> items of the job configuration.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.JobOrStageProperties">
            <summary>
            Gets or sets the property values that will override predefined values in the job configuration.
            </summary>
            <value>The job properties.</value>
            <remarks>
            <para>
              This property is used to override the value of various properties in the job configuration
              after the job runner has created it.
            </para>
            <para>
              Each item in the array takes the form "PropertyName=value" or "CompoundStageId:PropertyName=value".
              The first form is used to modify properties of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> object,
              and the second form is used to modify properties of the <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> object
              for the stage with the specified compound stage ID.
            </para>
            <para>
              You can access properties that are more than one level deep, for instance "MyStage:OutputChannel.PartitionsPerTask=2"
              is used to set the <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionsPerTask"/> property for the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.OutputChannel"/>
              property. This will cause an error if <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.OutputChannel"/> is <see langword="null"/>.
            </para>
            <para>
              This method for adjusting properties can only be done with properties whose values are of a type
              that can be converted to from a string. You cannot use this method to modify collection properties,
              or to rename stages.
            </para>
            <para>
              To apply the properties specified in this manner, call the <see cref="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.ApplyJobPropertiesAndSettings(Ookii.Jumbo.Jet.Jobs.JobConfiguration)"/> method
              in a derived class after creating your job configuration.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.JobOrStageSettings">
            <summary>
            Gets or sets additional job or stage settings that will be defined in the job configuration.
            </summary>
            <value>The job or stage settings.</value>
            <remarks>
            <para>
              You can use this property to specify or override the value of a job or stage setting
              after the job runner has created the job configuration.
            </para>
            <para>
              Each item in the array takes the form of "SettingName=value" for job settings, or
              "CompoundStageId:SettingName=value" for stage settings.
            </para>
            <para>
              If the setting is already defined, its value will be modified to the value specified
              in this property.
            </para>
            <para>
              To apply the settings specified in this manner, call the <see cref="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.ApplyJobPropertiesAndSettings(Ookii.Jumbo.Jet.Jobs.JobConfiguration)"/> method
              in a derived class after creating your job configuration.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.FileSystemClient">
            <summary>
            Gets the DFS client.
            </summary>
            <value>
            The DFS client.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.JetClient">
            <summary>
            Gets the jet client.
            </summary>
            <value>
            The jet client.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.RunJob">
            <summary>
            Starts the job.
            </summary>
            <returns>The job ID of the newly created job.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.FinishJob(System.Boolean)">
            <summary>
            Called after the job finishes.
            </summary>
            <param name="success"><see langword="true"/> if the job completed successfully; <see langword="false"/> if the job failed.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.PromptIfInteractive(System.Boolean)">
            <summary>
            Prompts the user to start or exit, if <see cref="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.IsInteractive"/> is <see langword="true"/>.
            </summary>
            <param name="promptForStart"><see langword="true"/> to prompt for the start of the job; <see langword="false"/>
            to prompt for exit.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.CheckAndCreateOutputPath(System.String)">
            <summary>
            If <see cref="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.OverwriteOutput"/> is <see langword="true"/>, deletes the output path and then re-creates it; otherwise,
            checks if the output path exists and creates it if it doesn't exist and fails if it does.
            </summary>
            <param name="outputPath">The directory where the job's output will be stored.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.GetInputFileSystemEntry(System.String)">
            <summary>
            Gets a <see cref="T:Ookii.Jumbo.Dfs.FileSystem.JumboFileSystemEntry"/> instance for the specified path, or throws an exception if the input doesn't exist.
            </summary>
            <param name="inputPath">The input file or directory.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Dfs.FileSystem.JumboFileSystemEntry"/> instance for the specified path</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.ApplyJobPropertiesAndSettings(Ookii.Jumbo.Jet.Jobs.JobConfiguration)">
            <summary>
            Adds the values of properties marked with the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobSettingAttribute"/> to the <see cref="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings"/> dictionary, 
            applies properties set by the <see cref="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.JobOrStageProperties"/> property, and adds settings defined by the <see cref="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.JobOrStageSettings"/> property,
            and .
            </summary>
            <param name="jobConfiguration">The job configuration.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.Channel">
            <summary>
            Represents the channel between two operations.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.Channel.#ctor(Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation,Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.Channel"/> class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="receiver">The receiver.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.Sender">
            <summary>
            Gets the operation that is writing records to this channel.
            </summary>
            <value>
            The sending operation.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.Receiver">
            <summary>
            Gets the operation that is reading records from this channel.
            </summary>
            <value>
            The receiving operation.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.RecordType">
            <summary>
            Gets the type of the records that can be written to this channel.
            </summary>
            <value>
            The type of the records.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.ChannelType">
            <summary>
            Gets or sets the channel type.
            </summary>
            <value>
            The channel type, or <see langword="null"/> to let the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> decide. The default value is <see langword="null"/>.
            </value>
            <remarks>
            <para>
              If the channel type is unspecified, the channel will default to a file channel unless there is only 1 partition and 1 input task or the
              number of partitions is unspecified and the input uses <see cref="T:Ookii.Jumbo.Jet.Tasks.EmptyTask`1"/>, in which case it will use a pipeline channel.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.PartitionerType">
            <summary>
            Gets or sets the partitioner to use to spread the records across the output tasks.
            </summary>
            <value>
            The <see cref="T:System.Type"/> of the partitioner to use, or <see langword="null"/> to use to the default hash partitioner. The default value is <see langword="null"/>.
            </value>
            <remarks>
            <para>
              If this value is set to a type that is a generic type definition, the type is constructed using the channel's record type.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.MultiInputRecordReaderType">
            <summary>
            Gets or sets the type of the channel's multi-input record reader.
            </summary>
            <value>
            The type of the multi-input record reader, or <see langword="null"/> to use the default for this channel type.
            </value>
            <remarks>
            <para>
              If this value is set to a type that is a generic type definition, the type is constructed using the channel's record type.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.PartitionCount">
            <summary>
            Gets or sets the number of partitions to create
            </summary>
            <value>
            The number of partitions to create, or zero to let the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> decide. The default value is 0.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.PartitionsPerTask">
            <summary>
            Gets or sets the number of partitions per task.
            </summary>
            <value>The number of partitions per task, or 0 to let the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> decide. The default value is 0.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.TaskCount">
            <summary>
            Gets or sets the number of tasks created for this channel's receiving stage.
            </summary>
            <value>
            The number of tasks, or 0 to let the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> decide. The default value is 0.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.PartitionAssignmentMethod">
            <summary>
            Gets or sets the partition assignment method used when <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.PartitionsPerTask"/> is larger than 1.
            </summary>
            <value>
            One of the values of the <see cref="T:Ookii.Jumbo.Jet.Channels.PartitionAssignmentMethod"/> enumeration.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.Settings">
            <summary>
            Gets the settings for the channel's sending stage.
            </summary>
            <value>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/> containing the settings.
            </value>
            <remarks>
            <para>
              Channel settings are applied to the stage that writes to this channel (the sending stage). In the case of a two-step operation, this can
              either be the operation's original input stage (if no additional step is created), or the additionally created first step.
            </para>
            <para>
              If no actual channel is created (empty task replacement was used), these settings are not applied at all.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.Channel.CreateInput(Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Creates an <see cref="T:Ookii.Jumbo.Jet.Jobs.InputStageInfo"/> for this channel.
            </summary>
            <param name="overrideSender">An alternative sender for this channel. May be <see langword="null"/>.</param>
            <returns>
            An <see cref="T:Ookii.Jumbo.Jet.Jobs.InputStageInfo"/>.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder">
            <summary>
            Allows you to create task classes from static methods.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.IsDynamicAssemblyCreated">
            <summary>
            Gets a value indicating whether a dynamic assembly has been created.
            </summary>
            <value>
            	<see langword="true"/> if a dynamic assembly has been created.; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.DynamicAssemblyFileName">
            <summary>
            Gets the name of the dynamic assembly file.
            </summary>
            <value>
            The name of the dynamic assembly file, or <see langword="null"/> if no assembly has been generated.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.DynamicAssemblyPath">
            <summary>
            Gets the full path of the dynamic assembly file.
            </summary>
            <value>
            The full path of the dynamic assembly file, or <see langword="null"/> if no assembly has been generated.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.CreateDynamicTask(System.Reflection.MethodInfo,System.Delegate,System.Int32,Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Creates a dynamically generated task class by overriding the specified method.
            </summary>
            <param name="methodToOverride">The method to override.</param>
            <param name="taskMethodDelegate">Delegate for the method that the implementation of <paramref name="methodToOverride"/> will call.</param>
            <param name="skipParameters">The number of parameters of <paramref name="methodToOverride"/> to skip before passing parameters on to the delegate method.</param>
            <param name="recordReuseMode">The record reuse mode.</param>
            <returns>The <see cref="T:System.Type"/> instance for the dynamically generated type.</returns>
            <remarks>
            <para>
              The <see cref="P:System.Reflection.MemberInfo.DeclaringType"/> of <paramref name="methodToOverride"/> will become the base type of the dynamic task type. If the <see cref="P:System.Reflection.MemberInfo.DeclaringType"/> is
              an interface, the base type will be <see cref="T:Ookii.Jumbo.Jet.Configurable"/> and the type will implement the specified interface. The interface or base type
              may not have any other methods that need to be overridden.
            </para>
            <para>
              The target method for <paramref name="taskMethodDelegate"/> must match the signature of the <paramref name="methodToOverride"/>, minus
              <paramref name="skipParameters"/> parameters at the start. It may optionally take an additional parameter of type <see cref="T:Ookii.Jumbo.Jet.TaskContext"/>.
            </para>
            <para>
              If the target method for <paramref name="taskMethodDelegate"/> is not public, you must add the delegate to the setting's for the
              stage in which this task is used by using the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.SerializeDelegate(Ookii.Jumbo.Jet.Jobs.SettingsDictionary,System.Delegate)"/> method.
            </para>
            <para>
              If <paramref name="recordReuseMode"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.CanCallTargetMethodDirectly(System.Delegate)">
            <summary>
            Determines whether the target method of a delegate can be called directly by a generated task class, or if the
            delegate needs to be serialized.
            </summary>
            <param name="target">The delegate.</param>
            <returns>
              <see langword="true"/> if the target method of a delegate can be called directly; <see langword="false"/> if
              the delegate needs to be serialized using <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.SerializeDelegate(Ookii.Jumbo.Jet.Jobs.SettingsDictionary,System.Delegate)"/>.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.SaveAssembly">
            <summary>
            Saves the dynamic assembly, if one was created.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.DeleteAssembly">
            <summary>
            Deletes the dynamic assembly, if it was saved.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.SerializeDelegate(Ookii.Jumbo.Jet.Jobs.SettingsDictionary,System.Delegate)">
            <summary>
            Serializes a delegate to the specified <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.
            </summary>
            <param name="settings">The settings.</param>
            <param name="taskDelegate">The task delegate.</param>
            <remarks>
            <para>
              If you've used the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.CreateDynamicTask(System.Reflection.MethodInfo,System.Delegate,System.Int32,Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)"/> method and your delegate's target method is not public, use
              this method to serialize the delegate to use to call the method and store it in the job settings.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder.DeserializeDelegate(Ookii.Jumbo.Jet.TaskContext)">
            <summary>
            Deserializes a delegate. This method is for internal Jumbo use only.
            </summary>
            <param name="context">The task context.</param>
            <returns>The deserialized delegate.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.FileInput">
            <summary>
            Represents input read from the DFS for a job being constructed by the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> class.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileInput.Path">
            <summary>
            Gets the path of a directory or file on the DFS that the input will be read from.
            </summary>
            <value>The path of a directory or file on the DFS.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileInput.RecordReaderType">
            <summary>
            Gets the type of the record reader.
            </summary>
            <value>The <see cref="T:System.Type"/> instance for the record reader. This is a class inheriting from <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> where T is <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.FileInput.RecordType"/>.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileInput.RecordType">
            <summary>
            Gets the type of the records read from the input.
            </summary>
            <value>
            A <see cref="T:System.Type"/> instance for the type of the records.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileInput.MinimumSplitSize">
            <summary>
            Gets or sets the minimum split size used to divide this input over multiple tasks.
            </summary>
            <value>
            The minimum split size. The default value is 1.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileInput.MaximumSplitSize">
            <summary>
            Gets or sets the maximum split size used to divide this input over multiple tasks.
            </summary>
            <value>
            The maximum split size. The default value is <see cref="F:System.Int32.MaxValue"/>.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.FileInput.CreateStageInput(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient)">
            <summary>
            Creates an <see cref="T:Ookii.Jumbo.Jet.IO.IDataInput"/> for this input.
            </summary>
            <param name="fileSystem">The file system.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.IO.IDataInput"/>.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput">
            <summary>
            Represents output written to the DFS for a job being constructed by the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> class.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput.Path">
            <summary>
            Gets the path of a directory on the DFS that the output is written to.
            </summary>
            <value>The path of a directory on the DFS.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput.RecordWriterType">
            <summary>
            Gets the type of the record writer.
            </summary>
            <value>The <see cref="T:System.Type"/> instance for the record writer. This will be a type inheriting from <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> where T equals <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput.RecordType"/>.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput.RecordType">
            <summary>
            Gets the type of the records that can be written to this output.
            </summary>
            <value>
            The type of the records.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput.BlockSize">
            <summary>
            Gets or sets the block size in bytes for the output files.
            </summary>
            <value>The size of the block in bytes, or 0 to use the DFS default setting. The default value is 0.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput.ReplicationFactor">
            <summary>
            Gets or sets the replication factor for the output files.
            </summary>
            <value>The replication factor, or 0 to the use the DFS default setting. The default value is 0.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput.RecordOptions">
            <summary>
            Gets or sets the record options for the output files.
            </summary>
            <value>A combination of values from the <see cref="T:Ookii.Jumbo.IO.RecordStreamOptions"/> enumeration. The default value is <see cref="F:Ookii.Jumbo.IO.RecordStreamOptions.None"/>.</value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation">
            <summary>
            Provides methods for the <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.JobBuilder"/> to transform an operation into stages in a <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/>.
            </summary>
            <remarks>
            <note>
              It's recommended to explicitly implement this interface, as the user of the <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.JobBuilder"/> shouldn't use these methods.
            </note>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.JobBuilder">
            <summary>
            Gets the job builder that this operation belongs to.
            </summary>
            <value>
            The job builder.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.Stage">
            <summary>
            Gets the <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for this operation after the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)"/> method has been called.
            </summary>
            <value>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/>, or <see langword="null"/> if the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)"/> method hasn't been called yet.
            </value>
            <remarks>
            <para>
              Any other <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation"/> that has an input channel connected to this operation can use this
              to specify their input when building the job.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)">
            <summary>
            Creates the settings in the job configuration for this operation.
            </summary>
            <param name="compiler">The compiler.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.SetOutput(Ookii.Jumbo.Jet.Jobs.Builder.IOperationOutput)">
            <summary>
            Sets the output for this operation.
            </summary>
            <param name="output">The output.</param>
            <exception cref="T:System.InvalidOperationException">This operation already has output.</exception>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.InnerJoinOperation">
            <summary>
            Represents an inner join operation.
            </summary>
            <remarks>
            <para>
              This operation joins two inputs by first sorting them (by using a spill sort on the input channel for each input) and
              then joining them using an inner equi-join using the <see cref="T:Ookii.Jumbo.IO.InnerJoinRecordReader`3"/>.
            </para>
            <para>
              In order for the join to be performed correctly, both the outer and inner input must be sorted on the join attribute.
              Please set the outer and inner comparer types accordingly.
            </para>
            <para>
              If the join uses more than one task, both the outer and inner input must be partitioned on the join attribute. For
              this purpose, the outerComparerType or innerComparerType should also implement <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>,
              or you should manually set a different <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.PartitionerType"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.InnerJoinOperation.#ctor(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder,Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.InnerJoinOperation"/> class.
            </summary>
            <param name="builder">The job builder.</param>
            <param name="outerInput">The outer input for the join operation.</param>
            <param name="innerInput">The inner input for the join operation.</param>
            <param name="innerJoinRecordReaderType">Type of the inner join record reader.</param>
            <param name="outerComparerType">Type of the comparer used to sort the outer relation. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <param name="innerComparerType">Type of the comparer used to sort the inner relation. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.InnerJoinOperation.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)">
            <summary>
            Creates the configuration for this stage.
            </summary>
            <param name="compiler">The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler" />.</param>
            <returns>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration" /> for the stage.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput">
            <summary>
            Represents the input to an operation, which is either a data input or another operation.
            </summary>
            <remarks>
            <para>
              Only implement this interface if you're also implementing <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation"/>. Data inputs
              are the only non-operation inputs.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput.RecordType">
            <summary>
            Gets the type of the records provided by this input.
            </summary>
            <value>
            The type of the record.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.IOperationOutput">
            <summary>
            Represents the output of an operation. Can either be a channel or DFS output.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.IOperationOutput.RecordType">
            <summary>
            Gets the type of the records that can be written to this output.
            </summary>
            <value>
            The type of the records.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.IOperationOutput.ApplyOutput(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Applies the output settings to the specified stage.
            </summary>
            <param name="fileSystem">The file system.</param>
            <param name="stage">The stage.</param>
            <remarks>
            This does nothing for channels; it is only relevant for DFS output.
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder">
            <summary>
            Provides methods for constructing Jumbo Jet jobs as a sequence of operations.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.#ctor(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,Ookii.Jumbo.Jet.JetClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> class.
            </summary>
            <param name="fileSystemClient">The DFS client. May be <see langword="null"/>.</param>
            <param name="jetClient">The Jet client. May be <see langword="null"/>.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.TaskBuilder">
            <summary>
            Gets the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.DynamicTaskBuilder"/> used to create task classes from methods.
            </summary>
            <value>
            The task builder.
            </value>
            <remarks>
            You only need to use this property if you are extending the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.AssemblyLocations">
            <summary>
            Gets the full paths of all the non-GAC and non-Jumbo assemblies used by this job.
            </summary>
            <value>
            The assembly paths.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Read(System.String,System.Type)">
            <summary>
            Reads input records from the specified path on the DFS.
            </summary>
            <param name="path">The path of a directory or file on the DFS.</param>
            <param name="recordReaderType">Type of the record reader.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.FileInput"/> instance representing this input.</returns>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.JobName">
            <summary>
            Gets or sets the descriptive name of the job.
            </summary>
            <value>
            The name of the job.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Settings">
            <summary>
            Gets the settings for the job.
            </summary>
            <value>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/> containing the settings.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Write(Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation,System.String,System.Type)">
            <summary>
            Writes the result of the specified operation to the DFS.
            </summary>
            <param name="operation">The operation.</param>
            <param name="path">The path of a directory on the DFS.</param>
            <param name="recordWriterType">Type of the record writer. This may be a generic type definition.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput"/> instance representing the output.</returns>
            <remarks>
            <para>
              If <paramref name="recordWriterType"/> is a generic type definition, it will be constructed using the output record type of the operation.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Process(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)">
            <summary>
            Processes the specified input using the specified task.
            </summary>
            <param name="input">The input.</param>
            <param name="taskType">Type of the task.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Process``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{Ookii.Jumbo.IO.RecordReader{``0},Ookii.Jumbo.IO.RecordWriter{``1},Ookii.Jumbo.Jet.TaskContext},Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Processes the specified input using the specified delegate.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <param name="input">The input.</param>
            <param name="processor">The processing function to use to create the task.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This method generates a class implementing <see cref="T:Ookii.Jumbo.Jet.ITask`2"/> which calls the target method of the <paramref name="processor"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.ITask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Process``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{Ookii.Jumbo.IO.RecordReader{``0},Ookii.Jumbo.IO.RecordWriter{``1}},Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Processes the specified input using the specified delegate.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <param name="input">The input.</param>
            <param name="processor">The processing function to use to create the task.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This method generates a class implementing <see cref="T:Ookii.Jumbo.Jet.ITask`2"/> which calls the target method of the <paramref name="processor"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.ITask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.CreateJob">
            <summary>
            Creates the job configuration.
            </summary>
            <returns>The job configuration.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.AddOperation(Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation)">
            <summary>
            Adds the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <remarks>
            Normally, you should only use this method if you are extending the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.AddAssembly(System.Reflection.Assembly)">
            <summary>
            Adds an assembly and all its referenced assemblies to the list of required assemblies for this job.
            </summary>
            <param name="assembly">The assembly.</param>
            <remarks>
            <para>
              You only need to call this method if you're extending the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>.
            </para>
            <para>
              GAC assemblies and assemblies belonging to Jumbo are automatically excluded.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.CheckIfInputBelongsToJobBuilder(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput)">
            <summary>
            Checks if the specified input belongs to this job builder.
            </summary>
            <param name="input">The input.</param>
            <exception cref="T:System.ArgumentException">
              The input is an operation that does not belong to this job builder.
            </exception>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Generate(System.Int32,System.Type)">
            <summary>
            Generates records using a task that takes no input.
            </summary>
            <param name="taskCount">The number of tasks in the stage.</param>
            <param name="taskType">Type of the task. May be a generic type definition with a single type parameter.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <note>
              The stage created by this method will have no input, so the input record reader for the task will be <see langword="null"/>.
            </note>
            <para>
              You can use the <see cref="T:Ookii.Jumbo.Jet.Tasks.NoInputTask`1"/> class as a base class for tasks used with this method, although this is not a requirement.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Generate``1(System.Int32,System.Action{Ookii.Jumbo.IO.RecordWriter{``0},Ookii.Jumbo.Jet.Tasks.ProgressContext})">
            <summary>
            Generates records using a task that takes no input.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <param name="taskCount">The task count.</param>
            <param name="generator">The generator function.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This method generates a class implementing <see cref="T:Ookii.Jumbo.Jet.ITask`2"/> which calls the target method of the <paramref name="generator"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.ITask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              You can set the <see cref="P:Ookii.Jumbo.Jet.Tasks.ProgressContext.Progress"/> property to report progress of the generation process.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Generate``1(System.Int32,System.Action{Ookii.Jumbo.IO.RecordWriter{``0},Ookii.Jumbo.Jet.TaskContext})">
            <summary>
            Generates records using a task that takes no input.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <param name="taskCount">The task count.</param>
            <param name="generator">The generator function.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This method generates a class implementing <see cref="T:Ookii.Jumbo.Jet.ITask`2"/> which calls the target method of the <paramref name="generator"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.ITask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Generate``1(System.Int32,System.Action{Ookii.Jumbo.IO.RecordWriter{``0}})">
            <summary>
            Generates records using a task that takes no input.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <param name="taskCount">The task count.</param>
            <param name="generator">The generator function.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This method generates a class implementing <see cref="T:Ookii.Jumbo.Jet.ITask`2"/> which calls the target method of the <paramref name="generator"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.ITask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.GroupAggregate(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type)">
            <summary>
            Groups the input records by key, then aggregates their values.
            </summary>
            <param name="input">The input.</param>
            <param name="accumulatorTaskType">The type of the accumulator task used to collect the aggregated values. May be a generic type definition with one or two generic parameters.</param>
            <param name="keyComparerType">Type of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to use to compare the aggregation keys, 
            or <see langword="null" /> to use <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>. May be a generic type definition with one type parameter, which will be set to the key type.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation"/> instance that can be used to further customize the operation.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.GroupAggregate``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Func{``0,``1,``1,Ookii.Jumbo.Jet.TaskContext,``1},System.Type,Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Groups the input records by key, then aggregates their values using the specified accumulator task function.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="input">The input.</param>
            <param name="accumulator">The accumulator function to use to create the task.</param>
            <param name="keyComparerType">Type of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to use to compare the aggregation keys, 
            or <see langword="null" /> to use <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>. May be a generic type definition with one type parameter, which will be set to the key type.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This method generates a class implementing <see cref="T:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2"/> which calls the target method of the <paramref name="accumulator"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.Accumulate(`0,`1,`1)"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.GroupAggregate``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Func{``0,``1,``1,``1},System.Type,Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Groups the input records by key, then aggregates their values using the specified accumulator task function.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="input">The input.</param>
            <param name="accumulator">The accumulator function to use to create the task.</param>
            <param name="keyComparerType">Type of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to use to compare the aggregation keys, 
            or <see langword="null" /> to use <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>. May be a generic type definition with one type parameter, which will be set to the key type.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This method generates a class implementing <see cref="T:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2"/> which calls the target method of the <paramref name="accumulator"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.Accumulate(`0,`1,`1)"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.InnerJoin(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type,System.Type)">
            <summary>
            Performs an inner equi-join on two inputs.
            </summary>
            <param name="outerInput">The outer input for the join operation.</param>
            <param name="innerInput">The inner input for the join operation.</param>
            <param name="innerJoinRecordReaderType">Type of the inner join record reader.</param>
            <param name="outerComparerType">Type of the comparer used to sort the outer relation. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <param name="innerComparerType">Type of the comparer used to sort the inner relation. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <returns>An <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.InnerJoinOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This operation joins two inputs by first sorting them (by using a spill sort on the input channel for each input) and
              then joining them using an inner equi-join using the <see cref="T:Ookii.Jumbo.IO.InnerJoinRecordReader`3"/>.
            </para>
            <para>
              In order for the join to be performed correctly, both the outer and inner input must be sorted on the join attribute.
              Please set <paramref name="outerComparerType"/> and <paramref name="innerComparerType"/> accordingly.
            </para>
            <para>
              If the join uses more than one task, both the outer and inner input must be partitioned on the join attribute. For
              this purpose, the outerComparerType or innerComparerType should also implement <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>,
              or you should manually set a different <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.Channel.PartitionerType"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Map``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{``0,Ookii.Jumbo.IO.RecordWriter{``1},Ookii.Jumbo.Jet.TaskContext},Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Runs a map function on each record in the input.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TOutput">The type of the output records.</typeparam>
            <param name="input">The input.</param>
            <param name="mapper">The map function.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <note>
              There is no non-delegate version of this method. To use an existing map task class, simply use the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Process(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)"/> function.
            </note>
            <para>
              This method generates a class inheriting from <see cref="T:Ookii.Jumbo.Jet.PushTask`2"/> which calls the target method of the <paramref name="mapper"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.PushTask`2.ProcessRecord(`0,Ookii.Jumbo.IO.RecordWriter{`1})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Map``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{``0,Ookii.Jumbo.IO.RecordWriter{``1}},Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Runs a map function on each record in the input.
            </summary>
            <typeparam name="TInput">The type of the input records.</typeparam>
            <typeparam name="TOutput">The type of the output records.</typeparam>
            <param name="input">The input.</param>
            <param name="mapper">The map function.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <note>
              There is no non-delegate version of this method. To use an existing map task class, simply use the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Process(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)"/> function.
            </note>
            <para>
              This method generates a class inheriting from <see cref="T:Ookii.Jumbo.Jet.PushTask`2"/> which calls the target method of the <paramref name="mapper"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.PushTask`2.ProcessRecord(`0,Ookii.Jumbo.IO.RecordWriter{`1})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Reduce``3(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{``0,System.Collections.Generic.IEnumerable{``1},Ookii.Jumbo.IO.RecordWriter{``2},Ookii.Jumbo.Jet.TaskContext},Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Runs a reduce function on each key in the specified input.
            </summary>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output records.</typeparam>
            <param name="input">The input.</param>
            <param name="reducer">The reducer function.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <note>
              Reduce tasks require that their input is already grouped by key. The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> class doesn't guarantee or verify this. To group the
              records in the same way other common MapReduce implementation do, use the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSortCombine(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type)"/> function.
            </note>
            <note>
              There is no non-delegate version of this method. To use an existing map task class, simply use the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Process(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)"/> function.
            </note>
            <para>
              This method generates a class inheriting from <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/> which calls the target method of the <paramref name="reducer"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.Reduce(`0,System.Collections.Generic.IEnumerable{`1},Ookii.Jumbo.IO.RecordWriter{`2})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Reduce``3(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{``0,System.Collections.Generic.IEnumerable{``1},Ookii.Jumbo.IO.RecordWriter{``2}},Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Runs a reduce function on each key in the specified input.
            </summary>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <typeparam name="TOutput">The type of the output records.</typeparam>
            <param name="input">The input.</param>
            <param name="reducer">The reducer function.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <note>
              Reduce tasks require that their input is already grouped by key. The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> class doesn't guarantee or verify this. To group the
              records in the same way other common MapReduce implementation do, use the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSortCombine(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type)"/> function.
            </note>
            <note>
              There is no non-delegate version of this method. To use an existing map task class, simply use the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Process(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)"/> function.
            </note>
            <para>
              This method generates a class inheriting from <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/> which calls the target method of the <paramref name="reducer"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.Reduce(`0,System.Collections.Generic.IEnumerable{`1},Ookii.Jumbo.IO.RecordWriter{`2})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.MemorySort(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)">
            <summary>
            Sorts the specified input in memory using <see cref="T:Ookii.Jumbo.Jet.Tasks.SortTask`1"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="comparerType">The type of <see cref="T:System.Collections.Generic.IComparer`1"/> to use for this operation, or <see langword="null"/> to use the default comparer.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation"/> instance that can be used to further customize the operation.</returns>
            <remarks>
            <para>
              This operation sorts all the records produced by a single task in memory. For large or unknown amounts of records, use <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSortCombine(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type)"/> instead.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSort(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)">
            <summary>
            Sorts the specified input by using a file channel with an output type of <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill" />.
            </summary>
            <param name="input">The input.</param>
            <param name="comparerType">Type of the comparer to use. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation" /> instance that can be used to further customize the operation.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSortCombine(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type)">
            <summary>
            Sorts the specified input by using a file channel with an output type of <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="combinerType">Type of the combiner task. May be <see langword="null"/>. May be a generic type definition with a single type parameter.</param>
            <param name="comparerType">Type of the comparer to use. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation"/> instance that can be used to further customize the operation.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSortCombine``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{``0,System.Collections.Generic.IEnumerable{``1},Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.Pair{``0,``1}},Ookii.Jumbo.Jet.TaskContext},System.Type,Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Sorts the specified input by using a file channel with an output type of <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/> and using
            the specified reduce-style combiner function.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="input">The input.</param>
            <param name="combiner">The combiner function.</param>
            <param name="comparerType">Type of the comparer to use. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation"/> instance that can be used to further customize the operation.
            </returns>
            <remarks>
            <para>
              This method generates a class inheriting from <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/> which calls the target method of the <paramref name="combiner"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.Reduce(`0,System.Collections.Generic.IEnumerable{`1},Ookii.Jumbo.IO.RecordWriter{`2})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSortCombine``2(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Action{``0,System.Collections.Generic.IEnumerable{``1},Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.Pair{``0,``1}}},System.Type,Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode)">
            <summary>
            Sorts the specified input by using a file channel with an output type of <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/> and using
            the specified reduce-style combiner function.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="input">The input.</param>
            <param name="combiner">The combiner function.</param>
            <param name="comparerType">Type of the comparer to use. May be <see langword="null"/>. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <param name="recordReuse">The record reuse mode.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation"/> instance that can be used to further customize the operation.
            </returns>
            <remarks>
            <para>
              This method generates a class inheriting from <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/> which calls the target method of the <paramref name="combiner"/> delegate
              from the <see cref="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.Reduce(`0,System.Collections.Generic.IEnumerable{`1},Ookii.Jumbo.IO.RecordWriter{`2})"/> method.
            </para>
            <note>
              The task method will be called from a completely different process than the one that is using <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>, so it should not really
              on any external state.
            </note>
            <para>
              If <paramref name="recordReuse"/> is <see cref="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default"/> and the target method has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute applied to it,
              that attribute will be copied to the task class. If the target method has the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute applied to it,
              that attribute will be copied to the task class.
            </para>
            <para>
              If the target method is a <see langword="public" /> <see langword="static"/> method, it will be called directly by the generated task class. Otherwise, the supplied
              delegate will be serialized to the task settings and used to call the method. If the target method is an instance method, the instance it belongs to will be
              serialized as well (this class must have the <see cref="T:System.SerializableAttribute"/> attribute).
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler">
            <summary>
            Compiles the job information assembled by a <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> into a <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/>.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler.Job">
            <summary>
            Gets the job configuration created by the compiler.
            </summary>
            <value>
            The job configuration.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler.DefaultChannelInputTaskCount">
            <summary>
            Gets the default number of tasks that is used for a stage with a channel
            that didn't set the number of tasks explicitly.
            </summary>
            <value>
            The default task count.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler.CreateStage(System.String,System.Type,Ookii.Jumbo.Jet.Jobs.Builder.FileInput,Ookii.Jumbo.Jet.Jobs.Builder.IOperationOutput)">
            <summary>
            Creates a stage with data input and adds it to the job.
            </summary>
            <param name="stageId">The stage ID.</param>
            <param name="taskType">The type for the stage's tasks.</param>
            <param name="input">The data input for the stage.</param>
            <param name="output">The output for the stage. May be <see langword="null"/>.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler.CreateStage(System.String,System.Type,System.Int32,Ookii.Jumbo.Jet.Jobs.InputStageInfo,Ookii.Jumbo.Jet.Jobs.Builder.IOperationOutput,System.Boolean,Ookii.Jumbo.Jet.Jobs.SettingsDictionary)">
            <summary>
            Creates a stage with optional channel input and adds it to the job.
            </summary>
            <param name="stageId">The stage ID.</param>
            <param name="taskType">The type for the stage's tasks.</param>
            <param name="taskCount">The number of tasks in he stage, or zero to use the default.</param>
            <param name="input">The input for the stage. May be <see langword="null" />.</param>
            <param name="output">The output for the stage. May be <see langword="null" />.</param>
            <param name="allowEmptyTaskReplacement">if set to <see langword="true" />, empty task replacement is allowed.</param>
            <param name="channelSettings">The settings applied to the sending stage of the <paramref name="input"/> channel if <paramref name="input"/> is not <see langword="null"/>. Not used if empty task replacement is performed.</param>
            <returns>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration" /> for the stage.
            </returns>
            <remarks>
            If <paramref name="allowEmptyTaskReplacement" /> is <see langword="true" />, the <paramref name="input" /> specifies a pipeline channel without
            internal partitioning (<paramref name="taskCount" /> must be 1), and the input stage uses <see cref="T:Ookii.Jumbo.Jet.Tasks.EmptyTask`1" /> this method will not create a new stage, but will change the task type
            of that stage with the specified task, rename the stage, and return the configuration of that stage.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler.CreateStage(System.String,System.Type,System.Int32,Ookii.Jumbo.Jet.Jobs.InputStageInfo[],Ookii.Jumbo.Jet.Jobs.Builder.IOperationOutput,Ookii.Jumbo.Jet.Jobs.SettingsDictionary[],System.Type)">
            <summary>
            Creates a stage with more than one channel input.
            </summary>
            <param name="stageId">The stage ID.</param>
            <param name="taskType">The type for the stage's tasks.</param>
            <param name="taskCount">The number of tasks in he stage, or zero to use the default.</param>
            <param name="input">The input for the stage. May be <see langword="null" />.</param>
            <param name="output">The output for the stage. May be <see langword="null" />.</param>
            <param name="channelSettings">The settings applied to the sending stage of the <paramref name="input"/> channel if <paramref name="input"/> is not <see langword="null"/>. Not used if empty task replacement is performed.</param>
            <param name="stageMultiInputRecordReaderType">Type of the stage multi input record reader.</param>
            <returns>The stage configuration.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderJob">
            <summary>
            Base class for job runners that use the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> to create the job configuration.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderJob.ConfigOnly">
            <summary>
            Gets or sets a value indicating whether the job runner will only create and print the job configuration, instead of running the job.
            </summary>
            <value>
            	<see langword="true"/> if the job runner will only create the configuration; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderJob.RunJob">
            <summary>
            Starts the job.
            </summary>
            <returns>The job ID of the newly created job.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderJob.BuildJob(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder)">
            <summary>
            When implemented in a derived class, constructs the job configuration using the specified job builder.
            </summary>
            <param name="job">The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> used to create the job.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderJob.OnJobCreated(Ookii.Jumbo.Jet.Job,Ookii.Jumbo.Jet.Jobs.JobConfiguration)">
            <summary>
            Called when the job has been created on the job server, but before running it.
            </summary>
            <param name="job">The <see cref="T:Ookii.Jumbo.Jet.Job"/> instance describing the job.</param>
            <param name="jobConfiguration">The <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> that will be used when the job is started.</param>
            <remarks>
              Override this method if you want to make changes to the job configuration (e.g. add settings) or upload additional files to the DFS.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderJob.WriteOutput(Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation,System.String,System.Type)">
            <summary>
            Writes the result of the operation to the DFS using this instance's settings for <see cref="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.BlockSize"/> and <see cref="P:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.ReplicationFactor"/>.
            </summary>
            <param name="operation">The operation whose output to write.</param>
            <param name="outputPath">The output path.</param>
            <param name="recordWriterType">The type of the record writer to use.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.FileOutput"/>.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode">
            <summary>
            The way the record reuse attribute is applied to tasks that are generated from a
            delegate function by the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/>.
            </summary>
            <remarks>
            <para>
              This allows you to specify the record reuse mode when using an anonymous delegate or lambda as
              the target method.
            </para>
            </remarks>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Default">
            <summary>
            The record reuse attribute is copied from the delegate's target method.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.DoNotAllow">
            <summary>
            The record reuse attribute is never applied.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.Allow">
            <summary>
            The record reuse attribute is always applied, with <see cref="P:Ookii.Jumbo.Jet.AllowRecordReuseAttribute.PassThrough"/> set to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.Builder.RecordReuseMode.PassThrough">
            <summary>
            The record reuse attribute is always applied, with <see cref="P:Ookii.Jumbo.Jet.AllowRecordReuseAttribute.PassThrough"/> set to <see langword="true"/>.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation">
            <summary>
            Represents a sorting operation.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation.CombinerType">
            <summary>
            Gets the type of the combiner.
            </summary>
            <value>
            The type of the combiner.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation.ComparerType">
            <summary>
            Gets the type of the comparer.
            </summary>
            <value>
            The type of the comparer.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation.CreateMemorySortOperation(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder,Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)">
            <summary>
            Creates a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation"/> class for regular sorting.
            </summary>
            <param name="builder">The job builder.</param>
            <param name="input">The input for this operation.</param>
            <param name="comparerType">The type of <see cref="T:System.Collections.Generic.IComparer`1"/> to use for this operation, or <see langword="null"/> to use the default comparer. May be a generic type definition with a single type parameter.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation"/> instance.</returns>
            <remarks>
            If <paramref name="comparerType"/> is a generic type definition with a singe type parameter, it will be constructed using the input's record type.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation.CreateSpillSortOperation(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder,Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type)">
            <summary>
            Creates a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation" /> class for regular sorting.
            </summary>
            <param name="builder">The job builder.</param>
            <param name="input">The input for this operation.</param>
            <param name="comparerType">Type of the comparer to use, or <see langword="null"/> to use the default. May be a generic type definition with a single type parameter. Both <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> are supported, but using <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.</param>
            <param name="combinerType">The type of the combiner task to use, or <see langword="null" /> to use no combiner. May be a generic type definition with a single type parameter.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation" /> instance.
            </returns>
            <remarks>
            If <paramref name="combinerType" /> is a generic type definition with a singe type parameter, it will be constructed using the input's record type.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.SortOperation.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)">
            <summary>
            Creates the configuration for this stage.
            </summary>
            <param name="compiler">The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler"/>.</param>
            <returns>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation">
            <summary>
            An operation representing data processing being done in a single job stage.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation.#ctor(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder,Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> class.
            </summary>
            <param name="builder">The job builder.</param>
            <param name="input">The input for the operation.</param>
            <param name="taskType">Type of the task. May be a generic type definition with a single type parameter.</param>
            <remarks>
            If <paramref name="taskType"/> is a generic type definition with a singe type parameter, it will be constructed using the input's record type.
            You can use this with types such as <see cref="T:Ookii.Jumbo.Jet.Tasks.EmptyTask`1"/>, in which case you can specify them as <c>typeof(EmptyTask&lt;&gt;)</c> without
            specifying the record type.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation.#ctor(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder,System.Int32,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation"/> class for a stage without input.
            </summary>
            <param name="builder">The job builder.</param>
            <param name="taskCount">The number of tasks in the stage.</param>
            <param name="taskType">Type of the task. May be a generic type definition with a single type parameter.</param>
            <remarks>
            If <paramref name="taskType"/> is a generic type definition with a singe type parameter, it will be constructed using the input's record type.
            You can use this with types such as <see cref="T:Ookii.Jumbo.Jet.Tasks.EmptyTask`1"/>, in which case you can specify them as <c>typeof(EmptyTask&lt;&gt;)</c> without
            specifying the record type.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation.InputChannel">
            <summary>
            Gets the input channel for this operation.
            </summary>
            <value>
            The input channel, or <see langword="null"/>
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.StageOperation.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)">
            <summary>
            Creates the configuration for this stage.
            </summary>
            <param name="compiler">The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler"/>.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase">
            <summary>
            Base class for operations that create a stage.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.#ctor(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase"/> class.
            </summary>
            <param name="builder">The job builder.</param>
            <param name="taskType">Type of the task.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.StageId">
            <summary>
            Gets or sets the name of the stage that will be created from this operation.
            </summary>
            <value>
            The name of the stage.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.TaskType">
            <summary>
            Gets information about the type of the task.
            </summary>
            <value>
            Information about the type of the task.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.Output">
            <summary>
            Gets the output for this operation.
            </summary>
            <value>
            The output, or <see langword="null"/> if no output has been specified.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.Settings">
            <summary>
            Gets the settings for the stage.
            </summary>
            <value>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/> containing the settings.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.AddSchedulingDependency(Ookii.Jumbo.Jet.Jobs.Builder.StageOperation)">
            <summary>
            Adds a scheduling dependency on the specified stage to this stage.
            </summary>
            <param name="stage">The stage that this stage depends on.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)">
            <summary>
            Creates the configuration for this stage.
            </summary>
            <param name="compiler">The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler"/>.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation">
            <summary>
            Represents a job builder operation that may consist of two steps.
            </summary>
            <remarks>
            <para>
              Sorting is an example of a two step operation: first each input is locally sorted, and then the result is merged on the receiving side of the channel.
            </para>
            <para>
              The additional step is only created when necessary. If the input is a channel with only one task in the sending stage (or a file input with only one split),
              or the channel type is explicitly set to pipeline no additional step is created.
            </para>
            <para>
              Any settings specified in the <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.Settings"/> property will be applied to both stages created for this step.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation.#ctor(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder,Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation"/> class.
            </summary>
            <param name="builder">The job builder.</param>
            <param name="input">The input for the operation.</param>
            <param name="taskType">Type of the task. May be a generic type definition with a single type parameter.</param>
            <param name="secondStepTaskType">The type of the task for the second step. May be a generic type definition with a single type parameter. May be <see langword="null"/> to use the same type as <paramref name="taskType"/>.</param>
            <param name="usePrePartitioning">If set to <see langword="true"/> the input to the first step will be partitioned when a second step is created.</param>
            <remarks>
            <para>
              If <paramref name="taskType"/> is a generic type definition with a singe type parameter, it will be constructed using the input's record type.
              You can use this with types such as <see cref="T:Ookii.Jumbo.Jet.Tasks.EmptyTask`1"/>, in which case you can specify them as <c>typeof(EmptyTask&lt;&gt;)</c> without
              specifying the record type.
            </para>
            <para>
              For <paramref name="secondStepTaskType"/> the same thing is done by using the output record type of the <paramref name="taskType"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation.SecondStepStageId">
            <summary>
            Gets or sets the stage ID for the second step, if one is created.
            </summary>
            <value>
            The second step stage ID, or <see langword="null"/> to use <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.StageOperationBase.StageId"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation.SecondStepTaskType">
            <summary>
            Gets the type of the task for the second step, if one is created.
            </summary>
            <value>
            The type of the second step's task.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation.FirstStepStage">
            <summary>
            Gets the <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the first step.
            </summary>
            <value>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the first step, or <see langword="null" /> if the stage hasn't been compiled yet.
            </value>
            <remarks>
            <para>
              If a second step is created, <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.Stage"/> will return the second step. This property can be used to access the first step's configuration.
            </para>
            <para>
              If no second step was created, the value of <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation.FirstStepStage"/> will be the same as <see cref="P:Ookii.Jumbo.Jet.Jobs.Builder.IJobBuilderOperation.Stage"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.Builder.TwoStepOperation.CreateConfiguration(Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler)">
            <summary>
            Creates the configuration for this stage.
            </summary>
            <param name="compiler">The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderCompiler"/>.</param>
            <returns>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.IJobRunner">
            <summary>
            Interface for classes that provide job running services.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.IJobRunner.RunJob">
            <summary>
            Starts the job.
            </summary>
            <returns>The job ID of the newly created job.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.IJobRunner.FinishJob(System.Boolean)">
            <summary>
            Called after the job finishes.
            </summary>
            <param name="success"><see langword="true"/> if the job completed successfully; <see langword="false"/> if the job failed.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.InputStageInfo">
            <summary>
            Provides information about an input stage to the <see cref="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddStage(System.String,System.Type,System.Int32,Ookii.Jumbo.Jet.Jobs.InputStageInfo)"/> method.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.InputStageInfo.#ctor(Ookii.Jumbo.Jet.Jobs.StageConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.InputStageInfo"/> class.
            </summary>
            <param name="inputStage">The stage configuration of the input stage.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.InputStage">
            <summary>
            Gets the stage configuration of the input stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.ChannelType">
            <summary>
            Gets the type of the channel to use.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.PartitionerType">
            <summary>
            Gets the type of partitioner to use.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.PartitionsPerTask">
            <summary>
            Gets the number of partitions to create for each output task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.DisableDynamicPartitionAssignment">
            <summary>
            Gets or sets a value indicating whether to disable dynamic partition assignment.
            </summary>
            <value>
            	<see langword="true"/> if dynamic partition assignment; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            <para>
              If <see cref="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.PartitionsPerTask"/> is larger than 1, tasks can dynamically receive additional partitions
              besides those that were initially assigned to them.
            </para>
            <para>
              If this property is set to <see langword="true"/>, dynamic partition assignment is disabled for
              the receiving stage of this channel, and every task will only ever process the partitions it was
              initially assigned.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.PartitionAssignmentMethod">
            <summary>
            Gets or sets the method used to assign partitions to tasks when the job is started.
            </summary>
            <value>The partition assignment method.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.InputStageInfo.MultiInputRecordReaderType">
            <summary>
            Gets the type of multi input record reader to use.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration">
            <summary>
            Provides configuration information for a specific job.
            </summary>
            <seealso href="JobConfiguration.html">Job configuration XML documentation</seealso>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.JobConfiguration.XmlNamespace">
            <summary>
            The XML namespace for the job configuration XML.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.JobConfiguration.SchedulingThresholdSettingKey">
            <summary>
            The key that can be used in the <see cref="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings"/> or <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> to override the
            <see cref="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.SchedulingThreshold"/> setting. The value of this setting is a <see cref="T:System.Single"/>
            between 0 and 1 that indicates the scheduling threshold.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.#ctor(System.Reflection.Assembly[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> class with the specified assembly.
            </summary>
            <param name="assemblies">The assemblies containing the task types.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> class with the specified assembly file name.
            </summary>
            <param name="assemblyFileNames">The file names of the assemblies containing the task types for this class.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobName">
            <summary>
            Gets or sets a descriptive name for the job. This is used for informational purposes only, and doesn't need to be unique.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AssemblyFileNames">
            <summary>
            Gets the file name of the assembly holding the task classes.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.Stages">
            <summary>
            Gets a list of stages.
            </summary>  
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AdditionalProgressCounters">
            <summary>
            Gets the additional progress counters.
            </summary>
            <value>The additional progress counters.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.SchedulerOptions">
            <summary>
            Gets or sets the options controlling the scheduler behavior.
            </summary>
            <value>The scheduler options.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings">
            <summary>
            Gets a list of settings that can be accessed by the tasks in this job.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddDataInputStage(System.String,Ookii.Jumbo.Jet.IO.IDataInput,System.Type)">
            <summary>
            Adds a stage that reads input from a <see cref="T:Ookii.Jumbo.Jet.IO.IDataInput"/>.
            </summary>
            <param name="stageId">The name of the stage. This name will serve as the base name for all the tasks in the stage.</param>
            <param name="input">The <see cref="T:Ookii.Jumbo.Jet.IO.IDataInput"/> that provides the input.</param>
            <param name="taskType">The type implementing the task's functionality; this type must implement <see cref="T:Ookii.Jumbo.Jet.ITask`2"/>.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the new stage.
            </returns>
            <remarks>
              <note>
            Information about stages is not preserved through XML serialization, so you should not use this method on a <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/>
            object created using the <see cref="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.LoadXml(System.String)"/> method.
              </note>
              <para>
            The new stage will contain as many tasks are there are blocks in the input file.
              </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddStage(System.String,System.Type,System.Int32,Ookii.Jumbo.Jet.Jobs.InputStageInfo)">
            <summary>
            Adds a stage that takes input from other stages or no input.
            </summary>
            <param name="stageId">The ID of the new stage.</param>
            <param name="taskType">The type implementing the task's functionality; this type must implement <see cref="T:Ookii.Jumbo.Jet.ITask`2"/>.</param>
            <param name="taskCount">The number of tasks in the new stage.</param>
            <param name="inputStage">Information about the input stage for this stage, or <see langword="null"/> if the stage has no inputs.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the new stage.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddStage(System.String,System.Type,System.Int32,System.Collections.Generic.IEnumerable{Ookii.Jumbo.Jet.Jobs.InputStageInfo},System.Type)">
            <summary>
            Adds a stage that takes input from other stages or no input.
            </summary>
            <param name="stageId">The ID of the new stage.</param>
            <param name="taskType">The type implementing the task's functionality; this type must implement <see cref="T:Ookii.Jumbo.Jet.ITask`2"/>.</param>
            <param name="taskCount">The number of tasks in the new stage.</param>
            <param name="inputStages">Information about the input stages for this stage, or <see langword="null"/> if the stage has no inputs.</param>
            <param name="stageMultiInputRecordReaderType">The type of the multi input record reader to use to combine records from multiple input stages. This type must
            inherit from <see cref="T:Ookii.Jumbo.IO.MultiInputRecordReader`1"/>. This type is not used if the stage has zero or one inputs.</param>
            <returns>
            A <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the new stage.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetStage(System.String)">
            <summary>
            Gets the root stage with the specified ID.
            </summary>
            <param name="stageId">The ID of the stage. This may not be a compound stage ID.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage, or <see langword="null"/> if no stage with that ID exists.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetPipelinedStages(System.String)">
            <summary>
            Gets all stages in a compound stage ID.
            </summary>
            <param name="compoundStageId">The compound stage ID.</param>
            <returns>A list of all <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> instances for the stages, or <see langword="null"/> if any of the components
            of the compound stage ID could not be found.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetStageWithCompoundId(System.String)">
            <summary>
            Gets the stage with the specified compound stage ID.
            </summary>
            <param name="compoundStageId">The compound stage ID.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage, or <see langword="null"/> if no stage with that ID exists.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetTotalTaskCount(System.String)">
            <summary>
            Gets the total number of tasks in a particular child stage.
            </summary>
            <param name="compoundStageId">The compound stage ID.</param>
            <returns>The number of tasks that will be created for the compound stage ID, which is the product of the number of tasks in each stage in the compound ID.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetTotalTaskCount(System.Collections.Generic.IList{Ookii.Jumbo.Jet.Jobs.StageConfiguration},System.Int32)">
            <summary>
            Gets the total number of tasks in a particular child stage.
            </summary>
            <param name="stages">A list of pipelined stages, as returned by <see cref="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetPipelinedStages(System.String)"/>.</param>
            <param name="start">The index in <paramref name="stages"/> at which to start.</param>
            <returns>The number of tasks that will be created for the pipelined stages, which is the product of the number of tasks in each stage in the compound ID.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.SaveXml(System.IO.Stream)">
            <summary>
            Saves the current instance as XML to the specified stream.
            </summary>
            <param name="stream">The stream to save to.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetInputStagesForStage(System.String)">
            <summary>
            Gets the sending stages for the specified stage's input channel.
            </summary>
            <param name="stageId">The stage ID. This may not be a compound stage ID.</param>
            <returns>A list of stages whose <see cref="T:Ookii.Jumbo.Jet.Channels.OutputChannel"/> is connected to the stage with the specified <paramref name="stageId"/>, or an empty list if the specified stage does not have an input channel or does not exist.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetExplicitDependenciesForStage(System.String)">
            <summary>
            Gets the stages that the specified stage explicitly depends on.
            </summary>
            <param name="stageId">The stage ID of the stage whose dependencies to retrieve.</param>
            <returns>A list of root stages that have the specified <paramref name="stageId"/> listed in their <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.Leaf"/> child stage's <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DependentStages"/> collection.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.RenameStage(Ookii.Jumbo.Jet.Jobs.StageConfiguration,System.String)">
            <summary>
            Renames a stage and updates all references to its name.
            </summary>
            <param name="stage">The stage to rename.</param>
            <param name="newName">The new name of the stage.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetAllChannels">
            <summary>
            Gets all channels in the job.
            </summary>
            <returns>A list of all channels in the jobs.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetDependencyOrderedStages">
            <summary>
            Gets the top-level stages of the task in dependency order (if stage B depends on the output of stage A, then B will come after A in the order).
            </summary>
            <returns>The ordered list of stages.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.LoadXml(System.IO.Stream)">
            <summary>
            Loads job configuration from an XML source.
            </summary>
            <param name="stream">The stream containing the XML.</param>
            <returns>An instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> class created from the XML.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.LoadXml(System.String)">
            <summary>
            Loads job configuration from an XML source.
            </summary>
            <param name="file">The path of the file containing the XML.</param>
            <returns>An instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> class created from the XML.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddAdditionalProgressCounter(System.Type)">
            <summary>
            Adds an additional progress counter for the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns><see langword="true"/> if the additional counter was added; <see langword="false"/> if <paramref name="type"/> was already added or didn't
            define an additional progress counter.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.Validate">
            <summary>
            Checks whether this job configuration is complete and consistent.
            </summary>
            <remarks>
            <para>
              This method is intended to be used after constructing the job before it is submitted. It uses information that may not
              be available after deserialization, and requires the various types to be loaded.
            </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">The job configuration is invalid.</exception>
            <exception cref="T:System.NotSupportedException">One of the record types used is not supported by <see cref="T:Ookii.Jumbo.IO.ValueWriter`1"/>.</exception>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetSetting``1(System.String,``0)">
            <summary>
            Gets a setting with the specified type and default value.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.TryGetSetting``1(System.String,``0@)">
            <summary>
            Tries to get a setting with the specified type from the job settings.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting..</param>
            <param name="value">If the function returns <see langword="true"/>, receives the value of the setting.</param>
            <returns><see langword="true"/> if the settings dictionary contained the specified setting; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetSetting(System.String,System.String)">
            <summary>
            Gets a string setting with the specified default value.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddSetting(System.String,System.String)">
            <summary>
            Adds a setting.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="value">The value of the setting.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddTypedSetting``1(System.String,``0)">
            <summary>
            Adds a setting with the specified type.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting.</param>
            <param name="value">The value of the setting.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddSettings(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Adds the specified settings.
            </summary>
            <param name="settings">The settings. May be <see langword="null"/>.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo">
            <summary>
            Provides information about a job runner.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo"/> class.
            </summary>
            <param name="type">The type of the job runner.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo.Name">
            <summary>
            Gets the name of the job runner.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo.Description">
            <summary>
            Gets a description of the job runner.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo.GetJobRunners(System.Reflection.Assembly)">
            <summary>
            Gets all the job runners defined in the specified assembly.
            </summary>
            <param name="assembly">The assembly to check for job runners.</param>
            <returns>An array holding the job runners in the assembly.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo.GetJobRunner(System.Reflection.Assembly,System.String)">
            <summary>
            Gets the specified job runner from the specified assembly.
            </summary>
            <param name="assembly">The assembly to check for the job runner.</param>
            <param name="name">The name of the job runner.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo"/> for the specified job runner, or <see langword="null" /> if it was not found.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo.CreateInstance(Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,System.String[],System.Int32,Ookii.CommandLine.ParseOptions)">
            <summary>
            Creates an instance of the job runner.
            </summary>
            <param name="dfsConfiguration">The Jumbo DFS configuration for the job.</param>
            <param name="jetConfiguration">The Jumbo Jet configuration for the job.</param>
            <param name="args">The arguments for the job.</param>
            <param name="index">The index of the first argument to parse.</param>
            <param name="parseOptions">The options that control parsing.</param>
            <returns>An instance of the job runner, or <see langword="null" /> if the incorrect number of arguments was specified.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobRunnerInfo.CreateInstance(System.String[],System.Int32,Ookii.CommandLine.ParseOptions)">
            <summary>
            Creates an instance of the job runner with the configuration from the app.config file.
            </summary>
            <param name="args">The arguments for the job.</param>
            <param name="index">The index of the first argument to parse.</param>
            <param name="parseOptions">The options that control parsing.</param>
            <returns>An instance of the job runner, or <see langword="null" /> if the incorrect number of arguments was specified.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.JobSettingAttribute">
            <summary>
            Indicates that a property should be added to the job settings for a job.
            </summary>
            <remarks>
            <para>
              You can apply this attribute to properties of a job runner class that inherits from <see cref="T:Ookii.Jumbo.Jet.Jobs.BaseJobRunner"/>.
              Call the <see cref="M:Ookii.Jumbo.Jet.Jobs.BaseJobRunner.ApplyJobPropertiesAndSettings(Ookii.Jumbo.Jet.Jobs.JobConfiguration)"/> method after creating your <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/>
              to add the properties tot the job settings.
            </para>
            <para>
              The <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilderJob"/> class automatically
              do this after the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> has been created.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobSettingAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobSettingAttribute"/> class that
            will use "JobBuilderClassName.PropertyName" as the setting's key.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.JobSettingAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.JobSettingAttribute"/> class with the specified key.
            </summary>
            <param name="key">The key used for the setting in the settings dictionary.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.JobSettingAttribute.Key">
            <summary>
            Gets the key used for the setting in the settings dictionary.
            </summary>
            <value>The key for the setting, or <see langword="null" /> if they key should be "JobBuilderClassName.PropertyName".</value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.SchedulerOptions">
            <summary>
            Provides job configuration options to configure the behaviour of the scheduler.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SchedulerOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.SchedulerOptions"/> class.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.SchedulerOptions.MaximumDataDistance">
            <summary>
            Gets or sets the maximum distance from the input data for a data input task.
            </summary>
            <value>Zero to allow only data-local tasks, one to also allow rack-local tasks, two or higher to also allow non-local tasks. The default value is two.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.SchedulerOptions.DataInputSchedulingMode">
            <summary>
            Gets or sets a value indicating how the server will assign DFS input tasks to task servers.
            </summary>
            <value>
            	One of the values of the <see cref="T:Ookii.Jumbo.Jet.SchedulingMode"/> enumeration.
            </value>
            <remarks>
            <para>
              When this property is set to <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.MoreServers"/>, the scheduler will prefer the server with the most available tasks, while
              <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.FewerServers"/> means it will prefer the server with the fewest available tasks. Note that in either case, it will
              still prefer a local task of a non-local one regardless of the number of available tasks.
            </para>
            <para>
              When this property is set to <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.OptimalLocality"/>, the scheduler will attempt to schedule in a way that minimizes the
              number of non-local tasks, without looking at the number of available tasks on the server.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.SchedulerOptions.NonDataInputSchedulingMode">
            <summary>
            Gets or sets a value indicating how the server will assign tasks that do not have data input to task servers.
            </summary>
            <value>
            	One of the values of the <see cref="T:Ookii.Jumbo.Jet.SchedulingMode"/> enumeration.
            </value>
            <remarks>
            <para>
              When this property is set to <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.MoreServers"/>, the scheduler will prefer the server with the most available tasks, while
              <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.FewerServers"/> means it will prefer the server with the fewest available tasks.
            </para>
            <para>
              The value of <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.OptimalLocality"/> is not valid for this property; it will be treated as <see cref="F:Ookii.Jumbo.Jet.SchedulingMode.Default"/>.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary">
            <summary>
            Provides settings for a job configuration.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/> class with elements that are copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/> whose elements are copied to the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/> class with serialized data.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object containing the information required to serialize the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> structure containing the source and destination of the serialized stream associated with the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.AddSetting(System.String,System.Object)">
            <summary>
            Adds a setting with the specified type.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="value">The value of the setting.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.GetSetting``1(System.String,``0)">
            <summary>
            Gets a setting with the specified type and default value.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.TryGetSetting``1(System.String,``0@)">
            <summary>
            Tries to get a setting with the specified type.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting..</param>
            <param name="value">If the function returns <see langword="true"/>, receives the value of the setting.</param>
            <returns><see langword="true"/> if the settings dictionary contained the specified setting; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.GetSetting(System.String,System.String)">
            <summary>
            Gets a string setting with the specified default value.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.GetJobOrStageSetting(Ookii.Jumbo.Jet.Jobs.JobConfiguration,Ookii.Jumbo.Jet.Jobs.StageConfiguration,System.String,System.String)">
            <summary>
            Gets a setting's string value with the specified default value, checking first in the stage settings and then in the job settings.
            </summary>
            <param name="job">The job configuration.</param>
            <param name="stage">The stage stage configuration.</param>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in either the stage or job settings.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.SettingsDictionary.GetJobOrStageSetting``1(Ookii.Jumbo.Jet.Jobs.JobConfiguration,Ookii.Jumbo.Jet.Jobs.StageConfiguration,System.String,``0)">
            <summary>
            Gets a setting with the specified type and default value, checking first in the stage settings and then in the job settings.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="job">The job configuration.</param>
            <param name="stage">The stage stage configuration.</param>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary" />.</param>
            <returns>
            The value of the setting, or <paramref name="defaultValue" /> if the setting was not present in either the stage or job settings.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration">
            <summary>
            Provides the configuration for a stage in a job. A stage is a collection of tasks that perform the same function
            but on different inputs.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageId">
            <summary>
            Gets or sets the unique identifier for the stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.TaskType">
            <summary>
            Gets or sets the type that implements the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.TaskTypeInfo">
            <summary>
            Gets information about the task type.
            </summary>
            <value>
            The <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.TaskTypeInfo"/> for the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.TaskType"/>, or <see langword="null"/> if the type has not been set.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.TaskCount">
            <summary>
            Gets or sets the number of tasks in this stage.
            </summary>
            <remarks>
            This property is ignored if <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataInput"/> is not <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataInput">
            <summary>
            Gets or sets the input for this stage.
            </summary>
            <value>
            The input for the stage, or <see langword="null"/> if the stage has no input or channel input, or the job configuration was loaded from XML.
            </value>
            <remarks>
            <note>
              This value is not saved in the job configuration, and will not be available after loading a job configuration.
              Instead, the type of this property will be saved in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataInputType"/>.
            </note>
            <note>
              Don't set this property manually while constructing a job. Instead, use the <see cref="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddDataInputStage(System.String,Ookii.Jumbo.Jet.IO.IDataInput,System.Type)"/> method.
            </note>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataInputType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> of the <see cref="T:Ookii.Jumbo.Jet.IO.IDataInput"/> used by this stage.
            </summary>
            <value>
            The type of the input, or <see langword="null"/> if the stage has no input or channel input.
            </value>
            <remarks>
            <note>
              Don't set this property manually while constructing a job. Instead, use the <see cref="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.AddDataInputStage(System.String,Ookii.Jumbo.Jet.IO.IDataInput,System.Type)"/> method.
            </note>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.HasDataInput">
            <summary>
            Gets a value indicating whether this stage has input other than a channel.
            </summary>
            <value>
            	<see langword="true"/> if this instance has input; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataOutput">
            <summary>
            Gets or sets the data output for this stage.
            </summary>
            <value>
            The output for the stage, or <see langword="null"/> if the stage has no output or channel output, or the job configuration was loaded from XML.
            </value>
            <remarks>
            <note>
              This value is not saved in the job configuration, and will not be available after loading a job configuration.
              Instead, the type of this property will be saved in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataInputType"/>.
            </note>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataOutputType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> of the <see cref="T:Ookii.Jumbo.Jet.IO.IDataOutput"/> used by this stage.
            </summary>
            <value>
            The type of the input, or <see langword="null"/> if the stage has no output or channel output.
            </value>
            <remarks>
            <note>
              Don't set this property manually while constructing a job. Instead, use the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DataOutput"/> property.
            </note>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.HasDataOutput">
            <summary>
            Gets a value indicating whether this stage has an <see cref="T:Ookii.Jumbo.Jet.IO.IDataOutput"/> to which the output is written.
            </summary>
            <value>
            	<see langword="true"/> if this instance has data output; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.ChildStage">
            <summary>
            Gets or sets a child stage that will be connected to this stage's tasks via a <see cref="T:Ookii.Jumbo.Jet.Channels.PipelineOutputChannel"/>.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.Parent">
            <summary>
            Gets the parent of this instance.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.Root">
            <summary>
            Gets the root stage of this compound stage.
            </summary>
            <value>The root.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.Leaf">
            <summary>
            Gets the deepest nested child stage of this compound stage.
            </summary>
            <value>The leaf child stage.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.ChildStagePartitionerType">
            <summary>
            Gets or sets the name of the type of the partitioner to use to partitioner elements amount the child stages' tasks.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings">
            <summary>
            Gets or sets a list of settings that are specific to this task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.OutputChannel">
            <summary>
            Gets or sets the output channel configuration for this stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.MultiInputRecordReaderType">
            <summary>
            Gets or sets the type of multi record reader to use when there are multiple channels with this stage as output stage.
            </summary>
            <remarks>
            <para>
              Whereas the <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.MultiInputRecordReaderType"/> property of the <see cref="T:Ookii.Jumbo.Jet.Channels.ChannelConfiguration"/> class is used to specify
              the multi input record reader to use to combine the output of all the tasks in the channel's input stage, this property is used to indicate
              how the output of the input stages of this stage should be combined, if there is more than one.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.DependentStages">
            <summary>
            Gets the IDs of stages that have a dependency on this stage that is not represented by a channel.
            </summary>
            <value>The IDs of the dependent stages.</value>
            <remarks>
            <para>
              In some cases, a stage may depend on the work done by another stage in a way that cannot be
              represented by a channel. For example, if the stage requires DFS output that was produced
              by that stage, it must not be scheduled before that stage finishes even though there is no
              channel between them.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.AllowRecordReuse">
            <summary>
            Gets a value that indicates whether the task type allows reusing the same object instance for every record.
            </summary>
            <remarks>
            <para>
              If this property is <see langword="true"/>, it means that the record reader (or if this stage is a child stage,
              the parent stage) that provides the input records for this stage can reuse the same object instance for every record.
            </para>
            <para>
              This property will return <see langword="true"/> if the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> is defined on the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.TaskType"/>.
              If the <see cref="P:Ookii.Jumbo.Jet.AllowRecordReuseAttribute.PassThrough"/> property is <see langword="true"/>, then this property will return <see langword="true"/>
              only if the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.AllowOutputRecordReuse"/> property is <see langword="true" />.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.AllowOutputRecordReuse">
            <summary>
            Gets a value that indicates whether the tasks of this stage may re-use the same object instance when they
            write records to the output.
            </summary>
            <remarks>
            <para>
              This property will return <see langword="true"/> if this stage has no child stage, or if child stage's <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.AllowRecordReuse"/>
              property is <see langword="true"/> and the child stage is a push task.
            </para>
            <para>
              If you write a task type that may be used in multiple types of jobs, and you are not certain what the job configuration
              the task type is used in will look like, you should check this property to see if you can re-use the same object instance
              for the record passed to every call to <see cref="M:Ookii.Jumbo.IO.RecordWriter`1.WriteRecord(`0)"/>. If this property is <see langword="false"/>, you must create
              a new instance every time.
            </para>
            <para>
              A child stage which isn't a push task doesn't support output record reuse because the pipeline channel for pull tasks doesn't support it.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.CompoundStageId">
            <summary>
            Gets the compound stage ID.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.InternalPartitionCount">
            <summary>
            Gets the total number of partitions output from this stage. This does not include the output channel's partitioning, only the internal partitioning
            done by compound stages.
            </summary>
            <remarks>
            This number will be 1 unless this stage is a child stage in a compound stage, and partitioning occurs inside the compound stage before this stage.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.GetNamedChildStage(System.String)">
            <summary>
            Gets a child stage of this stage.
            </summary>
            <param name="childStageId">The child stage ID.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the child stage, or <see langword="null"/> if no stage with the specified name exists.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.GetSetting``1(System.String,``0)">
            <summary>
            Gets a setting with the specified type and default value.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.TryGetSetting``1(System.String,``0@)">
            <summary>
            Tries to get a setting with the specified type from the stage settings.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting..</param>
            <param name="value">If the function returns <see langword="true"/>, receives the value of the setting.</param>
            <returns><see langword="true"/> if the settings dictionary contained the specified setting; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.GetSetting(System.String,System.String)">
            <summary>
            Gets a string setting with the specified default value.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.AddSetting(System.String,System.Object)">
            <summary>
            Adds a setting.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="value">The value of the setting.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.AddSettings(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Adds the specified settings.
            </summary>
            <param name="settings">The settings. May be <see langword="null"/>.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.Validate(Ookii.Jumbo.Jet.Jobs.JobConfiguration)">
            <summary>
            Checks whether this stage configuration is complete and consistent.
            </summary>
            <param name="job">The job that this stage belongs to.</param>
            <remarks>
            <para>
              This method is intended to be used after constructing the job before it is submitted. It uses information that may not
              be available after deserialization, and requires the various types to be loaded.
            </para>
            </remarks>
            <exception cref="T:System.InvalidOperationException">The stage configuration is invalid.</exception>
            <exception cref="T:System.NotSupportedException">One of the record types used is not supported by <see cref="T:Ookii.Jumbo.IO.ValueWriter`1"/>.</exception>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.TaskRecordReuse">
            <summary>
            The record reuse option used by a task.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.TaskRecordReuse.NotAllowed">
            <summary>
            The task doesn't allow record reuse.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.TaskRecordReuse.Allowed">
            <summary>
            The task allows record reuse.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Jobs.TaskRecordReuse.PassThrough">
            <summary>
            The task allows record reuse only if its output allows record reuse.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo">
            <summary>
            Represents information about a type implementing <see cref="T:Ookii.Jumbo.Jet.ITask`2"/>.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo"/> class.
            </summary>
            <param name="taskType">Type of the task.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo.TaskType">
            <summary>
            Gets the type of the task.
            </summary>
            <value>
            The type of the task.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo.InputRecordType">
            <summary>
            Gets the type of the input records.
            </summary>
            <value>
            The type of the input records.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo.OutputRecordType">
            <summary>
            Gets the type of the output records.
            </summary>
            <value>
            The type of the output records.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo.RecordReuse">
            <summary>
            Gets a value indicating whether the task type allows record reuse.
            </summary>
            <value>
            One of the values of the <see cref="T:Ookii.Jumbo.Jet.Jobs.TaskRecordReuse"/> enumeration.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Jobs.TaskTypeInfo.IsPushTask">
            <summary>
            Gets a value indicating whether this task is a push task.
            </summary>
            <value>
            	<see langword="true"/> if this task is a push task; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JumboSettings">
            <summary>
            Provides constants for the keys of job and stage settings used by components of Jumbo.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JumboSettings.FileChannel">
            <summary>
            Provides constants for the keys of job and stage settings used by the <see cref="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel"/> and <see cref="T:Ookii.Jumbo.Jet.Channels.FileInputChannel"/>.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob">
            <summary>
            Provides constants for the keys of settings used by the <see cref="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel"/> and <see cref="T:Ookii.Jumbo.Jet.Channels.FileInputChannel"/> that can appear in both the job and stage settings.
            </summary>
            <remarks>
            <para>
              These settings are read by the <see cref="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel"/> and <see cref="T:Ookii.Jumbo.Jet.Channels.FileInputChannel"/>. using the <see cref="M:Ookii.Jumbo.Jet.TaskContext.GetSetting(System.String,System.String)"/> method, which first checks the stage settings
              and then the job settings. This means that if one of these settings appears in the stage settings, it overrides the job settings. If it appears in the job
              settings, this overrides the global default.
            </para>
            </remarks>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob.WriteBufferSize">
            <summary>
            The key to use in the stage or job settings to override the default write buffer size specified in <see cref="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.WriteBufferSize"/>.
            Stage settings take precedence over job settings. The setting should have type <see cref="T:Ookii.Jumbo.BinarySize"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob.ChannelOutputType">
            <summary>
            The key to use in the job or stage settings to select between a sorting or non-sorting channel.
            Stage settings take precedence over job settings. The setting should have type <see cref="T:Ookii.Jumbo.Jet.Channels.FileChannelOutputType"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob.SpillBufferSize">
            <summary>
            The key to use in the job or stage settings to override the default spill buffer size specified in <see cref="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.SpillBufferSize"/>.
            Stage settings take precedence over job settings. The setting should have type <see cref="T:Ookii.Jumbo.BinarySize"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob.SpillBufferLimit">
            <summary>
            The key to use in the job or stage settings to override the default spill output buffer limit specified in <see cref="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.SpillBufferLimit"/>.
            Stage settings take precedence over job settings. The setting should have type <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob.SpillSortMinSpillsForCombineDuringMerge">
            <summary>
            The key to use in the job or stage settings to override the minimum number of spills needed for the combiner to be run during the merge specified in 
            <see cref="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.SpillSortMinSpillsForCombineDuringMerge"/>. This value is only used when the output type is <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/>
            and a combiner is specified. Stage settings take precedence over job settings. The setting should have type <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob.MemoryStorageSize">
            <summary>
            The key to use in the job or stage settings to override the global memory storage size setting specified in
            <see cref="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.MemoryStorageSize"/>. Stage settings take
            precedence over job settings. The setting should have type <see cref="T:Ookii.Jumbo.BinarySize"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.StageOrJob.MemoryStorageWaitTimeout">
            <summary>
            The key to use in the job or stage settings to override the global memory storage wait timeout setting specified
            in <see cref="P:Ookii.Jumbo.Jet.FileChannelConfigurationElement.MemoryStorageWaitTimeout"/>. Stage settings take precedence over job
            settings. The setting should have type <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.JumboSettings.FileChannel.Stage">
            <summary>
            Provides constants for the keys of settings used by the <see cref="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel"/> that can appear only in the stage settings.
            </summary>
            <remarks>
            <para>
              These settings are read by the <see cref="T:Ookii.Jumbo.Jet.Channels.FileOutputChannel"/> and <see cref="T:Ookii.Jumbo.Jet.Channels.FileInputChannel"/> using the <see cref="M:Ookii.Jumbo.Jet.Jobs.StageConfiguration.GetSetting(System.String,System.String)"/> method, so if these
              settings appear in the job settings they are ignored.
            </para>
            </remarks>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.Stage.SpillSortComparerType">
            <summary>
            The key to use in the stage settings to specify the type of a <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> or <see cref="T:System.Collections.Generic.IComparer`1"/> to use when the output type is <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/>. It's ignored
            for other output types. The setting should be an assembly-qualified type name of a type implementing <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> or <see cref="T:System.Collections.Generic.IComparer`1"/>. Using a <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> is strongly recommended.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.JumboSettings.FileChannel.Stage.SpillSortCombinerType">
            <summary>
            The key to use in the stage settings to specify the type of a combiner to use when the output type is <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/>. It's ignored
            for other output types. The setting should be an assembly-qualified type name of a type implementing <see cref="T:Ookii.Jumbo.Jet.ITask`2"/>.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.KillTaskJetHeartbeatResponse">
            <summary>
            Response sent by the job server if the task server must kill the specified task.
            </summary>
            <remarks>
            If the job server sends this reponse, it means it isn't interested in any future notifications about this task.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.KillTaskJetHeartbeatResponse.#ctor(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.KillTaskJetHeartbeatResponse"/> class.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskAttemptId">The task attempt ID.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.KillTaskJetHeartbeatResponse.JobId">
            <summary>
            Gets the job ID.
            </summary>
            <value>The job ID.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.KillTaskJetHeartbeatResponse.TaskAttemptId">
            <summary>
            Gets the task attempt ID.
            </summary>
            <value>The task attempt ID.</value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.MergeHelper`1">
            <summary>
            Provides methods to merge multiple segments of sorted input into one sorted output.
            </summary>
            <typeparam name="T">The type of the records in the segments.</typeparam>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeHelper`1.BytesWritten">
            <summary>
            Gets the number of bytes written by the merger.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeHelper`1.BytesRead">
            <summary>
            Gets the number of bytes read by the merger.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeHelper`1.MergePassCount">
            <summary>
            Gets the number of merge passes performed, including the final pass.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeHelper`1.IsUsingRawRecords">
            <summary>
            Gets a value indicating whether the last call to the <see cref="M:Ookii.Jumbo.Jet.MergeHelper`1.Merge(System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Int32,System.Collections.Generic.IComparer{`0},System.Boolean,System.Boolean,System.String,System.String,Ookii.Jumbo.CompressionType,System.Int32,System.Boolean)"/> method
            used raw records.
            </summary>
            <value>
            	<see langword="true"/> if this the last merge operation used raw records; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeHelper`1.Merge(System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Int32,System.Collections.Generic.IComparer{`0},System.Boolean,System.String,Ookii.Jumbo.CompressionType,System.Int32,System.Boolean)">
            <summary>
            Merges the specified inputs.
            </summary>
            <param name="diskInputs">The disk inputs.</param>
            <param name="memoryInputs">The memory inputs.</param>
            <param name="maxDiskInputsPerPass">The maximum number of disk inputs per merge pass.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> to use, or <see langword="null"/> to use the default. Do not pass <see cref="P:System.Collections.Generic.Comparer`1.Default"/>.</param>
            <param name="allowRecordReuse">if set to <see langword="true"/>, the result of the pass will reuse the same instance of <typeparamref name="T"/> for each pass.</param>
            <param name="intermediateOutputPath">The path to store intermediate passes.</param>
            <param name="compressionType">The type of the compression to use for intermediate passes.</param>
            <param name="bufferSize">The buffer size to use when writing output passes.</param>
            <param name="enableChecksum">if set to <see langword="true"/>, checksums will be enabled for intermediate passes.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that can be used to get the merge results.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeHelper`1.Merge(System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Int32,System.Collections.Generic.IComparer{`0},System.Boolean,System.Boolean,System.String,System.String,Ookii.Jumbo.CompressionType,System.Int32,System.Boolean)">
            <summary>
            Merges the specified inputs.
            </summary>
            <param name="diskInputs">The disk inputs.</param>
            <param name="memoryInputs">The memory inputs.</param>
            <param name="maxDiskInputsPerPass">The maximum number of disk inputs per merge pass.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> or <see cref="T:Ookii.Jumbo.IO.IRawComparer`1"/> to use, or <see langword="null"/> to use the default. Do not manually pass <see cref="P:System.Collections.Generic.Comparer`1.Default"/>.</param>
            <param name="allowRecordReuse">if set to <see langword="true"/>, the result of the pass will reuse the same instance of <typeparamref name="T"/> for each pass.</param>
            <param name="forceDeserialization">if set to <see langword="true"/>, don't use raw comparisons for the final pass, but force deserialization.</param>
            <param name="intermediateOutputPath">The path to store intermediate passes.</param>
            <param name="passFilePrefix">The pass file prefix.</param>
            <param name="compressionType">The type of the compression to use for intermediate passes.</param>
            <param name="bufferSize">The buffer size to use when writing output passes.</param>
            <param name="enableChecksum">if set to <see langword="true"/>, checksums will be enabled for intermediate passes.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that can be used to get the merge results.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeHelper`1.WriteMerge(System.IO.Stream,System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Int32,System.Collections.Generic.IComparer{`0},System.Boolean,System.String,System.String,Ookii.Jumbo.CompressionType,System.Int32,System.Boolean)">
            <summary>
            Writes the result of a merge pass to the specified.
            </summary>
            <param name="stream">The stream to which the result of the pass is written.</param>
            <param name="diskInputs">The disk inputs.</param>
            <param name="memoryInputs">The memory inputs.</param>
            <param name="maxDiskInputsPerPass">The maximum number of disk inputs per merge pass.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> to use, or <see langword="null"/> to use the default. Do not pass <see cref="P:System.Collections.Generic.Comparer`1.Default"/>.</param>
            <param name="allowRecordReuse">if set to <see langword="true"/>, the result of the pass will reuse the same instance of <typeparamref name="T"/> for each pass.</param>
            <param name="intermediateOutputPath">The path to store intermediate passes.</param>
            <param name="passFilePrefix">The pass file prefix.</param>
            <param name="compressionType">The type of the compression to use for intermediate passes.</param>
            <param name="bufferSize">The buffer size to use when writing output passes.</param>
            <param name="enableChecksum">if set to <see langword="true"/>, checksums will be enabled for intermediate passes.</param>
            <returns>
            The uncompressed size of the written data.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeHelper`1.WriteMerge(System.String,System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput},System.Int32,System.Collections.Generic.IComparer{`0},System.Boolean,System.String,System.String,Ookii.Jumbo.CompressionType,System.Int32,System.Boolean)">
            <summary>
            Writes the result of a merge pass to the specified.
            </summary>
            <param name="fileName">The file to write the output to.</param>
            <param name="diskInputs">The disk inputs.</param>
            <param name="memoryInputs">The memory inputs.</param>
            <param name="maxDiskInputsPerPass">The maximum number of disk inputs per merge pass.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> to use, or <see langword="null"/> to use the default. Do not pass <see cref="P:System.Collections.Generic.Comparer`1.Default"/>.</param>
            <param name="allowRecordReuse">if set to <see langword="true"/>, the result of the pass will reuse the same instance of <typeparamref name="T"/> for each pass.</param>
            <param name="intermediateOutputPath">The path to store intermediate passes.</param>
            <param name="passFilePrefix">The pass file prefix.</param>
            <param name="compressionType">The type of the compression to use for intermediate passes.</param>
            <param name="bufferSize">The buffer size to use when writing output passes.</param>
            <param name="enableChecksum">if set to <see langword="true"/>, checksums will be enabled for intermediate passes.</param>
            <returns>
            The uncompressed size of the written data.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.MergeRecordReader`1">
            <summary>
            Record reader that merges the records from multiple sorted input record readers.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <remarks>
            <para>
              If <see cref="P:Ookii.Jumbo.Jet.MergeRecordReader`1.Channel"/> is not <see langword="null"/>, the <see cref="T:Ookii.Jumbo.Jet.MergeRecordReader`1"/> will use the <see cref="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.SortTaskComparerSettingKey"/>
              on the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> of the input stage to determine the comparer to use. Otherwise, it will use the 
              <see cref="F:Ookii.Jumbo.Jet.MergeRecordReaderConstants.ComparerSetting"/> of the current stage. If neither is specified, <see cref="P:System.Collections.Generic.Comparer`1.Default"/> will be used.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeRecordReader`1.#ctor(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,System.Boolean,System.Int32,Ookii.Jumbo.CompressionType)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.MergeRecordReader`1"/> class.
            </summary>
            <param name="partitions">The partitions that this multi input record reader will read.</param>
            <param name="totalInputCount">The total number of input readers that this record reader will have.</param>
            <param name="allowRecordReuse"><see langword="true"/> if the record reader may reuse record instances; otherwise, <see langword="false"/>.</param>
            <param name="bufferSize">The buffer size to use to read input files.</param>
            <param name="compressionType">The compression type to us to read input files.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReader`1.Progress">
            <summary>
            Gets the combined progress of the record readers.
            </summary>
            <value>A value between 0 and 1 that indicates the overall progress of the <see cref="T:Ookii.Jumbo.IO.MultiInputRecordReader`1"/>.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReader`1.AdditionalProgress">
            <summary>
            Gets the additional progress value.
            </summary>
            <value>The additional progress value.</value>
            <remarks>
            This property must be thread safe.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReader`1.Channel">
            <summary>
            Gets or sets the input channel that this reader is reading from.
            </summary>
            <value>The channel.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReader`1.DfsConfiguration">
            <summary>
            Gets or sets the configuration used to access the Distributed File System.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReader`1.JetConfiguration">
            <summary>
            Gets or sets the configuration used to access the Jet servers.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReader`1.TaskContext">
            <summary>
            Gets or sets the configuration for the task attempt.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReader`1.BytesRead">
            <summary>
            Gets the bytes read.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeRecordReader`1.AddInput(System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput})">
            <summary>
            Adds the specified input to be read by this record reader.
            </summary>
            <param name="partitions">The partitions for this input, in the same order as the partition list provided to the constructor.</param>
            <remarks>
            <para>
              Which partitions a multi input record reader is responsible for is specified when that reader is created or
              when <see cref="M:Ookii.Jumbo.Jet.MergeRecordReader`1.AssignAdditionalPartitions(System.Collections.Generic.IList{System.Int32})"/> is called. All calls to <see cref="M:Ookii.Jumbo.Jet.MergeRecordReader`1.AddInput(System.Collections.Generic.IList{Ookii.Jumbo.IO.RecordInput})"/> must specify those
              exact same partitions, in the same order.
            </para>
            <para>
              If you override this method, you must call the base class implementation.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeRecordReader`1.AssignAdditionalPartitions(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Assigns additional partitions to this record reader.
            </summary>
            <param name="newPartitions">The new partitions to assign.</param>
            <remarks>
            <para>
              New partitions may only be assigned after all inputs for the existing partitions have been received.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeRecordReader`1.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeRecordReader`1.ReadRecordInternal">
            <summary>
            Reads a record.
            </summary>
            <returns><see langword="true"/> if an object was successfully read from the stream; <see langword="false"/> if the end of the stream or stream fragment was reached.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeRecordReader`1.OnCurrentPartitionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Ookii.Jumbo.IO.MultiInputRecordReader`1.CurrentPartitionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeRecordReader`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement">
            <summary>
            Provides configuration for the <see cref="T:Ookii.Jumbo.Jet.MergeRecordReader`1"/>.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement.MaxFileInputs">
            <summary>
            Gets or sets the maxinum number of file inputs to use in a single merge pass.
            </summary>
            <value>The maximum number of file inputs in a single merge pass. The default value is 100.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement.MemoryStorageTriggerLevel">
            <summary>
            Gets or sets the usage level of the channel's memory storage that will trigger a merge pass.
            </summary>
            <value>The memory storage trigger level, between 0 and 1. The default value is 0.6.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement.MergeStreamReadBufferSize">
            <summary>
            Gets or sets the buffer size to use for each input file.
            </summary>
            <value>The size of the read buffer for each merge stream.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement.PurgeMemoryBeforeFinalPass">
            <summary>
            Gets or sets a value indicating whether all in-memory inputs must be merged and purged to disk before the final pass.
            </summary>
            <value>
            	<see langword="true"/> if all in-memory inputs must be merged and purged to disk before the final pass; otherwise, <see langword="false"/>.
            	The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.MergeRecordReaderConstants">
            <summary>
            Contains constants for use by <see cref="T:Ookii.Jumbo.Jet.MergeRecordReader`1"/>.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.MergeRecordReaderConstants.MaxFileInputsSetting">
            <summary>
            The name of the setting in the job or stage settings that specifies the maximum number
            of files to merge in one pass. This setting must be a <see cref="T:System.Int32"/> that is greater than or equal to 2.
            If this setting is not specified, the value of the <see cref="P:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement.MaxFileInputs"/>
            setting is used.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.MergeRecordReaderConstants.MemoryStorageTriggerLevelSetting">
            <summary>
            The name of the setting in the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> or <see cref="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings"/>
            that specifies the usage level of the channel's memory storage that will trigger a merge pass. This
            setting must be a <see cref="T:System.Single"/> between 0 and 1. If it isn't specified, the value of the <see cref="P:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement.MemoryStorageTriggerLevel"/>
            property will be used.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.MergeRecordReaderConstants.ComparerSetting">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the <see cref="T:System.Collections.Generic.IComparer`1"/>
            to use. If this setting is not specified, <see cref="P:System.Collections.Generic.Comparer`1.Default"/> will be used.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.MergeRecordReaderConstants.PurgeMemorySettingKey">
            <summary>
            The name of the setting in the <see cref="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings"/> or <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/>
            that specifies whether all in-memory inputs must be merged and purged to disk before the final pass. The value
            of this setting must be of type <see cref="T:System.Boolean"/>. The default value is the value of <see cref="P:Ookii.Jumbo.Jet.MergeRecordReaderConfigurationElement.PurgeMemoryBeforeFinalPass"/>.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.MergeResult`1">
            <summary>
            Contains the result of a merge operation.
            </summary>
            <typeparam name="T">The type of the record.</typeparam>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MergeResult`1.Progress">
            <summary>
            Gets the progress of the merge pass.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeResult`1.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.MergeResultRecord`1">
            <summary>
            Represents an output record of a merge operation.
            </summary>
            <typeparam name="T">The type of the record.</typeparam>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeResultRecord`1.GetValue">
            <summary>
            Gets the value of the record.
            </summary>
            <returns>The value of the record.</returns>
            <remarks>
            <para>
              If the record was stored in raw form, it is deserialized first.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MergeResultRecord`1.WriteRawRecord(Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.RawRecord})">
            <summary>
            Writes the raw record to the specified writer.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1">
            <summary>
            Record reader used for pull tasks with the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <remarks>
            <para>
              A pull task with the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute may try to cast its input record reader
              to this type to retrieve information about the number of partitions and the current partition.
            </para>
            <para>
              However, if the input to a pull task with the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute is not
              a channel with multiple partitions per task, the input record reader will not be a <see cref="T:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1"/>
              so you should not assume that such a cast will always succeed.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.#ctor(Ookii.Jumbo.Jet.TaskExecutionUtility,Ookii.Jumbo.IO.MultiInputRecordReader{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1"/> class.
            </summary>
            <param name="taskExecution">The task execution utility for this task. May be <see langword="null"/>.</param>
            <param name="baseReader">The <see cref="T:Ookii.Jumbo.IO.MultiInputRecordReader`1"/> to read from.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.Progress">
            <summary>
            Gets a number between 0 and 1 that indicates the progress of the reader.
            </summary>
            <value>The progress.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.CurrentPartition">
            <summary>
            Gets the partition of the current record.
            </summary>
            <value>The current partition.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.PartitionCount">
            <summary>
            Gets the total number of partitions.
            </summary>
            <value>The total number of partitions.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.AllowAdditionalPartitions">
            <summary>
            Gets or sets a value indicating whether the task may request additional partitions from the job server if it finishes the current ones.
            </summary>
            <value>
            	<see langword="true"/> if getting additional partitions is allowed; otherwise, <see langword="false"/>. The default value is <see langword="true"/>.
            </value>
            <remarks>
            <para>
              A task can set this property to <see langword="false"/> to prevent the task from requesting additional partitions.
            </para>
            <para>
              If this property is <see langword="false"/>, and a call to <see cref="M:Ookii.Jumbo.IO.RecordReader`1.ReadRecord"/> returned <see langword="false"/>, you
              may change this property to <see langword="true"/> and attempt the call to <see cref="M:Ookii.Jumbo.IO.RecordReader`1.ReadRecord"/> again.
            </para>
            <para>
              Note that if this stage doesn't use multiple partitions per task or if dynamic partition assignment was disabled a
              task will never get additional partitions even if this property is <see langword="true"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.StopAtEndOfPartition">
            <summary>
            Gets or sets a value indicating whether reading records will halt at the end of the current partition.
            </summary>
            <value>
            	<see langword="true"/> if reading records will halt at the end of the current partition; otherwise, <see langword="false"/>.
            </value>
            <remarks>
            <para>
              If this property is <see langword="false" />, the <see cref="M:Ookii.Jumbo.IO.RecordReader`1.ReadRecord"/> function will return false when the
              end of the current partition is reached.
            </para>
            <para>
              Like setting <see cref="P:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.AllowAdditionalPartitions"/> to <see langword="false"/>, this will also prevent additional partitions from being fetched.
            </para>
            <para>
              To advance to the next partition, set this property back to <see langword="false"/>, and call <see cref="M:Ookii.Jumbo.IO.RecordReader`1.ReadRecord"/> again.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1.ReadRecordInternal">
            <summary>
            Reads a record.
            </summary>
            <returns><see langword="true"/> if an object was successfully read; <see langword="false"/> if there are no more records.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.PartitionerConstants">
            <summary>
            Provides constants for use with implementations of <see cref="T:Ookii.Jumbo.IO.IPartitioner`1"/>.
            </summary>
            <remarks>
            <para>
              Partitioners for use with Jumbo Jet should allow the user to specify an equality comparer using the stage settings
              using the settings key specified by <see cref="F:Ookii.Jumbo.Jet.PartitionerConstants.EqualityComparerSetting"/>.
            </para>
            </remarks>
        </member>
        <member name="F:Ookii.Jumbo.Jet.PartitionerConstants.EqualityComparerSetting">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>
            to use. If this setting is not specified, <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/> will be used.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.PartitionMerger`1.NeedDiskMergePass">
            <summary>
            NOTE: Only call while _diskInputs is locked!
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.PrepartitionedPushTask`2">
            <summary>
            Base class for tasks that use the push model and can receive records of multiple partitions.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <remarks>
            <para>
              This task type is meant for use with receiving tasks of a pipeline channel with internal partitioning. It prevents the overhead of creating a <see cref="T:Ookii.Jumbo.Jet.TaskExecutionUtility"/>
              and task instance for every partition.
            </para>
            <para>
              If the task needs to know how many partitions there are it should check the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.InternalPartitionCount"/> property
              of the <see cref="P:Ookii.Jumbo.Jet.TaskContext.StageConfiguration"/> property.
            </para>
            <para>
              Although tasks using this interface are free to change the partition a record belongs to, it cannot change the number of partitions.
              All output partition numbers must be between 0 inclusive and <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.InternalPartitionCount"/> exclusive.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PrepartitionedPushTask`2.ProcessRecord(`0,System.Int32,Ookii.Jumbo.Jet.PrepartitionedRecordWriter{`1})">
            <summary>
            Method called for each record in the task's input.
            </summary>
            <param name="record">The record to process.</param>
            <param name="partition">The partition of the record.</param>
            <param name="output">The <see cref="T:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PrepartitionedPushTask`2.Finish(Ookii.Jumbo.Jet.PrepartitionedRecordWriter{`1})">
            <summary>
            Method called after the last record was processed.
            </summary>
            <param name="output">The <see cref="T:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1"/> to which the task's output should be written.</param>
            <remarks>
            This enables the task to finish up its processing and write any further records it may have collected during processing.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PrepartitionedPushTask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the task's input can be read.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
            <remarks>
            <para>
              While it is possible to override this method, it is not guaranteed to be called in all scenarios (e.g. if this
              task is receiving data from a pipeline channel). The task must function correctly even if the <see cref="M:Ookii.Jumbo.Jet.PrepartitionedPushTask`2.ProcessRecord(`0,System.Int32,Ookii.Jumbo.Jet.PrepartitionedRecordWriter{`1})"/>
              and <see cref="M:Ookii.Jumbo.Jet.PrepartitionedPushTask`2.Finish(Ookii.Jumbo.Jet.PrepartitionedRecordWriter{`1})"/> are called directly.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1">
            <summary>
            A record writer for records that have already been partitioned.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1.WriteRecord(`0,System.Int32)">
            <summary>
            Writes a record.
            </summary>
            <param name="record">The record.</param>
            <param name="partition">The partition of the record.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1.RecordsWritten">
            <summary>
            Gets the total number of records written by this record writer.
            </summary>
            <value></value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1.OutputBytes">
            <summary>
            Gets the number of bytes written to the stream.
            </summary>
            <value></value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1.BytesWritten">
            <summary>
            Gets the number of bytes written to the stream after compression, or 0 if the stream was not compressed.
            </summary>
            <value></value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1.WriteTime">
            <summary>
            Gets the time spent writing.
            </summary>
            <value>
            The time spent writing.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1.FinishWriting">
            <summary>
            Informs the record writer that no further records will be written.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute">
            <summary>
            Attribute for task classes that indicates that all input partitions should be processed by the same task instance.
            </summary>
            <remarks>
            <para>
              The only time a task can have multiple input partitions is if its input is a file channel and <see cref="P:Ookii.Jumbo.Jet.Channels.ChannelConfiguration.PartitionsPerTask"/>
              is larger than 1. This attribute has no effect on child tasks of a compound task with internal partitioning.
            </para>
            <para>
              If the task that this attribute is applied to is a pull task, it can determine what partition is being processed
              and how many partitions there are by casting the input record reader to a <see cref="T:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1"/>.
            </para>
            <para>
              However, if the input to a pull task with the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute is not
              a channel with multiple partitions per task, the input record reader will not be a <see cref="T:Ookii.Jumbo.Jet.MultiPartitionRecordReader`1"/>
              so you should not assume that such a cast will always succeed.
            </para>
            <para>
              The input partition affinity of the output of a task with the <see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute
              is lost. If the output is a child task, it cannot determine what the current input partition is, and if the output
              is written to the DFS, it will be a single file (rather than a file for each partition, which is the default).
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.PushTask`2">
            <summary>
            Base class for tasks that use the push model.
            </summary>
            <typeparam name="TInput">The input type of the task.</typeparam>
            <typeparam name="TOutput">The output type of the task.</typeparam>
            <remarks>
            <para>
              When a task inheriting from <see cref="T:Ookii.Jumbo.Jet.PushTask`2"/> is used for the receiving stage of a
              pipeline channel, the <see cref="M:Ookii.Jumbo.Jet.PushTask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})"/> method will not be called.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PushTask`2.ProcessRecord(`0,Ookii.Jumbo.IO.RecordWriter{`1})">
            <summary>
            Method called for each record in the task's input.
            </summary>
            <param name="record">The record to process.</param>
            <param name="output">The <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PushTask`2.Finish(Ookii.Jumbo.IO.RecordWriter{`1})">
            <summary>
            Method called after the last record was processed.
            </summary>
            <param name="output">The <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
            <remarks>
            This enables the task to finish up its processing and write any further records it may have collected during processing.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.PushTask`2.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`1})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the task's input can be read.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
            <remarks>
            <para>
              While it is possible to override this method, it is not guaranteed to be called in all scenarios (e.g. if this
              task is receiving data from a pipeline channel). The task must function correctly even if the <see cref="M:Ookii.Jumbo.Jet.PushTask`2.ProcessRecord(`0,Ookii.Jumbo.IO.RecordWriter{`1})"/>
              and <see cref="M:Ookii.Jumbo.Jet.PushTask`2.Finish(Ookii.Jumbo.IO.RecordWriter{`1})"/> are called directly.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.RunTaskJetHeartbeatResponse">
            <summary>
            Heartbeat response used when the job server has a task that the task server should execute.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.RunTaskJetHeartbeatResponse.#ctor(Ookii.Jumbo.Jet.Job,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.RunTaskJetHeartbeatResponse"/> class.
            </summary>
            <param name="job">The job containing the task to run.</param>
            <param name="taskAttemptId">The ID of the task to run.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.RunTaskJetHeartbeatResponse.Job">
            <summary>
            Gets the job containing the task to run.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.RunTaskJetHeartbeatResponse.TaskAttemptId">
            <summary>
            Gets the ID of the task attempt the server should run.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.SchedulingMode">
            <summary>
            Indicates how the scheduler should assign tasks to servers.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.SchedulingMode.Default">
            <summary>
            The scheduler will use the job server's default scheduling mode.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.SchedulingMode.MoreServers">
            <summary>
            The scheduler will attempt to spread the workload over as many servers as possible.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.SchedulingMode.FewerServers">
            <summary>
            The scheduler will attempt to use as few servers as possible
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.SchedulingMode.OptimalLocality">
            <summary>
            The scheduler will attempt to minimize the number of non-local tasks. This value is not valid for tasks that do not read data input.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Scheduling.DefaultScheduler">
            <summary>
            The default Jumbo Jet task scheduler.
            </summary>
            <remarks>
            This scheduler schedules jobs in FIFO order, and schedules stages in dependency order.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Scheduling.DefaultScheduler.ScheduleTasks(System.Collections.Generic.IEnumerable{Ookii.Jumbo.Jet.Scheduling.IJobInfo},System.Threading.CancellationToken)">
            <summary>
            Performs a scheduling pass.
            </summary>
            <param name="jobs">The current active jobs.</param>
            <param name="token">The cancellation token to observe.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Scheduling.IJobInfo">
            <summary>
            Provides information about a job to a scheduler.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.JobId">
            <summary>
            The the ID of the job.
            </summary>
            <value>
            The job ID.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.JobName">
            <summary>
            Gets the display name of the job.
            </summary>
            <value>
            The display name of the job.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.Configuration">
            <summary>
            Gets the configuration of the job.
            </summary>
            <value>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.JobConfiguration"/> for the job.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.UnscheduledTaskCount">
            <summary>
            Gets the number of unscheduled tasks.
            </summary>
            <value>
            The number of unscheduled tasks.
            </value>
            <remarks>
              Unscheduled tasks are all tasks that are not currently assigned to a task server. This may include tasks that need to be re-executed due to a failure.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.FinishedTaskCount">
            <summary>
            Gets the number of tasks that have successfully finished.
            </summary>
            <value>
            The number of tasks that have successfully finished.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.ErrorCount">
            <summary>
            Gets the number of task attempts that encountered an error.
            </summary>
            <value>
            The number of task attempts that encountered an error.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.Stages">
            <summary>
            Gets the stages of this job, in the order in which they should be scheduled.
            </summary>
            <value>
            A list of the job's stages.
            </value>
            <remarks>
            This list is ordered using the stage order returned by <see cref="M:Ookii.Jumbo.Jet.Jobs.JobConfiguration.GetDependencyOrderedStages"/>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IJobInfo.TaskServers">
            <summary>
            Gets job-specific information about the task servers.
            </summary>
            <value>
            A list of the task servers.
            </value>
            <remarks>
            <para>
              This list contains all task servers known to the job server when this scheduling pass started. These objects contain job-specific information
              related to each server, so should only be used when scheduling tasks for this job.
            </para>
            </remarks>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Scheduling.IStageInfo">
            <summary>
            Provides information about a stage to a scheduler.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IStageInfo.StageId">
            <summary>
            Gets the stage ID.
            </summary>
            <value>
            The stage ID.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IStageInfo.Configuration">
            <summary>
            Gets the stage configuration.
            </summary>
            <value>
            The <see cref="T:Ookii.Jumbo.Jet.Jobs.StageConfiguration"/> for the stage.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IStageInfo.Tasks">
            <summary>
            Gets the tasks in this stage.
            </summary>
            <value>
            A list of the tasks.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IStageInfo.UnscheduledTaskCount">
            <summary>
            Gets the number of unscheduled tasks in this stage.
            </summary>
            <value>
            The number of unscheduled tasks in this stage.
            </value>
            <remarks>
              Unscheduled tasks are all tasks that are not currently assigned to a task server. This may include tasks that need to be re-executed due to a failure.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.IStageInfo.IsReadyForScheduling">
            <summary>
            Gets a value indicating whether this stage is ready to be scheduled.
            </summary>
            <value>
            <see langword="true" /> if all the scheduling dependencies for this stage are met; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Scheduling.ITaskInfo">
            <summary>
            Provides information about a task to a scheduler.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.ITaskInfo.TaskId">
            <summary>
            Gets the task ID.
            </summary>
            <value>
            The task ID.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.ITaskInfo.FullTaskId">
            <summary>
            Gets the task ID as a <see cref="T:System.String"/>, including the job ID.
            </summary>
            <value>
            The full task id.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.ITaskInfo.IsAssignedToServer">
            <summary>
            Gets a value indicating whether this task is assigned to a server.
            </summary>
            <value>
            <see langword="true" /> if this task is assigned to a server; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Scheduling.ITaskInfo.IsBadServer(Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo)">
            <summary>
            Determines whether the specified server has experienced a failure on this task before.
            </summary>
            <param name="server">The server.</param>
            <returns>
              <see langword="true" /> if the specified server previously failed to execute this task; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Scheduling.ITaskScheduler">
            <summary>
            Interface for Jumbo Jet task schedulers.
            </summary>
            <remarks>
            <para>
              Implement this interface if you want to customize the scheduling behavior of Jumbo Jet. Use the <see cref="P:Ookii.Jumbo.Jet.JobServerConfigurationElement.Scheduler"/>
              configuration property to specify which scheduler to use.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Scheduling.ITaskScheduler.ScheduleTasks(System.Collections.Generic.IEnumerable{Ookii.Jumbo.Jet.Scheduling.IJobInfo},System.Threading.CancellationToken)">
            <summary>
            Performs a scheduling pass.
            </summary>
            <param name="jobs">The current active jobs.</param>
            <param name="token">The cancellation token to observe.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo">
            <summary>
            Provides a job-specific view for a task server to a scheduler.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo.Address">
            <summary>
            Gets the address of the task server..
            </summary>
            <value>
            The <see cref="T:Ookii.Jumbo.ServerAddress"/> for the task server.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo.IsActive">
            <summary>
            Gets a value indicating whether this task server has reported status recently.
            </summary>
            <value>
            <see langword="true" /> if this task server has recently reported status to the job server; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo.AvailableTaskSlots">
            <summary>
            Gets the number of available task slots.
            </summary>
            <value>
            The number of available task slots.
            </value>
            <remarks>
            The number of available slots is the total number of slots minus the number of tasks currently assigned to this server.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo.GetLocalTaskCount(Ookii.Jumbo.Jet.Scheduling.IStageInfo)">
            <summary>
            Gets the number of tasks in the specified stage whose input data is local on this server.
            </summary>
            <param name="stage">The stage.</param>
            <returns>The number of tasks in the specified stage whose input data is local on this server.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo.FindDataInputTaskToSchedule(Ookii.Jumbo.Jet.Scheduling.IStageInfo,System.Int32)">
            <summary>
            Finds the a task using data input to schedule on this server.
            </summary>
            <param name="stage">The stage containing the tasks to schedule.</param>
            <param name="distance">The distance of the input data: 0 for local data, 1 for rack-local data, and 2 for non-local data.</param>
            <returns>The <see cref="T:Ookii.Jumbo.Jet.Scheduling.ITaskInfo"/> for the task to schedule, or <see langword="null" /> if there is no task
            that can be scheduled.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Scheduling.ITaskServerJobInfo.AssignTask(Ookii.Jumbo.Jet.Scheduling.ITaskInfo,System.Nullable{System.Int32})">
            <summary>
            Assigns the specified task to this server.
            </summary>
            <param name="task">The task.</param>
            <param name="dataDistance">The distance of the input data, if this task is a task with data input.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.ServerShutdownException">
            <summary>
            Represents an error with the distributed file system.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ServerShutdownException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> class. 
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ServerShutdownException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ServerShutdownException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> class with a specified error message and a reference to the inner <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> that is the cause of this <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/>. 
            </summary>
            <param name="message">The error message that explains the reason for the <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/>.</param>
            <param name="inner">The <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> that is the cause of the current <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/>, or a null reference (Nothing in Visual Basic) if no inner <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> is specified.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.ServerShutdownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> class with serialized data. 
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the <see cref="T:Ookii.Jumbo.Jet.ServerShutdownException"/> being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.StageStatus">
            <summary>
            Provides status information about a particular stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.StageId">
            <summary>
            Gets or sets the ID of the stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.Tasks">
            <summary>
            Gets the tasks of this stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.StartTime">
            <summary>
            Gets the start time of this stage, or <see langword="null"/> if the stage hasn't started.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.IsFinished">
            <summary>
            Gets a value that indicates whether all tasks in this stage have finished.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.EndTime">
            <summary>
            Gets the end time of this stage, or <see langword="null"/> if the stage hasn't finished.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.Progress">
            <summary>
            Gets the total progress of this stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.StageProgress">
            <summary>
            Gets the total progress of this stage, including additional progress values.
            </summary>
            <value>The stage progress.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.Metrics">
            <summary>
            Gets the combined metrics for all the tasks in the stage.
            </summary>
            <value>The metrics.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.RunningTaskCount">
            <summary>
            Gets the number of running tasks in this stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.PendingTaskCount">
            <summary>
            Gets the number of pending tasks in this stage.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.StageStatus.FinishedTaskCount">
            <summary>
            Gets the number of finished tasks in this stage.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskAttemptId">
            <summary>
            The identifier of a task attempt.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskAttemptId.TaskAttemptNumberSeparator">
            <summary>
            The separator characer used to identify the task attempt number in a task attempt identifier.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.#ctor(Ookii.Jumbo.Jet.TaskId,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskAttemptId"/> class.
            </summary>
            <param name="taskId">The task ID.</param>
            <param name="attempt">The attempt number.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskAttemptId.TaskId">
            <summary>
            Gets the task ID.
            </summary>
            <value>The task ID.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskAttemptId.Attempt">
            <summary>
            Gets the attempt number
            </summary>
            <value>The attempt number.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <see langword="false"/>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.Equals(Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Compares this <see cref="P:Ookii.Jumbo.Jet.TaskAttemptId.TaskId"/> with another <see cref="P:Ookii.Jumbo.Jet.TaskAttemptId.TaskId"/>.
            </summary>
            <param name="other">The <see cref="P:Ookii.Jumbo.Jet.TaskAttemptId.TaskId"/> to compare to.</param>
            <returns><see langword="true"/> if this <see cref="P:Ookii.Jumbo.Jet.TaskAttemptId.TaskId"/> is equal to <paramref name="other"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.CompareTo(Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position
            in the sort order as the other object.
            </summary>
            <param name="other">A <see cref="P:Ookii.Jumbo.Jet.TaskAttemptId.TaskId"/> to compare with this instance.</param>
            <returns>
            Less than zero if this instance is smaller than <paramref name="other"/>; zero if this instance is equal to <paramref name="other"/>; greater than zero if this instance is larger than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position
            in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            Less than zero if this instance is smaller than <paramref name="obj"/>; zero if this instance is equal to <paramref name="obj"/>; greater than zero if this instance is larger than <paramref name="obj"/>.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.op_Equality(Ookii.Jumbo.Jet.TaskAttemptId,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Determines whether two specified instances have the same value.
            </summary>
            <param name="left">The first instance to compare, or <see langword="null"/>.</param>
            <param name="right">The second instance to compare, or <see langword="null"/>.</param>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskAttemptId.op_Inequality(Ookii.Jumbo.Jet.TaskAttemptId,Ookii.Jumbo.Jet.TaskAttemptId)">
            <summary>
            Determines whether two specified instances have different values.
            </summary>
            <param name="left">The first instance to compare, or <see langword="null"/>.</param>
            <param name="right">The second instance to compare, or <see langword="null"/>.</param>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is different from the value of <paramref name="right"/>; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskAttemptStatus">
            <summary>
            The current status of a task attempt.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskAttemptStatus.NotStarted">
            <summary>
            The task has not yet been started.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskAttemptStatus.Running">
            <summary>
            The task is running.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskAttemptStatus.Completed">
            <summary>
            The task has completed successfully.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskAttemptStatus.Error">
            <summary>
            Task execution encountered an error.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskContext">
            <summary>
            Provides context for a specific task attempt.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskContext.#ctor(System.Guid,Ookii.Jumbo.Jet.Jobs.JobConfiguration,Ookii.Jumbo.Jet.TaskAttemptId,Ookii.Jumbo.Jet.Jobs.StageConfiguration,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskContext"/> class.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="jobConfiguration">The configuration for the job.</param>
            <param name="taskAttemptId">The task attempt ID.</param>
            <param name="stageConfiguration">The configuration for the stage that the task belongs to.</param>
            <param name="localJobDirectory">The local directory where files related to the job are stored.</param>
            <param name="dfsJobDirectory">The DFS directory where files related to the job are stored.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.JobId">
            <summary>
            Gets the job ID.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.TaskId">
            <summary>
            Gets the task ID.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.JobConfiguration">
            <summary>
            Gets the configuration for the job.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.StageConfiguration">
            <summary>
            Gets the configuration for the stage that the task belong to.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.LocalJobDirectory">
            <summary>
            Gets the local directory where files related to the job are stored.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.DfsJobDirectory">
            <summary>
            Gets the directory on the DFS where files related to the job are stored.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.Attempt">
            <summary>
            Gets the attempt number of this task attempt.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.TaskInput">
            <summary>
            Gets the task input for this task.
            </summary>
            <value>
            The task input, or <see langword="null"/> if this task doesn't have a task input.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.StatusMessage">
            <summary>
            Gets or sets the status message for the current task attempt.
            </summary>
            <remarks>
            Set this status message from task classes. This status message will be sent to the task server as part of a progress update.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskContext.TaskAttemptId">
            <summary>
            Gets the task attempt ID for this task attempt.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskContext.ReportProgress">
            <summary>
            Forces a progress report to be sent on the next progress interval.
            </summary>
            <remarks>
            <para>
              Call this method periodically if your task is executing a long-running operation that doesn't cause the task's progress to be changed (no input data is read).
              This will ensure the job server doesn't think the task is hung.
            </para>
            <para>
              Calling this method while your task is stuck in an infinite loop will cause the job to hang indefinitely.
            </para>
            <para>
              If it's possible for your task to calculate progress for the long-running operation, consider implementing <see cref="T:Ookii.Jumbo.Jet.IHasAdditionalProgress"/>
              instead of calling this method.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskContext.DownloadDfsFile(System.String)">
            <summary>
            Requests the task server to download a file from the DFS to make it available to all tasks.
            </summary>
            <param name="dfsPath">The path of the file to download.</param>
            <returns>The local path where the file was downloaded to.</returns>
            <remarks>
            <para>
              You can use this method to download additional files from the DFS that need to be available to more than one task of a job
              but weren't included in the job data when the job was created.
            </para>
            <para>
              The task server will download the file only once; subsequent calls to this method (for the same job) will return the local
              path of the previously downloaded file. This prevents the need for all tasks to download the same data from the DFS.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskContext.GetSetting(System.String,System.String)">
            <summary>
            Gets a setting's string value with the specified default value, checking first in the stage settings and then in the job settings.
            </summary>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in either the stage or job settings.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskContext.GetSetting``1(System.String,``0)">
            <summary>
            Gets a setting with the specified type and default value, checking first in the stage settings and then in the job settings.
            </summary>
            <typeparam name="T">The type of the setting.</typeparam>
            <param name="key">The name of the setting.</param>
            <param name="defaultValue">The value to use if the setting is not present in the <see cref="T:Ookii.Jumbo.Jet.Jobs.SettingsDictionary"/>.</param>
            <returns>The value of the setting, or <paramref name="defaultValue"/> if the setting was not present in either the stage or job settings.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskExecutionUtility">
            <summary>
            Encapsulates all the data and functionality needed to run a task and its pipelined tasks.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskExecutionUtility.OutputWriter">
            <summary>
            Gets the output writer.
            </summary>
            <value>The output writer.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskExecutionUtility.TotalInputPartitions">
            <summary>
            Gets or sets the total number of input partitions this task will process (if the input is a channel and the PartitionsPerTask option was > 1).
            </summary>
            <value>The total number of partitions.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskExecutionUtility.InputPartitionsFinished">
            <summary>
            Gets or sets the number of input partitions that have finished.
            </summary>
            <value>The number of input partitions that have finished.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskExecutionUtility.ProcessesAllInputPartitions">
            <summary>
            Gets a value indicating whether a single task instance will process all input partitions.
            </summary>
            <value>
            	<see langword="true"/> if the task type of this task or any ancestor in the compound task has the 
            	<see cref="T:Ookii.Jumbo.Jet.ProcessAllInputPartitionsAttribute"/> attribute; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.RunTask(System.Guid,System.String,System.String,Ookii.Jumbo.Jet.TaskAttemptId,System.Boolean)">
            <summary>
            Executes a task on behalf of the task host. For Jumbo internal use only.
            </summary>
            <param name="jobId">The job id.</param>
            <param name="jobDirectory">The job directory.</param>
            <param name="dfsJobDirectory">The DFS job directory.</param>
            <param name="taskAttemptId">The task attempt id.</param>
            <param name="noLogConfig"><see langword="true" /> to initialize logging configuration; otherwise, <see langword="false" />.</param>
            <remarks>
            <para>
              This method assumes that the current AppDomain is used only for running the task, as it will override the global logging configuration and register the custom assembly resolver.
            </para>
            <para>
              This method should only be invoked by the TaskHost, and by the TaskServer when using AppDomain mode.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.Create(Ookii.Jumbo.Dfs.FileSystem.FileSystemClient,Ookii.Jumbo.Jet.JetClient,Ookii.Jumbo.Jet.ITaskServerUmbilicalProtocol,System.Guid,Ookii.Jumbo.Jet.Jobs.JobConfiguration,Ookii.Jumbo.Jet.TaskAttemptId,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.Jet.TaskExecutionUtility"/> instance for the specified task.
            </summary>
            <param name="fileSystemClient">The DFS client.</param>
            <param name="jetClient">The jet client.</param>
            <param name="umbilical">The umbilical.</param>
            <param name="jobId">The job id.</param>
            <param name="jobConfiguration">The job configuration.</param>
            <param name="taskAttemptId">The task attempt ID.</param>
            <param name="dfsJobDirectory">The DFS job directory.</param>
            <param name="localJobDirectory">The local job directory.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.TaskExecutionUtility"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.RunTask">
            <summary>
            Runs the task.
            </summary>
            <returns>
            The metrics for the task.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.ResetForNextPartition">
            <summary>
            Resets the task for the next partition.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.CreatePipelineRecordWriter(System.Object)">
            <summary>
            Creates the record writer that writes data to this child task.
            </summary>
            <param name="partitioner">The partitioner to use for the <see cref="T:Ookii.Jumbo.Jet.PrepartitionedRecordWriter`1"/> if the child stage uses the <see cref="T:Ookii.Jumbo.Jet.PrepartitionedPushTask`2"/> interface. Otherwise, ignored.</param>
            <returns>A record writer.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.WarnIfNoRecordReuse">
            <summary>
            Writes a warning to the log if the task doesn't support record reuse.
            </summary>
            <remarks>
            <para>
              Information about record reuse for each task in a compound is added to the log so that developers debugging tasks and record readers
              are aware of whether or not record reuse was allowed. This can help spot situations where a task or record reader was created
              with the wrong assumptions. Particularly note that if a child stage reports it does not support record reuse, it means that
              the parent task may not use output record reuse.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.CreateOutputRecordWriter">
            <summary>
            Creates the output record writer.
            </summary>
            <returns>The output record writer</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.FinishTask">
            <summary>
            Runs the appropriate finish method (if any) on this task and all child tasks.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.FinalizeTask(Ookii.Jumbo.Jet.TaskMetrics)">
            <summary>
            Calculates metrics, closes the output stream and moves any DFS output to its final location, for this task and all associated tasks.
            </summary>
            <param name="metrics">The <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> that will be updated with the metrics for this task.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.RunTaskFinishMethod">
            <summary>
            Runs the task finish method if this task is a push task.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.CheckDisposed">
            <summary>
            Throws an exception if this object was disposed.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by this <see cref="T:Ookii.Jumbo.Jet.TaskExecutionUtility"/>.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskExecutionUtility.StartProgressThread">
            <summary>
            Starts the progress thread.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskId">
            <summary>
            Represents a task identifier.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskId.ChildStageSeparator">
            <summary>
            The separator character used to identify child stages in a compound stage identifier, e.g. "Parent.Child".
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskId.TaskNumberSeparator">
            <summary>
            The separator character used to identify the task number in a task identifier, e.g. "StageId-204".
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskId"/> class with the specified task ID.
            </summary>
            <param name="taskId">The string representation of the task ID. This can be a compound task ID.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.#ctor(Ookii.Jumbo.Jet.TaskId,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskId"/> class with the specified parent task and task ID.
            </summary>
            <param name="parentTaskId">The ID of the the parent task; may be <see langword="null"/>.</param>
            <param name="taskId">The string representation of the task ID. This can be a compound task ID
            only if <paramref name="parentTaskId"/> is <see langword="null"/>.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.#ctor(Ookii.Jumbo.Jet.TaskId,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskId"/> class with the specified parent task, stage ID and task number.
            </summary>
            <param name="parentTaskId">The ID of the the parent task; may be <see langword="null"/>.</param>
            <param name="stageId">The ID of the stage that this task belongs to.</param>
            <param name="taskNumber">The task number.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskId"/> class with the specified stage ID and task number.
            </summary>
            <param name="stageId">The ID of the stage that this task belongs to.</param>
            <param name="taskNumber">The task number.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskId.ParentTaskId">
            <summary>
            Gets the ID of the parent task as a string.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskId.StageId">
            <summary>
            Gets the ID of the stage that this task belongs to.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskId.TaskNumber">
            <summary>
            Gets the task number of this task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskId.CompoundStageId">
            <summary>
            Gets the compound stage ID of this task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskId.PartitionNumber">
            <summary>
            Gets the partition number of the task.
            </summary>
            <remarks>
            For non-child stages, this number is always 1. For child stages, this will find the location in the chain of parent stages
            in the compound where partitioning was done and return the task number of that task.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.ToString">
            <summary>
            Gets a string representation of the <see cref="T:Ookii.Jumbo.Jet.TaskId"/>.
            </summary>
            <returns>A string representation of the <see cref="T:Ookii.Jumbo.Jet.TaskId"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.CreateTaskIdString(System.String,System.Int32)">
            <summary>
            Creates a task ID string from the specified stage ID and task number.
            </summary>
            <param name="stageId">The stage ID.</param>
            <param name="taskNumber">The task number.</param>
            <returns>A task ID string.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.Equals(Ookii.Jumbo.Jet.TaskId)">
            <summary>
            Compares this <see cref="T:Ookii.Jumbo.Jet.TaskId"/> with another <see cref="T:Ookii.Jumbo.Jet.TaskId"/>.
            </summary>
            <param name="other">The <see cref="T:Ookii.Jumbo.Jet.TaskId"/> to compare to.</param>
            <returns><see langword="true"/> if this <see cref="T:Ookii.Jumbo.Jet.TaskId"/> is equal to <paramref name="other"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.CompareTo(Ookii.Jumbo.Jet.TaskId)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position
            in the sort order as the other object.
            </summary>
            <param name="other">A <see cref="T:Ookii.Jumbo.Jet.TaskId"/> to compare with this instance.</param>
            <returns>
            Less than zero if this instance is smaller than <paramref name="other"/>; zero if this instance is equal to <paramref name="other"/>; greater than zero if this instance is larger than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position
            in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            Less than zero if this instance is smaller than <paramref name="obj"/>; zero if this instance is equal to <paramref name="obj"/>; greater than zero if this instance is larger than <paramref name="obj"/>.
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.op_Equality(Ookii.Jumbo.Jet.TaskId,Ookii.Jumbo.Jet.TaskId)">
            <summary>
            Determines whether two specified instances have the same value.
            </summary>
            <param name="left">The first instance to compare, or <see langword="null"/>.</param>
            <param name="right">The second instance to compare, or <see langword="null"/>.</param>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is the same as the value of <paramref name="right"/>; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskId.op_Inequality(Ookii.Jumbo.Jet.TaskId,Ookii.Jumbo.Jet.TaskId)">
            <summary>
            Determines whether two specified instances have different values.
            </summary>
            <param name="left">The first instance to compare, or <see langword="null"/>.</param>
            <param name="right">The second instance to compare, or <see langword="null"/>.</param>
            <returns>
            <see langword="true"/> if the value of <paramref name="left"/> is different from the value of <paramref name="right"/>; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskMetrics">
            <summary>
            Provides information about the read and write operations done by a task.
            </summary>
            <remarks>
            <para>
              The <see cref="P:Ookii.Jumbo.Jet.TaskMetrics.InputRecords"/>, <see cref="P:Ookii.Jumbo.Jet.TaskMetrics.InputBytes"/>, <see cref="P:Ookii.Jumbo.Jet.TaskMetrics.OutputRecords"/> and <see cref="P:Ookii.Jumbo.Jet.TaskMetrics.OutputBytes"/>
              properties provide information about the amount of data processed and generated by this task. They do not take
              compression or the source or destination of the data into account.
            </para>
            <para>
              The remaining properties provide information about the amount of I/O activity performed by the task. For
              instance <see cref="P:Ookii.Jumbo.Jet.TaskMetrics.LocalBytesRead"/> tells you how much data was read from the local disk. This can include
              data that was first written to the disk by a channel or record reader and then read again. Because of this
              and things like compression, this number doesn't need to match <see cref="P:Ookii.Jumbo.Jet.TaskMetrics.InputBytes"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.DfsBytesRead">
            <summary>
            Gets or sets the number of bytes read from the Distributed File System.
            </summary>
            <value>The number of DFS bytes read.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.DfsBytesWritten">
            <summary>
            Gets or sets the number of bytes written to the Distributed File System.
            </summary>
            <value>The number of DFS bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.LocalBytesRead">
            <summary>
            Gets or sets the number of bytes read from the local disk.
            </summary>
            <value>The number of local bytes read.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.LocalBytesWritten">
            <summary>
            Gets or sets the number of bytes written to the local disk.
            </summary>
            <value>The number of local bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.NetworkBytesRead">
            <summary>
            Gets or sets the number of bytes read over the network by the file and TCP channels.
            </summary>
            <value>The number of network bytes read.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.NetworkBytesWritten">
            <summary>
            Gets or sets the number of bytes written over the network by the TCP channel.
            </summary>
            <value>The number of network bytes written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.InputBytes">
            <summary>
            Gets or sets the number of bytes that this task had as input.
            </summary>
            <value>The number of input bytes.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.InputRecords">
            <summary>
            Gets or sets the number of records read.
            </summary>
            <value>The number of input records.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.OutputBytes">
            <summary>
            Gets or sets the number of bytes that this task had as output.
            </summary>
            <value>The number of output bytes.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.OutputRecords">
            <summary>
            Gets or sets the number of records written.
            </summary>
            <value>The number of records written.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.DynamicallyAssignedPartitions">
            <summary>
            Gets or sets the number of partitions that the task received through dynamic partition assignment.
            </summary>
            <value>The number of dynamically assigned partitions.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskMetrics.DiscardedPartitions">
            <summary>
            Gets or sets the number of partitions that were discarded because the had been reassigned to another task.
            </summary>
            <value>The number of discarded partitions.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskMetrics.Add(Ookii.Jumbo.Jet.TaskMetrics)">
            <summary>
            Adds the value of the specified <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> instance to this instance.
            </summary>
            <param name="other">A <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> instance.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskMetrics.ToString">
            <summary>
            Returns a string representation of the <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> object.
            </summary>
            <returns>A string representation of the <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> object.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskMetrics.LogMetrics">
            <summary>
            Writes the metrics to the log.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskMetrics.ToXml">
            <summary>
            Returns the value of this <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> object as an <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <returns>The value of this <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> object as an <see cref="T:System.Xml.Linq.XElement"/>.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskMetrics.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> instance from an XML element.
            </summary>
            <param name="element">The element. May be <see langword="null"/>.</param>
            <returns>A <see cref="T:Ookii.Jumbo.Jet.TaskMetrics"/> object created from the XML element, or <see langword="null"/> if <paramref name="element"/> was <see langword="null"/>.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskProgress">
            <summary>
            Represents the progress of a task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskProgress.Progress">
            <summary>
            Gets or sets the base progress value. This is the progress of the input reader.
            </summary>
            <value>The progress value.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskProgress.StatusMessage">
            <summary>
            Gets or sets a status message for the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskProgress.OverallProgress">
            <summary>
            Gets the overall progress, which is the average of all the other progress values.
            </summary>
            <value>The overall progress.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskProgress.AdditionalProgressValues">
            <summary>
            Gets the additional progress values.
            </summary>
            <value>The additional progress values.</value>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskProgress.AddAdditionalProgressValue(System.String,System.Single)">
            <summary>
            Adds an additional progress value.
            </summary>
            <param name="typeName">Name of the type that is the source of the value.</param>
            <param name="value">The progress value.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskProgress.SetFinished">
            <summary>
            Sets all progress values to 100%.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskProgress.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskServerConfigurationElement">
            <summary>
            Provides configuration information for the task server.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskServerConfigurationElement.TaskTimeoutJobSettingKey">
            <summary>
            The key of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings"/> used to override the default <see cref="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.TaskTimeout"/>.
            The setting should be an <see cref="T:System.Int32"/> indicating the timeout in milliseconds.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.TaskDirectory">
            <summary>
            Gets or sets the local directory for task files.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.Port">
            <summary>
            Gets or sets the port number on which the task server's RPC server listens.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.ListenIPv4AndIPv6">
            <summary>
            Gets or sets a value that indicates whether the server should listen on both IPv6 and IPv4.
            </summary>
            <value>
            <see langword="true"/> if the server should listen on both IPv6 and IPv4; <see langword="false"/>
            if the server should listen only on IPv6 if it's available, and otherwise on IPv4.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.TaskSlots">
            <summary>
            Gets or sets the maximum number of tasks to schedule on this server.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.FileServerPort">
            <summary>
            The port number that the TCP server for file channels listens on.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.FileServerMaxConnections">
            <summary>
            Gets or sets the maximum number of simultaneous connections allowed to the file channel channel TCP server.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.FileServerMaxIndexCacheSize">
            <summary>
            Gets or sets the maximum number of partition file index entries to keep in the index cache.
            </summary>
            <value>The file server max index cache size.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.ProcessCreationDelay">
            <summary>
            Gets or sets the number of milliseconds to wait between creating TaskHost processes.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.LogSystemStatus">
            <summary>
            Gets or sets a value that indicates whether the task should periodically log processor and memory usage status.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.ProgressInterval">
            <summary>
            Gets or sets the progress interval.
            </summary>
            <value>The progress interval.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.HeartbeatInterval">
            <summary>
            Gets or sets the heartbeat interval.
            </summary>
            <value>The heartbeat interval.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.TaskTimeout">
            <summary>
            Gets or sets the timeout, in milliseconds, after which a task is declared dead if it hasn't reported progress.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerConfigurationElement.ImmediateCompletedTaskNotification">
            <summary>
            Gets or sets a value indicating whether the task server immediately notifies the job server when a task completes.
            </summary>
            <value>
            	<see langword="true"/> if the task server immediately notifies the job server of a completed task; <see langword="false"/> to wait for the next heartbeat instead.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskServerHeartbeatCommand">
            <summary>
            Commands that the job server can send to a task server in response to a hearbeat.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskServerHeartbeatCommand.None">
            <summary>
            The job server doesn't have a command for the task server.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskServerHeartbeatCommand.ReportStatus">
            <summary>
            The task server should send a <see cref="T:Ookii.Jumbo.Jet.InitialStatusJetHeartbeatData"/> in the next heartbeat.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskServerHeartbeatCommand.RunTask">
            <summary>
            The task server should execute the specified task.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskServerHeartbeatCommand.CleanupJob">
            <summary>
            Cleans up all data related to the tasks of the specified job.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskServerHeartbeatCommand.KillTask">
            <summary>
            The task server should kill the specified task attempt.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskServerMetrics">
            <summary>
            Provides information about task servers.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskServerMetrics.TaskSlots">
            <summary>
            Gets or sets the maximum number of tasks that this server can run.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskServerMetrics.ToString">
            <summary>
            Returns a string representation of the current <see cref="T:Ookii.Jumbo.Jet.TaskServerMetrics"/>.
            </summary>
            <returns>A string representation of the current <see cref="T:Ookii.Jumbo.Jet.TaskServerMetrics"/>.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskState">
            <summary>
            Indicates the current state of a task.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskState.Created">
            <summary>
            The task has been loaded by the job server, but has not been assigned to a task server yet.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskState.Scheduled">
            <summary>
            The task has been assigned to a task server, but has not been started yet.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskState.Running">
            <summary>
            The task server has been told to start executing the task.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskState.Finished">
            <summary>
            The task has finished executing successfully.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskState.Error">
            <summary>
            The task has encountered an error in its previous attempt.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.TaskState.Aborted">
            <summary>
            The task was aborted (usually because the job failed).
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskStatus">
            <summary>
            Provides status information about a task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.TaskId">
            <summary>
            Gets or sets the ID of this task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.State">
            <summary>
            Gets or sets the current state of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.TaskServer">
            <summary>
            Gets or sets the task server that a job is assigned to.
            </summary>
            <remarks>
            If there has been more than one attempt, this information only applies to the current attempt.
            </remarks>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.Attempts">
            <summary>
            Gets or sets the number of times this task has been attempted.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.StartTime">
            <summary>
            Gets or sets the UTC start time of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.EndTime">
            <summary>
            Gets or sets the UTC end time of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.TaskProgress">
            <summary>
            Gets or sets the progress of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.Metrics">
            <summary>
            Gets or sets the metrics collected during task execution.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.Progress">
            <summary>
            Gets the overall progress of the task.
            </summary>
            <value>The overall progress.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.DataDistance">
            <summary>
            Gets or sets the distance to the input data, if this task read from the DFS.
            </summary>
            <value>-1 if this task didn't read from the DFS, 0 if this task was scheduled data-local, 1 if it was rack-local, 2 if it was neither data nor rack-local.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.Duration">
            <summary>
            Gets the duration of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatus.StartOffset">
            <summary>
            The amount of time after the start of the job that this task started.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskStatus.ToXml">
            <summary>
            Gets an XML element containing the task status.
            </summary>
            <returns>An <see cref="T:System.Xml.Linq.XElement"/> containing the task status.</returns>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskStatus.FromXml(System.Xml.Linq.XElement,Ookii.Jumbo.Jet.JobStatus)">
            <summary>
            Creates a <see cref="T:Ookii.Jumbo.Jet.TaskStatus"/> instance from an XML element.
            </summary>
            <param name="task">The XML element containing the task status.</param>
            <param name="job">The job that this task belongs to.</param>
            <returns>A new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskStatus"/> class with the information from the XML document.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData">
            <summary>
            Heartbeat data used to inform the job server that the status of a task has changed.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData.#ctor(System.Guid,Ookii.Jumbo.Jet.TaskAttemptId,Ookii.Jumbo.Jet.TaskAttemptStatus,Ookii.Jumbo.Jet.TaskProgress,Ookii.Jumbo.Jet.TaskMetrics)">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData"/> class.
            </summary>
            <param name="jobId">The job ID.</param>
            <param name="taskAttemptId">The task ID.</param>
            <param name="status">The new status.</param>
            <param name="progress">The progress of the task.</param>
            <param name="metrics">The metrics collected during task execution.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData.JobId">
            <summary>
            Gets the ID of the job containing the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData.TaskAttemptId">
            <summary>
            Gets the ID of the task whose status has changed.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData.Status">
            <summary>
            Gets the new status of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData.Progress">
            <summary>
            Gets the progress of the task.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TaskStatusChangedJetHeartbeatData.Metrics">
            <summary>
            Gets the metrics collected during task execution.
            </summary>
            <value>The metrics.</value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2">
            <summary>
            Base class for tasks that accumulate values associated with a specific key.
            </summary>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
            <remarks>
            <para>
              It is safe to reuse the same <see cref="T:Ookii.Jumbo.IO.Pair`2"/> in every call to
              <see cref="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.ProcessRecord(Ookii.Jumbo.IO.Pair{`0,`1},Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.Pair{`0,`1}})"/> if the key and value are either value types or 
              implement <see cref="T:System.ICloneable"/>. Therefore, if you specify the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> on a class
              deriving from this class, the key and value must either be value types or
              implement <see cref="T:System.ICloneable"/>.
            </para>
            <para>
              You can specify a custom key comparer using the <see cref="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.AccumulatorTaskKeyComparerSettingKey"/> key
              in the stage settings. Note that it is recommended to also use that has the comparer type for the <see cref="T:Ookii.Jumbo.Jet.HashPartitioner`1"/> in that case.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.ProcessRecord(Ookii.Jumbo.IO.Pair{`0,`1},Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.Pair{`0,`1}})">
            <summary>
            Method called for each record in the task's input.
            </summary>
            <param name="record">The record to process.</param>
            <param name="output">The <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.Finish(Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.Pair{`0,`1}})">
            <summary>
            Method called after the last record was processed.
            </summary>
            <param name="output">The <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
            <remarks>
            This enables the task to finish up its processing and write any further records it may have collected during processing.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.Accumulate(`0,`1,`1)">
            <summary>
            When implemented in a derived class, accumulates the values of the records.
            </summary>
            <param name="key">The key of the record.</param>
            <param name="currentValue">The current value associated with the key.</param>
            <param name="newValue">The new value associated with the key.</param>
            <returns>The new value.</returns>
            <remarks>
            <para>
              If <typeparamref name="TValue"/> is a mutable reference type, it is recommended for performance reasons to update the
              existing instance passed in <paramref name="currentValue"/> and then return that same instance from this method.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)" /> calls this method
            after setting the configuration.
            </summary>
            <exception cref="T:System.InvalidOperationException">Cannot change configuration after accumulation has started.</exception>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.EmptyTask`1">
            <summary>
            A task that does nothing, but simply forwards the records to the output unmodified.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <remarks>
            This task is useful if you immediately want to partition your input without processing it first.
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.EmptyTask`1.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{`0})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">The input for the task.</param>
            <param name="output">The output for the task.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.GenerateInt32PairTask`1">
            <summary>
            Generates a key/value pair for each record in the input where the value is an <see cref="T:System.Int32"/>.
            </summary>
            <typeparam name="T">The type of the records.</typeparam>
            <remarks>
            <para>
              The value assigned to each key/value pair is 1 by default, but can be overridden by specifying a setting
              with the <see cref="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.GeneratePairTaskDefaultValueKey"/> in the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.GenerateInt32PairTask`1.Run(Ookii.Jumbo.IO.RecordReader{`0},Ookii.Jumbo.IO.RecordWriter{Ookii.Jumbo.IO.Pair{`0,System.Int32}})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the task's input can be read.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.GenerateInt32PairTask`1.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.GeneratorTask`1">
            <summary>
            Base class for tasks generated by the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Generate``1(System.Int32,System.Action{Ookii.Jumbo.IO.RecordWriter{``0},Ookii.Jumbo.Jet.Tasks.ProgressContext})"/> method.
            </summary>
            <typeparam name="T">The record type</typeparam>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.GeneratorTask`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Tasks.GeneratorTask`1"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.GeneratorTask`1.Run(Ookii.Jumbo.IO.RecordReader{System.Int32},Ookii.Jumbo.IO.RecordWriter{`0})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the task's input can be read.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.GeneratorTask`1.Generate(Ookii.Jumbo.IO.RecordWriter{`0},Ookii.Jumbo.Jet.Tasks.ProgressContext)">
            <summary>
            Generates data.
            </summary>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
            <param name="context">The <see cref="T:Ookii.Jumbo.Jet.Tasks.ProgressContext"/> that can be used to report progress.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Tasks.GeneratorTask`1.AdditionalProgress">
            <summary>
            Gets the additional progress value.
            </summary>
            <value>
            The additional progress value.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.NoInputTask`1">
            <summary>
            Provides a more convenient interface for tasks that have no input.
            </summary>
            <typeparam name="T">The type of the output records.</typeparam>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.NoInputTask`1.Run(Ookii.Jumbo.IO.RecordReader{System.Int32},Ookii.Jumbo.IO.RecordWriter{`0})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the task's input can be read.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.NoInputTask`1.Run(Ookii.Jumbo.IO.RecordWriter{`0})">
            <summary>
            Runs the task.
            </summary>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Tasks.NoInputTask`1.AdditionalProgress">
            <summary>
            Gets the additional progress value.
            </summary>
            <value>
            The additional progress value.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.ProgressContext">
            <summary>
            Provides a method for task functions used with the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.Generate``1(System.Int32,System.Action{Ookii.Jumbo.IO.RecordWriter{``0},Ookii.Jumbo.Jet.Tasks.ProgressContext})"/> method
            to report progress.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Tasks.ProgressContext.TaskContext">
            <summary>
            Gets the task context for this task.
            </summary>
            <value>
            The <see cref="P:Ookii.Jumbo.Jet.Tasks.ProgressContext.TaskContext"/> for this task.
            </value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.Tasks.ProgressContext.Progress">
            <summary>
            Gets or sets the progress of task.
            </summary>
            <value>
            The progress of the task, between 0 and 1.
            </value>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3">
            <summary>
            Abstract base class for reduce tasks.
            </summary>
            <typeparam name="TKey">The type of the key of the input records.</typeparam>
            <typeparam name="TValue">The type of the value of the input records.</typeparam>
            <typeparam name="TOutput">The type of the output records.</typeparam>
            <remarks>
            <note>
              This task requires that the input is sorted by key.
            </note>
            <para>
              Because the <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/> class is a pull task, it is not recommended to use
              it as the receiving stage of an in-process channel.
            </para>
            <para>
              If the reduce function could be calculated incrementally, <see cref="T:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2"/> often offers
              much better performance than sorting and using a reduce task.
            </para>
            <para>
              You may specify the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> attribute on classes deriving from this type
              only if <typeparamref name="TKey"/> is a value type or implements <see cref="T:System.ICloneable"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/> class.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.Run(Ookii.Jumbo.IO.RecordReader{Ookii.Jumbo.IO.Pair{`0,`1}},Ookii.Jumbo.IO.RecordWriter{`2})">
            <summary>
            Runs the task.
            </summary>
            <param name="input">A <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/> from which the task's input can be read.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.ReduceTask`3.Reduce(`0,System.Collections.Generic.IEnumerable{`1},Ookii.Jumbo.IO.RecordWriter{`2})">
            <summary>
            Reduces the values for the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="values">The values associated with the key.</param>
            <param name="output">A <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.SortTask`1">
            <summary>
            Performs an in-memory sort of its input records. The sorting algorithm used is QuickSort.
            </summary>
            <typeparam name="T">The record type.</typeparam>
            <remarks>
            <note>
              The class that generates the input for this task (which can be either another task if a pipeline channel is used, or a <see cref="T:Ookii.Jumbo.IO.RecordReader`1"/>)
              may not reuse the record instances for the records.
            </note>
            <note>
              This task performs an in-memory sort of all records. Use it to sort small amounts of records only. For large (or unknown) numbers of records, use the file channel with <see cref="F:Ookii.Jumbo.Jet.Channels.FileChannelOutputType.SortSpill"/>
              (e.g. using the <see cref="M:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder.SpillSortCombine(Ookii.Jumbo.Jet.Jobs.Builder.IOperationInput,System.Type,System.Type)"/> function).
            </note>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.SortTask`1.NotifyConfigurationChanged">
            <summary>
            Indicates the configuration has been changed. <see cref="M:Ookii.Jumbo.Jet.JetActivator.ApplyConfiguration(System.Object,Ookii.Jumbo.Dfs.DfsConfiguration,Ookii.Jumbo.Jet.JetConfiguration,Ookii.Jumbo.Jet.TaskContext)"/> calls this method
            after setting the configuration.
            </summary>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.SortTask`1.ProcessRecord(`0,System.Int32,Ookii.Jumbo.Jet.PrepartitionedRecordWriter{`0})">
            <summary>
            Method called for each record in the task's input.
            </summary>
            <param name="record">The record to process.</param>
            <param name="partition">The partition of the record</param>
            <param name="output">The <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.SortTask`1.Finish(Ookii.Jumbo.Jet.PrepartitionedRecordWriter{`0})">
            <summary>
            Method called after the last record was processed.
            </summary>
            <param name="output">The <see cref="T:Ookii.Jumbo.IO.RecordWriter`1"/> to which the task's output should be written.</param>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.SumTask`1">
            <summary>
            Task that computes the sum of the value of each key in the input data.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <remarks>
            <para>
              Because this class has the <see cref="T:Ookii.Jumbo.Jet.AllowRecordReuseAttribute"/> set,
              <typeparamref name="TKey"/> must be either a value type or implement
              <see cref="T:System.ICloneable"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Ookii.Jumbo.Jet.Tasks.SumTask`1.Accumulate(`0,System.Int32,System.Int32)">
            <summary>
            Updates the sum for the specified key.
            </summary>
            <param name="key">The key of the record.</param>
            <param name="currentValue">The current value associated with the key.</param>
            <param name="newValue">The new value associated with the key.</param>
            <returns>The updated value, which is the sum of the current value and the new value.</returns>
        </member>
        <member name="T:Ookii.Jumbo.Jet.Tasks.TaskConstants">
            <summary>
            Provides constants for use with the built-in tasks.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.SortTaskComparerSettingKey">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the <see cref="T:System.Collections.Generic.IComparer`1"/>
            to use for the <see cref="T:Ookii.Jumbo.Jet.Tasks.SortTask`1"/>. The value of the setting is a <see cref="T:System.String"/> that specifies the assembly-qualified type name of the comparer.
            The default value is <see langword="null"/>, indicating the <see cref="P:System.Collections.Generic.Comparer`1.Default"/> will be used.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.SortTaskUseParallelSortSettingKey">
            <summary>
            The name of the setting in the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> or <see cref="P:Ookii.Jumbo.Jet.Jobs.JobConfiguration.JobSettings"/> that specifies whether to use
            parallel sorting in the <see cref="T:Ookii.Jumbo.Jet.Tasks.SortTask`1"/>. The type of the setting is <see cref="T:System.Boolean"/>. The default value is <see langword="true"/>. Stage settings take precedence over
            job settings.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.GeneratePairTaskDefaultValueKey">
            <summary>
            The name of the setting in the <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that determines the default value assigned to every key/value pair by
            the <see cref="T:Ookii.Jumbo.Jet.Tasks.GenerateInt32PairTask`1"/>. The type of the setting is <see cref="T:System.Int32"/>. This setting can only be
            specified in the stage settings, not in the job settings.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.ReduceTaskKeyComparerSettingKey">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>
            to use for the <see cref="T:Ookii.Jumbo.Jet.Tasks.ReduceTask`3"/>. The value of the setting is a <see cref="T:System.String"/> that specifies the assembly-qualified type name of the comparer.
            The default value is <see langword="null"/>, indicating the <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/> will be used.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.AccumulatorTaskKeyComparerSettingKey">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>
            to use for the <see cref="T:Ookii.Jumbo.Jet.Tasks.AccumulatorTask`2"/>. The value of the setting is a <see cref="T:System.String"/> that specifies the assembly-qualified type name of the comparer.
            The default value is <see langword="null"/>, indicating the <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/> will be used.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.JobBuilderDelegateTypeSettingKey">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the delegate type
            used in a task type that uses a delegate. The value of the setting is a  <see cref="T:System.String"/> that
            specifies the assembly-qualified type name. This setting is used by the
            <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> and should not normally be used by your code.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.JobBuilderDelegateMethodTypeSettingKey">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the type that declares
            a method to be called using a delegate in a task type that uses a delegate. The value of the setting is a 
            <see cref="T:System.String"/> that specifies the assembly-qualified type name. This setting is used by the
            <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> and should not normally be used by your code.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.JobBuilderDelegateMethodSettingKey">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the name of
            a method to be called using a delegate in a task type that uses a delegate. The value of the setting is a 
            <see cref="T:System.String"/> that specifies the method name. This setting is used by the
            <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> and should not normally be used by your code.
            </summary>
        </member>
        <member name="F:Ookii.Jumbo.Jet.Tasks.TaskConstants.JobBuilderDelegateTargetSettingKey">
            <summary>
            The name of the setting in <see cref="P:Ookii.Jumbo.Jet.Jobs.StageConfiguration.StageSettings"/> that specifies the target
            for invoking a delegate in a task type that uses a delegate. The value of the setting is a 
            <see cref="T:System.String"/> that specifies the base64-encoded binary serialization of the object. This setting is used by the
            <see cref="T:Ookii.Jumbo.Jet.Jobs.Builder.JobBuilder"/> and should not normally be used by your code.
            </summary>
        </member>
        <member name="T:Ookii.Jumbo.Jet.TcpChannelConfigurationElement">
            <summary>
            Provides configuration information for the TCP channel.
            </summary>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TcpChannelConfigurationElement.SpillBufferSize">
            <summary>
            Gets or sets the size of the spill buffer used by the TCP output channel to collect records before sending them to the receiving stage.
            </summary>
            <value>The size of the spill buffer. The default value is 20MB.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TcpChannelConfigurationElement.SpillBufferLimit">
            <summary>
            Gets or sets the usage limit of the spill buffer, between 0 and 1, which triggers a spill.
            </summary>
            <value>The spill buffer limit, between 0 and 1. The default value is 0.6.</value>
        </member>
        <member name="P:Ookii.Jumbo.Jet.TcpChannelConfigurationElement.ReuseConnections">
            <summary>
            Gets or sets a value indicating whether the TCP output channel keeps the connections to the receiving stage open.
            </summary>
            <value>
            	<see langword="true"/> if the connections are kept open; <see langword="false"/> if a new connection is made for each segment.
            	The default value is <see langword="false"/>.
            </value>
        </member>
    </members>
</doc>
